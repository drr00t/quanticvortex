cscope 15 /cygdrive/e/QuanticVortex/engine samples               0000113841
	@..\engine\include\qvActorTypes.h

28 #i‚de‡
__ACTOR_TYPES_H_


29 
	#__ACTOR_TYPES_H_


	)

31 
	~"qvSHashedSåög.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	ggamög


40 
SHashedSåög
 
	tAI_ACTOR_ID
;

41 
SHashedSåög
 
	tAT_ACTOR_TYPE
;

43 c⁄° 
AT_ACTOR_TYPE
 
AT_ACTOR_CAMERA
("AT_ACTOR_CAMERA");

44 c⁄° 
AT_ACTOR_TYPE
 
AT_ACTOR_PLAYER
("AT_ACTOR_PLAYER");

	@..\engine\include\qvCommandTypes.h

28 #i‚de‡
__COMMAND_TYPES_H_


29 
	#__COMMAND_TYPES_H_


	)

31 
	~"qvSHashedSåög.h
"

34 
«me•a˚
 
	gqv


36 
SHashedSåög
 
	tCI_COMMAND_ID
;

37 
SHashedSåög
 
	tCT_COMMAND_TYPE
;

40 c⁄° 
CT_COMMAND_TYPE
 
CT_COMMAND_EVENT
("EVENT TRANSLATOR");

41 c⁄° 
CT_COMMAND_TYPE
 
CT_COMMAND_INPUT
("INPUT TRANSLATOR");

	@..\engine\include\qvCompileConfig.h

28 #i‚de‡
__COMPILE_CONFIG_H_


29 
	#__COMPILE_CONFIG_H_


	)

31 
	~"qvC⁄figProfûe.h
"

34 
	#QUANTICVORTEX_VERSION_MAJOR
 0

	)

35 
	#QUANTICVORTEX_VERSION_MINOR
 2

	)

36 
	#QUANTICVORTEX_VERSION_REVISION
 0

	)

41 
	#QUANTICVORTEX_SDK_VERSION
 "0.2"

	)

46 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
Ë|| deföed(
WIN32
Ë|| deföed(
WIN64
)

47 
	#_QUANTICVORTEX_PLATAFORM_
 
PLATAFORM_WINDOWS


	)

51 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER < 1300)

60 #i‚de‡
_QUANTICVORTEX_STATIC_LIB_


61 #ifde‡
_QUANTICVORTEX_EXPORTS


62 
	#_QUANTICVORTEX_API_
 
	`__de˛•ec
(
dŒexp‹t
)

	)

64 
	#_QUANTICVORTEX_API_
 
	`__de˛•ec
(
dŒimp‹t
)

	)

67 
	#_QUANTICVORTEX_API_


	)

71 #i‡
deföed
(
_STDCALL_SUPPORTED
)

72 
	#QUANTICVORTEX_CALLCONV
 
__°dˇŒ


	)

74 
	#QUANTICVORTEX_CALLCONV
 
__cde˛


	)

	@..\engine\include\qvConcurrentArray.h

6 
	~"qvPªªquisôes.h
"

9 
«me•a˚
 
	gqv


	@..\engine\include\qvConfig.h

27 #i‚de‡
_QUANTICVORTEX_CONFIG_H_


28 
	#_QUANTICVORTEX_CONFIG_H_


	)

30 
	~"qvC⁄figProfûe.h
"

34 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
Ë|| deföed(
WIN32
Ë|| deföed(
WIN64
)

35 
	#QUANTICVORTEX_PLATAFORM
 
PLATAFORM_WINDOWS


	)

36 
	~<wödows.h
>

37 #unde‡
NOMINMAX


38 
	#NOMINMAX


	)

41 #i‡
QUANTICVORTEX_PLATAFORM
 =
PLATAFORM_WINDOWS


42 #i‚de‡
_QUANTICVORTEX_STATIC_LIB_


44 #ifde‡
_QUANTICVORTEX_EXPORTS


45 
	#_QUANTICVORTEX_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

47 
	#_QUANTICVORTEX_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

50 
	#_QUANTICVORTEX_API


	)

55 #i‡
deföed
(
_STDCALL_SUPPORTED
)

56 
	#QUANTICVORTEX_CALLCONV
 
__°dˇŒ


	)

58 
	#QUANTICVORTEX_CALLCONV
 
__cde˛


	)

62 
	#QUANTICVORTEX_PHYSICS
 
PHYSICS_BULLET


	)

63 
	#QUANTICVORTEX_RENDER
 
RENDER_IRRLICHT


	)

	@..\engine\include\qvConfigProfile.h

27 #i‚de‡
_QUANTICVORTEX_CONFIG_PROFILE_H_


28 
	#_QUANTICVORTEX_CONFIG_PROFILE_H_


	)

31 
	#PLATAFORM_WINDOWS
 1

	)

32 
	#PLATAFORM_LINUX
 2

33 
	#PLATAFORM_MACOS
 3

34 
	#PLATAFORM_PS3
 4

35 
	#PLATAFORM_XBOX
 5

36 

	)

38 
	#PHYSICS_BULLET
 1

	)

39 
	#PHYSICS_NEWTON
 2

40 
	#PHYSICS_PHYSX
 3

41 
	#PHYSICS_HAVOK
 4

42 

	)

44 
	#RENDER_IRRLICHT
 1

	)

45 
	#RENDER_OGRE3D
 2

46 

	)

47 
	#RENDER
 
RENDER_IRRLICHT


	)

	@..\engine\include\qvEventTypes.h

28 #i‚de‡
__EVENT_TYPES_H_


29 
	#__EVENT_TYPES_H_


	)

31 
	~"qvPªªquisôes.h
"

32 
	~"qvSHashedSåög.h
"

34 
	~<ve˘‹
>

37 
«me•a˚
 
	gqv


39 
«me•a˚
 
	gevíts


41 
SHashedSåög
 
	tET_EVENT_TYPE
;

43 
	g°d
::
	tve˘‹
<
	tu32
> 
	tEvítHashTy≥sVe˘‹
;

44 
	g°d
::
	tve˘‹
<
	tET_EVENT_TYPE
*> 
	tEvítTy≥sVe˘‹
;

47 c⁄° 
ET_EVENT_TYPE
 
ET_GRAPHICS_STARTED
("ET_GRAPHICS_STARTED");

48 c⁄° 
ET_EVENT_TYPE
 
ET_GRAPHICS_STOPPED
("ET_GRAPHICS_STOPPED");

50 c⁄° 
ET_EVENT_TYPE
 
ET_EVENT_SYSTEM_STARTED
("ET_EVENT_SYSTEM_STARTED");

51 c⁄° 
ET_EVENT_TYPE
 
ET_EVENT_SYSTEM_STOPPED
("ET_EVENT_SYSTEM_STOPPED");

54 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_LOAD
("ET_GAME_LOAD");

55 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_NEW
("ET_GAME_NEW");

56 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_OPTIONS
("ET_GAME_OPTIONS");

57 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_PAUSE
("ET_GAME_PAUSE");

58 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_QUIT
("ET_GAME_QUIT");

59 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_SAVE
("ET_GAME_SAVE");

60 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_STATE_CHANGE
("ET_GAME_STATE_CHANGE");

61 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_UNPAUSE
("ET_GAME_PAUSE");

64 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_LOGIC_STARTED
("ET_GAME_LOGIC_STARTED");

65 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_LOGIC_STOPPED
("ET_GAME_LOGIC_STOPPED");

66 c⁄° 
ET_EVENT_TYPE
 
ET_GAME_LOGIC_TICK_UPDATE
("ET_GAME_LOGIC_TICK");

68 c⁄° 
ET_EVENT_TYPE
 
ET_HUMAN_VIEW_ATTACHED
("ET_HUMAN_VIEW_ATTACHED");

69 c⁄° 
ET_EVENT_TYPE
 
ET_HUMAN_VIEW_DETACHED
("ET_HUMAN_VIEW_DETACHED");

71 c⁄° 
ET_EVENT_TYPE
 
ET_PHYSICS_STARTED
("ET_PHYSICS_STARTED");

72 c⁄° 
ET_EVENT_TYPE
 
ET_PHYSICS_STOPPED
("ET_PHYSICS_STOPPED");

74 c⁄° 
ET_EVENT_TYPE
 
ET_CAMERA_ACTOR_ADDED
("ET_CAMERA_ACTOR_ADDED");

76 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_CREATED
("ET_ACTOR_CREATED");

77 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_DESTROYED
("ET_ACTOR_DESTROYED");

78 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_MOVE
("ET_ACTOR_MOVE");

79 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_COLLIDE
("ET_ACTOR_COLLIDE");

81 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_DIE
("ET_ACTOR_PLAYER_DIE");

82 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_JUMP
("ET_ACTOR_PLAYER_JUMP");

83 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_MOVE
("ET_ACTOR_PLAYER_MOVE");

84 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_NEW
("ET_ACTOR_PLAYER_NEW");

85 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_TURN
("ET_ACTOR_PLAYER_TURN");

86 c⁄° 
ET_EVENT_TYPE
 
ET_ACTOR_PLAYER_COLLIDE
("ET_ACTOR_PLAYER_COLLIDE");

	@..\engine\include\qvGameParameters.h

2 #i‚de‡
__GAMEPARAMETERS_H_


3 
	#__GAMEPARAMETERS_H_


	)

5 
	~"qvPªªquisôes.h
"

7 
	~"úrSåög.h
"

8 
	~"IAâribuãExch™gögObje˘.h
"

10 
«me•a˚
 
	gqv


12 ˛as†
	cGameP¨amëîs
 : 
public
 
vútuÆ
 
úr
::
io
::
IAâribuãExch™gögObje˘


15 
¥Ÿe˘ed
:

16 
úr
::
c‹e
::
°rögc
 
mGameTôÀ
;

17 
	gúr
::
c‹e
::
°rögc
 
mGameAµDúe˘‹y
;

18 
	gúr
::
c‹e
::
°rögc
 
mU£rHomeDúe˘‹y
;

20 
	gpublic
:

22 
GameP¨amëîs
();

23 
	gvútuÆ
 ~
GameP¨amëîs
();

25 
	gúr
::
c‹e
::
°rögc
& 
gameAµDúe˘‹y
();

26 
	gúr
::
c‹e
::
°rögc
& 
u£rHomeDúe˘‹y
();

28 
vútuÆ
 
boﬁ
 
lﬂdGame
() = 0;

29 
vútuÆ
 
¸óãGameAndVõw
() = 0;

33 
vútuÆ
 
£rülizeAâribuãs
(
úr
::
io
::
IAâribuãs
* 
out
, iº::io::
SAâribuãRódWrôeO±i⁄s
* 
›ti⁄s
=0) const;

34 
vútuÆ
 
de£rülizeAâribuãs
(
úr
::
io
::
IAâribuãs
* 
ö
, iº::io::
SAâribuãRódWrôeO±i⁄s
* 
›ti⁄s
=0);

	@..\engine\include\qvGameStateTypes.h

27 #i‚de‡
__GAME_STATE_TYPES_H_


28 
	#__GAME_STATE_TYPES_H_


	)

30 
	~"qvSèãTy≥s.h
"

32 
«me•a˚
 
	gqv


34 
«me•a˚
 
	ggamög


36 c⁄° 
S_STATE
 *
	gS_GAME_STATE_INITIALIZATING
 = 
√w
 S_STATE("S_STATE_INITIALIZATING");

37 c⁄° 
S_STATE
 *
	gS_GAME_STATE_MENU
 = 
√w
 S_STATE("S_STATE_MENU");

38 c⁄° 
S_STATE
 *
	gS_GAME_STATE_LOADING
 = 
√w
 S_STATE("S_STATE_LOADING");

39 c⁄° 
S_STATE
 *
	gS_GAME_STATE_WAITING_PLAYER
 = 
√w
 S_STATE("S_STATE_WAITING_PLAYER");

40 c⁄° 
S_STATE
 *
	gS_GAME_STATE_RUNNING
 = 
√w
 S_STATE("S_STATE_RUNNING");

	@..\engine\include\qvGameViewTypes.h

28 #i‚de‡
__GAME_VIEW_TYPES_H_


29 
	#__GAME_VIEW_TYPES_H_


	)

31 
	~"qvSHashedSåög.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	gvõws


38 
SHashedSåög
 
	tGVI_GAME_VIEW_ID
;

39 
SHashedSåög
 
	tGVT_GAME_VIEW_TYPE
;

42 c⁄° 
GVT_GAME_VIEW_TYPE
 
GVT_GAME_VIEW_AI
("GVT_GAME_VIEW_AI");

43 c⁄° 
GVT_GAME_VIEW_TYPE
 
GVT_GAME_VIEW_HUMAN
("GVT_GAME_VIEW_HUMAN");

44 c⁄° 
GVT_GAME_VIEW_TYPE
 
GVT_GAME_VIEW_NETWORK
("GVT_GAME_VIEW_NETWORK");

45 c⁄° 
GVT_GAME_VIEW_TYPE
 
GVT_GAME_VIEW_PHYSICS
("GVT_GAME_VIEW_PHYSICS");

46 c⁄° 
GVT_GAME_VIEW_TYPE
 
GVT_GAME_VIEW_RECORDER
("GVT_GAME_VIEW_RECORDER");

	@..\engine\include\qvHashFunctions.h

28 #i‚de‡
__HASH_FUNCTIONS_H_


29 
	#__HASH_FUNCTIONS_H_


	)

31 
	~"qvCompûeC⁄fig.h
"

32 
	~"qvTy≥s.h
"

34 
«me•a˚
 
	gqv


53 
_QUANTICVORTEX_API_
 
u32
 
QUANTICVORTEX_CALLCONV
 
¸óãMurmurHash2
 ( c⁄° * 
key
, u32 
Àn
, u32 
£ed
 = 0);

	@..\engine\include\qvIAIView.h

28 #i‚de‡
__HUMANVIEW_H_


29 
	#__HUMANVIEW_H_


	)

32 
	~"qvIGameVõw.h
"

33 
	~"qvIEÀmítVõw.h
"

37 
usög
 
«me•a˚
 
	gúr
::
gui
;

39 
usög
 
«me•a˚
 
	gqv
::
gamög
;

47 
«me•a˚
 
	gqv


49 
˛ass
 
	gEngöeM™agî
;

51 
«me•a˚
 
	gvõws


53 ˛as†
	cHum™Võw
: 
public
 
IGameVõw


56 
¥Ÿe˘ed
:

57 
GameVõwID
 
mVõwID
;

58 
E_GAME_VIEW_TYPE
 
	gmTy≥
;

59 
EÀmítVõwLi°
 
	gmEÀmítVõws
;

61 
A˘‹ID
* 
	gmA˘‹ID
;

63 
IGUIF⁄t
* 
	gmF⁄t
;

68 
f32
 
	gmCuºítTime
;

69 
f32
 
	gmLa°Upd©eTime
;

70 
f32
 
	gmAccumuœt‹Time
;

81 
	gpublic
:

82 
Hum™Võw
–c⁄° 
c8
* 
võwID
);

83 
	gvútuÆ
 ~
Hum™Võw
();

85 
vútuÆ
 
E_GAME_VIEW_TYPE
 
gëTy≥
()

87  
	gmTy≥
;

90 
vútuÆ
 c⁄° 
	gGameVõwID
& 
gëID
() const

92  
	gmVõwID
;

95 
vútuÆ
 
lo°Devi˚
();

96 
vútuÆ
 
©èch
(c⁄° 
GameVõwID
& 
võwID
, 
A˘‹ID
* 
a˘‹ID
=0);

97 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
);

98 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

101 
vútuÆ
 
pushEÀmít
(
IEÀmítVõw
* 
ñemít
);

102 
vútuÆ
 
p›EÀmít
(
IEÀmítVõw
* 
ñemít
);

	@..\engine\include\qvIActor.h

28 #i‚de‡
__I_ACTOR_H_


29 
	#__I_ACTOR_H_


	)

31 
	~"qvA˘‹Ty≥s.h
"

33 
	~"Poco/Sh¨edPå.h
"

34 
	~"úrAºay.h
"

35 
	~"úrM≠.h
"

36 
	~"úrLi°.h
"

39 
«me•a˚
 
	gqv


41 
«me•a˚
 
	ggamög


43 ˛as†
	cIA˘‹


45 
	gpublic
:

47 
vútuÆ
 
u32
 
gëHashId
() const = 0;

49 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

53 
vútuÆ
 
boﬁ
 
isVisibÀ
 () const = 0;

55 
vútuÆ
 
£tTy≥
–
u32
 
a˘‹HashTy≥
) = 0;

59 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
) const = 0;

62 
	gPoco
::
	tSh¨edPå
<
	tIA˘‹
> 
	tIA˘‹Sh¨edPå
;

63 
	gúr
::
	tc‹e
::
	tm≠
<
	tu32
, 
	tIA˘‹Sh¨edPå
> 
	tA˘‹sM≠
;

64 
	gúr
::
	tc‹e
::
	tli°
<
	tIA˘‹Sh¨edPå
> 
	tA˘‹sSh¨edPåLi°
;

65 
	gúr
::
	tc‹e
::
	t¨øy
<
	tIA˘‹Sh¨edPå
> 
	tA˘‹sSh¨edPåAºay
;

	@..\engine\include\qvIActorAddedEventArgs.h

28 #i‚de‡
__I_ACTOR_ADDED_EVENT_ARGS_H_


29 
	#__I_ACTOR_ADDED_EVENT_ARGS_H_


	)

31 
	~"qvIEvítArgs.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	ggamög


39 ˛as†
	cIA˘‹AddedEvítArgs
 : 
public
 
IEvítArgs


41 
public
:

42 
vútuÆ
 
u32
 
gëA˘‹ID
() const = 0;

44 
vútuÆ
 c⁄° 
c8
* 
gëA˘‹Name
() const = 0;

46 
vútuÆ
 
boﬁ
 
hasPhysicsBody
() const = 0;

48 
vútuÆ
 
	gs˚√
::
IS˚√Node
* 
gëS˚√Node
() = 0;

50 
vútuÆ
 c⁄° 
ve˘‹3df
* 
gëVñocôy
() const = 0;

	@..\engine\include\qvIActorFactory.h

28 #i‚de‡
__I_ACTOR_FACTORY_H_


29 
	#__I_ACTOR_FACTORY_H_


	)

31 
	~"qvIA˘‹.h
"

33 
	~"Poco/Sh¨edPå.h
"

34 
	~"úrAºay.h
"

35 
	~"úrLi°.h
"

37 
«me•a˚
 
	gqv


39 
«me•a˚
 
	ggamög


41 ˛as†
	cIA˘‹Fa˘‹y


43 
	gpublic
:

45 
vútuÆ
 
IA˘‹Sh¨edPå
 
addA˘‹
–c⁄° 
c8
 * 
a˘‹Name
, c⁄° 
u32
 & 
a˘‹HashTy≥
) = 0;

47 
vútuÆ
 
u32
 
gëCª©abÀA˘‹Ty≥Cou¡
() const = 0;

49 
vútuÆ
 
boﬁ
 
gëCª©óbÀA˘‹Ty≥
–c⁄° 
u32
 & 
a˘‹HashTy≥
) = 0;

52 
	gPoco
::
	tSh¨edPå
<
	tIA˘‹Fa˘‹y
> 
	tIA˘‹Fa˘‹ySh¨edPå
;

53 
	gúr
::
	tc‹e
::
	tli°
<
	tIA˘‹Fa˘‹ySh¨edPå
> 
	tA˘‹Fa˘‹ySh¨edPåLi°
;

54 
	gúr
::
	tc‹e
::
	t¨øy
<
	tIA˘‹Fa˘‹ySh¨edPå
> 
	tA˘‹Fa˘‹ySh¨edPåAºay
;

	@..\engine\include\qvIActorManager.h

28 #i‚de‡
__I_ACTOR_MANAGER_H_


29 
	#__I_ACTOR_MANAGER_H_


	)

31 
	~"qvIA˘‹.h
"

32 
	~"qvIA˘‹Fa˘‹y.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	ggamög


39 
˛ass
 
	gIA˘‹Fa˘‹y
;

41 ˛as†
	cIA˘‹M™agî


43 
vútuÆ
 
IA˘‹Sh¨edPå
 
addA˘‹
–c⁄° 
c8
* 
a˘‹Name
, 
u32
 
a˘‹HashTy≥
) = 0;

45 
vútuÆ
 
IA˘‹Sh¨edPå
 
addCamîaA˘‹
–
u32
 
a˘‹HashTy≥
) = 0;

47 
vútuÆ
 
IA˘‹Sh¨edPå
 
addPœyîA˘‹
–
u32
 
a˘‹HashTy≥
) = 0;

49 
vútuÆ
 
födA˘‹sByTy≥
–
u32
 
a˘‹HashTy≥
 , 
A˘‹sSh¨edPåAºay
& 
a˘‹s
) = 0;

51 
vútuÆ
 
IA˘‹Sh¨edPå
 
födA˘‹
(
u32
 
a˘‹HashId
) = 0;

53 
vútuÆ
 
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹y
 * 
Á˘‹y
) = 0;

55 
vútuÆ
 
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹ySh¨edPå
 
Á˘‹y
) = 0;

57 
vútuÆ
 
ªmoveA˘‹
–
u32
 
a˘‹HashId
) = 0;

60 
	gPoco
::
	tSh¨edPå
<
	tIA˘‹M™agî
> 
	tIA˘‹M™agîSh¨edPå
;

	@..\engine\include\qvIAnyKeyInputTranslator.h

28 #i‚de‡
_I_ANY_KEY_INPUT_TRANSLATOR_H_


29 
	#_I_ANY_KEY_INPUT_TRANSLATOR_H_


	)

31 
	~"qvII≈utTøn¶©‹.h
"

34 
«me•a˚
 
	gqv


42 
«me•a˚
 
	göput


44 
˛ass
 
	gII≈utRe˚ivî
;

46 c⁄° 
ITT_INPUT_TRANSLATOR_TYPE
 
ITT_ANY_KEY
("ITT_ANY_KEY_TYPE");

48 ˛as†
	cIAnyKeyI≈utTøn¶©‹
 : 
public
 
II≈utTøn¶©‹


	@..\engine\include\qvICommand.h

28 #i‚de‡
__I_COMMAND_H_


29 
	#__I_COMMAND_H_


	)

32 
	~"qvIEvítArgs.h
"

33 
	~"qvComm™dTy≥s.h
"

35 
	~"Poco/Sh¨edPå.h
"

36 
	~"úrAºay.h
"

37 
	~"úrLi°.h
"

40 
«me•a˚
 
	gqv


47 ˛as†
	cIComm™d


49 
	gpublic
:

50 
vútuÆ
 
u32
 
gëHashId
() const = 0;

52 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

54 
vútuÆ
 
execuãComm™d
(
evíts
::
IEvítArgsSh¨edPå
 
¨gs
) =0;

57 
	gPoco
::
	tSh¨edPå
<
	tIComm™d
> 
	tIComm™dSh¨edPå
;

58 
	gúr
::
	tc‹e
::
	tli°
<
	tIComm™dSh¨edPå
> 
	tComm™dLi°
;

59 
	gúr
::
	tc‹e
::
	t¨øy
<
	tIComm™dSh¨edPå
> 
	tComm™dAºay
;

	@..\engine\include\qvIElementView.h

27 #i‚de‡
__I_ELEMENT_VIEW_H_


28 
	#__I_ELEMENT_VIEW_H_


	)

30 
	~"qvSHashedSåög.h
"

32 
	~"Poco/Sh¨edPå.h
"

33 
	~"úrLi°.h
"

34 
	~"IRe„ªn˚Cou¡ed.h
"

36 
«me•a˚
 
	gqv


38 
«me•a˚
 
	gvõws


40 
SHashedSåög
 
	tEVI_ELEMENT_VIEW_ID
;

41 
SHashedSåög
 
	tEVT_ELEMENT_VIEW_TYPE
;

43 ˛as†
	cIEÀmítVõw
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


48 
public
:

52 
vútuÆ
 
u32
 
gëHashId
() const = 0;

54 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

56 
vútuÆ
 
boﬁ
 
gëVisibÀ
() const = 0;

58 
vútuÆ
 
£tVisibÀ
(
boﬁ
 
visibÀ
) = 0;

60 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

62 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
) = 0;

76 
	gPoco
::
	tSh¨edPå
<
	tIEÀmítVõw
> 
	tIEÀmítVõwSh¨edPå
;

77 
	gúr
::
	tc‹e
::
	tli°
<
	tIEÀmítVõwSh¨edPå
> 
	tEÀmítVõwLi°
;

	@..\engine\include\qvIElementViewFactory.h

28 #i‚de‡
__I_ELEMENT_VIEW_FACTORY_H_


29 
	#__I_ELEMENT_VIEW_FACTORY_H_


	)

31 
	~"qvIEÀmítVõw.h
"

33 
	~"IRe„ªn˚Cou¡ed.h
"

35 
«me•a˚
 
	gqv


37 
˛ass
 
	gIEngöeM™agî
;

39 
«me•a˚
 
	gvõws


42 ˛as†
	cIEÀmítVõwFa˘‹y
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


44 
public
:

46 
vútuÆ
 
IEÀmítVõwSh¨edPå
 
addEÀmítVõw
–c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
) = 0;

48 
vútuÆ
 
u32
 
gëCª©abÀEÀmítVõwTy≥Cou¡
() const = 0;

50 
vútuÆ
 
boﬁ
 
gëCª©óbÀEÀmítVõwTy≥
–
u32
 
ñemítVõwHashTy≥
) const = 0;

	@..\engine\include\qvIEngineManager.h

28 #i‚de‡
__I_ENGINE_MANAGER_H_


29 
	#__I_ENGINE_MANAGER_H_


	)

31 
	~"qvII≈utRe˚ivîDrivîFa˘‹y.h
"

32 
	~"qvSGameP¨ams.h
"

34 
	~"IRe„ªn˚Cou¡ed.h
"

36 
«me•a˚
 
	gqv


39 
	gSGameP¨ams
;

41 
«me•a˚
 
	gevíts


43 
˛ass
 
	gIEvítM™agî
;

46 
«me•a˚
 
	göput


48 
˛ass
 
	gII≈utRe˚ivî
;

51 
«me•a˚
 
	ggamög


53 
˛ass
 
	gIGameLogic
;

56 ˛as†
	cIEngöeM™agî
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


59 
public
:

60 
vútuÆ
 
boﬁ
 
öôülize
()=0;

62 
vútuÆ
 
föÆize
()=0;

64 
vútuÆ
 
s32
 
run
()=0;

66 
vútuÆ
 
begöRídî
(
boﬁ
 
backBuf„r
, boﬁ 
zBuf„r
)=0;

68 
vútuÆ
 
ídRídî
()=0;

71 
vútuÆ
 
ªgi°îI≈utRe˚ivîDrivîFa˘‹y
(
öput
::
II≈utRe˚ivîDrivîFa˘‹y
* 
Á˘‹y
)=0;

75 
vútuÆ
 
	ggamög
::
IGameLogic
* 
gëGameLogic
()=0;

79 
vútuÆ
 
	gevíts
::
IEvítM™agî
* 
gëEvítM™agî
()=0;

81 
vútuÆ
 
	göput
::
II≈utRe˚ivî
* 
gëI≈utRe˚ivî
()=0;

83 
vútuÆ
 
	gSGameP¨ams
& 
gëGameP¨amëîs
()=0;

95 
vútuÆ
 
£tQuô
(
boﬁ
 
quô
)=0;

	@..\engine\include\qvIEventArgs.h

28 #i‚de‡
__I_EVENT_ARGS_H_


29 
	#__I_EVENT_ARGS_H_


	)

31 
	~<li°
>

32 
	~<ve˘‹
>

34 
	~"qvEvítTy≥s.h
"

36 
	~"Poco/Sh¨edPå.h
"

39 
«me•a˚
 
	gqv


41 
«me•a˚
 
	gevíts


44 ˛as†
	cIEvítArgs


46 
	gpublic
:

47 
vútuÆ
 
u32
 
gëHashTy≥
( ) const = 0;

50 
	gPoco
::
	tSh¨edPå
<
	tIEvítArgs
> 
	tIEvítArgsSh¨edPå
;

51 
	g°d
::
	tve˘‹
<
	tIEvítArgsSh¨edPå
> 
	tEvítArgsVe˘‹
;

	@..\engine\include\qvIEventArgsFactory.h

28 #i‚de‡
__I_EVENT_ARGS_FACTORY_H_


29 
	#__I_EVENT_ARGS_FACTORY_H_


	)

31 
	~<ve˘‹
>

32 
	~"qvIEvítArgs.h
"

34 
«me•a˚
 
	gqv


38 
«me•a˚
 
	gevíts


40 ˛as†
	cIEvítArgsFa˘‹y


42 
	gpublic
:

44 
vútuÆ
 
IEvítArgsSh¨edPå
 
¸óãEvítArgs
–
u32
 
evítArgsHashty≥
) = 0;

46 
vútuÆ
 
u32
 
gëCª©abÀEvítArgsTy≥Cou¡
() const = 0;

48 
vútuÆ
 
boﬁ
 
gëCª©óbÀEvítArgsTy≥
–
u32
 
evítArgsHashty≥
) const = 0;

51 
	gPoco
::
	tSh¨edPå
<
	tIEvítArgsFa˘‹y
> 
	tIEvítArgsFa˘‹ySh¨edPå
;

52 
	g°d
::
	tve˘‹
<
	tIEvítArgsFa˘‹ySh¨edPå
> 
	tEvítArgsFa˘‹yVe˘‹
;

	@..\engine\include\qvIEventCommand.h

28 #i‚de‡
__I_EVENT_COMMAND_H_


29 
	#__I_EVENT_COMMAND_H_


	)

31 
	~"qvIComm™d.h
"

32 
	~"qvEvítTy≥s.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	gevíts


39 ˛as†
	cIEvítComm™d
: 
public
 
IComm™d


41 
public
:

42 
vútuÆ
 
u32
 
gëEvítArgsHashTy≥
() const =0;

45 
	gPoco
::
	tSh¨edPå
<
	tIEvítComm™d
> 
	tIEvítComm™dSh¨edPå
;

46 
	g°d
::
	tve˘‹
<
	tIEvítComm™dSh¨edPå
> 
	tEvítComm™dVe˘‹
;

47 
	g°d
::
	t∑ú
<
	tu32
, 
	tIEvítComm™dSh¨edPå
> 
	tEvítArgsEvítComm™dPaú
;

48 
	g°d
::
	tve˘‹
<
	tEvítArgsEvítComm™dPaú
*> 
	tEvítArgsEvítComm™dVe˘‹
;

	@..\engine\include\qvIEventManager.h

28 #i‚de‡
__I_EVENT_MANAGER_H_


29 
	#__I_EVENT_MANAGER_H_


	)

31 
	~"qvIEvítComm™d.h
"

32 
	~"qvIEvítArgs.h
"

34 
	~"qvSèãTy≥s.h
"

37 
«me•a˚
 
	gqv


39 
«me•a˚
 
	gevíts


43 
˛ass
 
	gIEvítArgsFa˘‹y
;

48 ˛as†
	cIEvítM™agî


51 
	gpublic
:

53 
vútuÆ
 
boﬁ
 
ªgi°îComm™dEvít
 ( 
IEvítComm™dSh¨edPå
 
comm™d
) = 0;

55 
vútuÆ
 
boﬁ
 
uƒegi°îComm™dEvít
 ( 
IEvítComm™dSh¨edPå
 
comm™d
) = 0;

58 
vútuÆ
 
IEvítArgsSh¨edPå
 
¸óãEm±yEvítArgs
–
u32
 
evítArgsHashty≥
) = 0;

64 
vútuÆ
 
ªgi°îEvítArgsFa˘‹y
(
IEvítArgsFa˘‹y
 * 
Á˘‹y
) = 0;

66 
vútuÆ
 
ªgi°îEvítTy≥
–
u32
 
evítHashTy≥
) = 0;

68 
vútuÆ
 
uƒegi°îEvítTy≥
–
u32
 
evítHashTy≥
) = 0;

70 
vútuÆ
 
boﬁ
 
ab‹tEvít
 ( 
u32
 
evítHashTy≥
, boﬁ 
Æl
 = 
Ál£
 ) = 0;

72 
vútuÆ
 
boﬁ
 
íqueueEvít
 (
IEvítArgsSh¨edPå
 
¨gs
) = 0;

74 
vútuÆ
 
boﬁ
 
¥o˚ss
 ( 
ªÆ
 
¥o˚ssögTime
) = 0;

76 
vútuÆ
 
boﬁ
 
åiggî
 ( 
IEvítArgsSh¨edPå
 
¨gs
 ) = 0;

78 
vútuÆ
 
boﬁ
 
vÆid©eTy≥
–
u32
 
evítHashTy≥
) = 0;

	@..\engine\include\qvIGame.h

2 #i‚de‡
__I_GAME_H_


3 
	#__I_GAME_H_


	)

5 
	~"qvIEngöeM™agî.h
"

8 
«me•a˚
 
	gqv


10 ˛as†
	cIGame
: 
public
 
IRe„ªn˚Cou¡ed


13 
public
:

15 
vútuÆ
 ~
IGame
()

17 
mEngöe
->
dr›
();

20 
vútuÆ
 
lﬂdC⁄figuøti⁄
(){}

21 
vútuÆ
 
s32
 
run
(s32 
¨gc
, 
c8
* 
¨gv
[])=0;

23 
	g¥Ÿe˘ed
:

24 
¸óãEngöe
()

36 
c⁄figuªEvíts
(){}

37 
c⁄figuªComm™ds
(){}

38 
c⁄figuªI≈utTøn¶©‹
(){}

39 
c⁄figuªGameSèãs
(){}

41 
qv
::
SGameP¨ams
 
mP¨ams
;

42 
IEngöeM™agî
* 
	gmEngöe
;

	@..\engine\include\qvIGameLogic.h

28 #i‚de‡
__I_GAME_LOGIC_H_


29 
	#__I_GAME_LOGIC_H_


	)

31 
	~"qvSHashedSåög.h
"

32 
	~"qvIA˘‹.h
"

33 
	~"qvIGameVõw.h
"

34 
	~"qvIPro˚ss.h
"

35 
	~"qvISèã.h
"

37 
	~"IRe„ªn˚Cou¡ed.h
"

39 
«me•a˚
 
	gqv


42 
«me•a˚
 
	gphysics


44 
˛ass
 
	gIPhysicsM™agî
;

47 
«me•a˚
 
	ggamög


50 ˛as†
	cIGameLogic
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


52 
public
:

54 
vútuÆ
 
boﬁ
 
öôülize
() const = 0;

56 
vútuÆ
 
boﬁ
 
föÆize
() const = 0;

58 
vútuÆ
 
IA˘‹Sh¨edPå
 
gëA˘‹
–
u32
 
a˘‹HashId
)=0;

60 
vútuÆ
 
addA˘‹
–
u32
 
a˘‹HashId
)=0;

62 
vútuÆ
 
ªmoveA˘‹
–
u32
 
a˘‹HashId
) = 0;

64 
vútuÆ
 c⁄° 
	gvõws
::
GameVõwsAºay
& 
gëGameVõws
() const = 0;

66 
vútuÆ
 
addVõw
(
võws
::
IGameVõw
* 
gameVõw
, 
u32
 
a˘‹HashId
 = 0) = 0;

68 
vútuÆ
 
	gvõws
::
IGameVõw
* 
addVõw
(c⁄° 
c8
* 
võwID
, 
u32
 
gameVõwHashTy≥
, u32 
a˘‹HashId
 = 0) = 0;

70 
vútuÆ
 
ªmoveVõw
(
võws
::
IGameVõw
* 
gameVõw
) = 0;

72 
vútuÆ
 
boﬁ
 
lﬂdGame
(c⁄° 
úr
::
c‹e
::
°rögc
& 
gameName
) const = 0;

74 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

76 
vútuÆ
 
ch™geSèã
–
u32
 
√wSèãHashId
) = 0;

	@..\engine\include\qvIGameLogicFactory.h

28 #i‚de‡
__I_GAME_LOGIC_FACTORY_H_


29 
	#__I_GAME_LOGIC_FACTORY_H_


	)

31 
	~"qvIGameLogic.h
"

33 
«me•a˚
 
	gqv


35 
˛ass
 
	gIEngöeM™agî
;

37 
«me•a˚
 
	ggamög


	@..\engine\include\qvIGameState.h

27 #i‚de‡
__I_GAME_STATE_H_


28 
	#__I_GAME_STATE_H_


	)

30 
	~"qvISèã.h
"

31 
	~"qvGameSèãTy≥s.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	ggamög


41 ˛as†
	cIGameSèã
: 
public
 
ISèã


44 
public
:

47 
vútuÆ
 
c⁄figuª
() = 0;

49 
vútuÆ
 
íãr
() = 0;

51 
vútuÆ
 
Àave
() = 0;

53 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

	@..\engine\include\qvIGameStateMachine.h

27 #i‚de‡
__I_GAME_STATE_MACHINE_H_


28 
	#__I_GAME_STATE_MACHINE_H_


	)

30 
	~"qvISèãMachöe.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	ggamög


37 ˛as†
	cIGameSèãMachöe
: 
public
 
ISèãMachöe


39 
public
:

40 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)=0;

	@..\engine\include\qvIGameView.h

28 #i‚de‡
__I_GAME_VIEW_H_


29 
	#__I_GAME_VIEW_H_


	)

31 
	~"IRe„ªn˚Cou¡ed.h
"

32 
	~"úrAºay.h
"

33 
	~"qvGameVõwTy≥s.h
"

35 
	~"Poco/Sh¨edPå.h
"

36 
	~"úrAºay.h
"

37 
	~"IRe„ªn˚Cou¡ed.h
"

39 
«me•a˚
 
	gqv


41 
«me•a˚
 
	gvõws


44 ˛as†
	cIGameVõw
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


46 
public
:

48 
vútuÆ
 
©èch
(
u32
 
võwHashId
, u32 
a˘‹HashId
 = 0) = 0;

50 
vútuÆ
 
u32
 
gëHashId
() const = 0;

52 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

56 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

58 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
)=0;

61 
	gPoco
::
	tSh¨edPå
<
	tIGameVõw
> 
	tIGameVõwSh¨edPå
;

62 
	gúr
::
	tc‹e
::
	t¨øy
<
	tIGameVõwSh¨edPå
> 
	tGameVõwsAºay
;

	@..\engine\include\qvIGameViewFactory.h

28 #i‚de‡
__I_GAME_VIEW_FACTORY_H_


29 
	#__I_GAME_VIEW_FACTORY_H_


	)

31 
	~"qvIGameVõw.h
"

33 
	~"Poco/Sh¨edPå.h
"

35 
	~"úrAºay.h
"

36 
	~"IRe„ªn˚Cou¡ed.h
"

38 
«me•a˚
 
	gqv


40 
«me•a˚
 
	gvõws


42 ˛as†
	cIGameVõwFa˘‹y
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


44 
public
:

46 
vútuÆ
 
IGameVõwSh¨edPå
 
addGameVõw
–
u32
 
gameVõwHashTy≥
) = 0;

48 
vútuÆ
 
u32
 
gëCª©abÀGameVõwTy≥Cou¡
() const = 0;

50 
vútuÆ
 
boﬁ
 
gëCª©óbÀGameVõwTy≥
–
u32
 
gameVõwHashTy≥
) const = 0;

53 
	gPoco
::
	tSh¨edPå
<
	tIGameVõwFa˘‹y
> 
	tIGameVõwFa˘‹ySh¨edPå
;

54 
	gúr
::
	tc‹e
::
	t¨øy
<
	tIGameVõwFa˘‹ySh¨edPå
> 
	tGameVõwFa˘‹yAºay
;

	@..\engine\include\qvIGameViewManager.h

28 #i‚de‡
__I_GAME_VIEW_MANAGER_H_


29 
	#__I_GAME_VIEW_MANAGER_H_


	)

31 
	~"qvIGameVõw.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	gvõws


39 ˛as†
	cIGameVõwM™agî


41 
	gpublic
:

45 
vútuÆ
 
©èch
(
u32
 
võwHashId
, u32 
a˘‹HashId
 = 0) = 0;

47 
vútuÆ
 
u32
 
gëHashId
() const = 0;

49 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

53 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

55 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
)=0;

	@..\engine\include\qvIGuiView.h

2 #i‚de‡
__IGUIVIEW_H_


3 
	#__IGUIVIEW_H_


	)

5 
	~"qvIEÀmítVõw.h
"

7 
«me•a˚
 
	gqv


9 
«me•a˚
 
	gvõws


11 c⁄° 
EVT_ELEMENT_VIEW_TYPE
 
EVT_ELEMENT_VIEW_GUI
("EVT_ELEMENT_VIEW_GUI");

13 ˛as†
	cIGuiVõw
: 
public
 
IEÀmítVõw


	@..\engine\include\qvIHumanView.h

28 #i‚de‡
__I_HUMAN_VIEW_H_


29 
	#__I_HUMAN_VIEW_H_


	)

32 
	~"qvIGameVõw.h
"

33 
	~"qvIEÀmítVõw.h
"

34 
	~"qvIComm™d.h
"

35 
	~"qvII≈utTøn¶©‹.h
"

37 
	~"IAudioM™agî.h
"

41 
«me•a˚
 
	gqv


49 
«me•a˚
 
	gvõws


51 
˛ass
 
	gIEÀmítVõwFa˘‹y
;

53 ˛as†
	cIHum™Võw
: 
public
 
IGameVõw


56 
public
:

57 
vútuÆ
 
IEÀmítVõwSh¨edPå
 
addEÀmítVõw
(c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
)=0;

65 
vútuÆ
 
ªgi°îEÀmítVõwFa˘‹y
(
IEÀmítVõwFa˘‹y
* 
Á˘‹yToAdd
)=0;

70 
vútuÆ
 c⁄° 
	göput
::
I≈utTøn¶©‹Li°
& 
li°íI≈utTøn¶©‹s
() const = 0;

72 
vútuÆ
 
öôAudio
() = 0;

74 
vútuÆ
 
	gcAudio
::
IAudioM™agî
* 
gëAudioM™agî
() = 0;

	@..\engine\include\qvIInputCommand.h

28 #i‚de‡
__I_INPUT_COMMAND_H_


29 
	#__I_INPUT_COMMAND_H_


	)

31 
	~"qvIComm™d.h
"

32 
	~"qvEvítTy≥s.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	ggamög


45 ˛as†
	cII≈utComm™d
: 
public
 
IComm™d


	@..\engine\include\qvIInputReceiver.h

29 #i‚de‡
__I_INPUT_RECEIVER_H_


30 
	#__I_INPUT_RECEIVER_H_


	)

32 
	~"qvII≈utTøn¶©‹.h
"

33 
	~"qvII≈utTøn¶©‹Fa˘‹y.h
"

38 
	~"IEvítRe˚ivî.h
"

39 
	~"Poco/Sh¨edPå.h
"

40 
	~"IRe„ªn˚Cou¡ed.h
"

42 
«me•a˚
 
	gqv


44 
«me•a˚
 
	gevíts


46 
˛ass
 
	gIEvítArgs
;

49 
«me•a˚
 
	göput


51 
˛ass
 
	gIAnyKeyI≈utTøn¶©‹
;

52 
˛ass
 
	gISögÀKeyI≈utTøn¶©‹
;

53 
˛ass
 
	gII≈utTøn¶©‹Fa˘‹y
;

55 
SHashedSåög
 
	tIRD_INPUT_RECEIVER_DRIVER
;

57 
˛ass
 
	gII≈utRe˚ivî
 : 
public
 
úr
::
IEvítRe˚ivî
,

58 
public
 
	gúr
::
IRe„ªn˚Cou¡ed


60 
public
:

62 
vútuÆ
 
II≈utTøn¶©‹
* 
gëI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
) = 0;

64 
vútuÆ
 
ªgi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
) = 0;

66 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
) = 0;

68 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
) = 0;

70 
vútuÆ
 
ªgi°îI≈utTøn¶©‹Fa˘‹y
–
II≈utTøn¶©‹Fa˘‹y
* 
Á˘‹y
) = 0;

80 
vútuÆ
 
boﬁ
 
keyPªs£d
(
úr
::
EKEY_CODE
 
keycode
)=0;

82 
vútuÆ
 
boﬁ
 
keyDown
(
úr
::
EKEY_CODE
 
keycode
)=0;

84 
vútuÆ
 
boﬁ
 
keyUp
(
úr
::
EKEY_CODE
 
keycode
)=0;

86 
vútuÆ
 
boﬁ
 
keyRñó£d
(
úr
::
EKEY_CODE
 
keycode
)=0;

89 
	gPoco
::
	tSh¨edPå
<
	tII≈utRe˚ivî
> 
	tII≈utRe˚ivîSh¨edPå
;

	@..\engine\include\qvIInputReceiverDriverFactory.h

28 #i‚de‡
__I_INPUT_RECEIVER_FACTORY_H_


29 
	#__I_INPUT_RECEIVER_FACTORY_H_


	)

31 
	~"qvII≈utRe˚ivî.h
"

33 
	~"IRe„ªn˚Cou¡ed.h
"

35 
«me•a˚
 
	gqv


37 
˛ass
 
	gIEngöeM™agî
;

39 
«me•a˚
 
	göput


42 ˛as†
	cII≈utRe˚ivîDrivîFa˘‹y
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


44 
public
:

46 
vútuÆ
 
II≈utRe˚ivîSh¨edPå
 
addI≈utRe˚ivî
–
u32
 
öputRe˚ivîHashTy≥
) = 0;

48 
vútuÆ
 
u32
 
gëCª©abÀI≈utRe˚ivîTy≥Cou¡
() const = 0;

50 
vútuÆ
 
boﬁ
 
gëCª©óbÀI≈utRe˚ivîTy≥
–
u32
 
öputRe˚ivîHashTy≥
) const = 0;

	@..\engine\include\qvIInputReceiverFactory.h

28 #i‚de‡
__I_INPUT_RECEIVER_FACTORY_H_


29 
	#__I_INPUT_RECEIVER_FACTORY_H_


	)

31 
	~"qvII≈utRe˚ivî.h
"

33 
«me•a˚
 
	gqv


35 
˛ass
 
	gIEngöeM™agî
;

37 
«me•a˚
 
	gvõws


40 ˛as†
	cII≈utRe˚ivîDrivîFa˘‹y
 : 
public
 
IRe„ªn˚Cou¡ed


42 
public
:

44 
vútuÆ
 
IEÀmítVõwSh¨edPå
 
addEÀmítVõw
–c⁄° 
c8
* 
«me
, 
u32
 
öputRe˚iveTy≥
) = 0;

46 
vútuÆ
 
u32
 
gëCª©abÀEÀmítVõwTy≥Cou¡
() const = 0;

48 
vútuÆ
 
boﬁ
 
gëCª©óbÀEÀmítVõwTy≥
–
u32
 
ñemítVõwHashTy≥
) const = 0;

	@..\engine\include\qvIInputTranslator.h

29 #i‚de‡
_I_INPUT_TRANSLATOR_H_


30 
	#_I_INPUT_TRANSLATOR_H_


	)

32 
	~"qvSHashedSåög.h
"

33 
	~"qvEvítTy≥s.h
"

34 
	~"qvKeyTy≥s.h
"

36 
	~"Poco/Sh¨edPå.h
"

37 
	~"úrAºay.h
"

38 
	~"úrLi°.h
"

40 
«me•a˚
 
	gqv


42 
«me•a˚
 
	gevíts


44 
˛ass
 
	gIEvítM™agî
;

47 
«me•a˚
 
	göput


49 
˛ass
 
	gII≈utRe˚ivî
;

51 
SHashedSåög
 
	tITI_INPUT_TRANSLATOR_ID
;

52 
SHashedSåög
 
	tITT_INPUT_TRANSLATOR_TYPE
;

54 
	gúr
::
	tc‹e
::
	t¨øy
<
	tu32
> 
	tI≈utTøn¶©‹HashTy≥sAºay
;

56 ˛as†
	cII≈utTøn¶©‹


64 
	gpublic
:

76 
vútuÆ
 
u32
 
gëHashId
() const = 0;

78 
vútuÆ
 
u32
 
gëHashTy≥
() const = 0;

80 
vútuÆ
 
boﬁ
 
å™¶©e
(
II≈utRe˚ivî
 *
c⁄ãxt
) = 0;

83 
	gPoco
::
	tSh¨edPå
<
	tII≈utTøn¶©‹
> 
	tII≈utTøn¶©‹Sh¨edPå
;

84 
	gúr
::
	tc‹e
::
	tli°
<
	tII≈utTøn¶©‹Sh¨edPå
> 
	tI≈utTøn¶©‹Li°
;

	@..\engine\include\qvIInputTranslatorFactory.h

28 #i‚de‡
__I_INPUT_TRANSLATOR_FACTORY_H_


29 
	#__I_INPUT_TRANSLATOR_FACTORY_H_


	)

31 
	~"qvII≈utTøn¶©‹.h
"

32 
	~"qvIEvítArgs.h
"

34 
	~"IRe„ªn˚Cou¡ed.h
"

36 
«me•a˚
 
	gqv


38 
«me•a˚
 
	göput


40 ˛as†
	cII≈utTøn¶©‹Fa˘‹y
 : 
public
 
úr
::
IRe„ªn˚Cou¡ed


42 
public
:

44 
vútuÆ
 
II≈utTøn¶©‹Sh¨edPå
 
addI≈utTøn¶©‹
 (c⁄° 
c8
* 
öputTøn¶©‹Name
, 
u32
 
öputTøn¶©‹HashTy≥
, 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
, 
boﬁ
 
ªÆTime
 = 
Ál£
) = 0;

46 
vútuÆ
 
u32
 
gëCª©abÀI≈utTøn¶©‹Cou¡
() const = 0;

48 
vútuÆ
 
boﬁ
 
gëCª©óbÀI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashTy≥
) const = 0;

	@..\engine\include\qvIMemoryManager.h

28 #i‚de‡
_MEMORY_MANAGER_H_


29 
	#_MEMORY_MANAGER_H_


	)

31 
	~"qvPªªquisôes.h
"

35 
«me•a˚
 
	gqv


37 ˛as†
	cIMem‹yM™agî


39 
	gpublic
:

40 
vútuÆ
 * 
Æloˇã
(
size_t
 
size
, c⁄° 
c8
* 
fûíame
, 
s32
 
löe
, c⁄° c8* 
fun˘i⁄
) = 0;

41 
vútuÆ
 
dóŒoˇã
(* 
poöãr
) = 0;

42 
vútuÆ
 
size_t
 
gëMaxAŒoˇti⁄Size
() = 0;

	@..\engine\include\qvINetworkView.h

28 #i‚de‡
__HUMANVIEW_H_


29 
	#__HUMANVIEW_H_


	)

32 
	~"qvIGameVõw.h
"

33 
	~"qvIEÀmítVõw.h
"

37 
usög
 
«me•a˚
 
	gúr
::
gui
;

39 
usög
 
«me•a˚
 
	gqv
::
gamög
;

47 
«me•a˚
 
	gqv


49 
˛ass
 
	gEngöeM™agî
;

51 
«me•a˚
 
	gvõws


53 ˛as†
	cHum™Võw
: 
public
 
IGameVõw


56 
¥Ÿe˘ed
:

57 
GameVõwID
 
mVõwID
;

58 
E_GAME_VIEW_TYPE
 
	gmTy≥
;

59 
EÀmítVõwLi°
 
	gmEÀmítVõws
;

61 
A˘‹ID
* 
	gmA˘‹ID
;

63 
IGUIF⁄t
* 
	gmF⁄t
;

68 
f32
 
	gmCuºítTime
;

69 
f32
 
	gmLa°Upd©eTime
;

70 
f32
 
	gmAccumuœt‹Time
;

81 
	gpublic
:

82 
Hum™Võw
–c⁄° 
c8
* 
võwID
);

83 
	gvútuÆ
 ~
Hum™Võw
();

85 
vútuÆ
 
E_GAME_VIEW_TYPE
 
gëTy≥
()

87  
	gmTy≥
;

90 
vútuÆ
 c⁄° 
	gGameVõwID
& 
gëID
() const

92  
	gmVõwID
;

95 
vútuÆ
 
lo°Devi˚
();

96 
vútuÆ
 
©èch
(c⁄° 
GameVõwID
& 
võwID
, 
A˘‹ID
* 
a˘‹ID
=0);

97 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
);

98 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

101 
vútuÆ
 
pushEÀmít
(
IEÀmítVõw
* 
ñemít
);

102 
vútuÆ
 
p›EÀmít
(
IEÀmítVõw
* 
ñemít
);

	@..\engine\include\qvIPhysicsActor.h

27 #i‚de‡
__IPHYSICSACTOR_H_


28 
	#__IPHYSICSACTOR_H_


	)

30 
	~"qvPªªquisôes.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	gphysics


38 ˛as†
	cIPhysicsA˘‹
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


41 
public
:

42 
IPhysicsA˘‹
();

43 ~
IPhysicsA˘‹
();

	@..\engine\include\qvIPhysicsManager.h

27 #i‚de‡
__I_PHYSICS_MANAGER_H_


28 
	#__I_PHYSICS_MANAGER_H_


	)

30 
	~"qvPªªquisôes.h
"

32 
	~"IRe„ªn˚Cou¡ed.h
"

34 
	~"úrM©h.h
"

35 
	~"ve˘‹3d.h
"

36 
	~"qvTy≥s.h
"

38 
«me•a˚
 
	gqv


40 
«me•a˚
 
	ggamög


42 
˛ass
 
	gIA˘‹
;

45 
«me•a˚
 
	gphysics


47 ˛as†
	cIPhysicsM™agî
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


49 
public
:

51 
vútuÆ
 
boﬁ
 
öôülize
() = 0;

53 
vútuÆ
 
boﬁ
 
föÆize
() = 0;

55 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
)=0;

59 
vútuÆ
 
addSphîe
(
ªÆ
 
ødius
, 
gamög
::
IA˘‹
 *
a˘‹
,Ñó»
•ecificGøvôy
)=0;

63 
vútuÆ
 
addBox
(c⁄° 
úr
::
c‹e
::
ve˘‹3df
& 
dimísi⁄s
, 
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
) = 0;

66 
vútuÆ
 
addC⁄vexHuŒ
–
úr
::
c‹e
::
ve˘‹3df
 *
vîts
, 
s32
 
numPoöts
, 
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
)=0;

	@..\engine\include\qvIPhysicsView.h

28 #i‚de‡
__HUMANVIEW_H_


29 
	#__HUMANVIEW_H_


	)

32 
	~"qvIGameVõw.h
"

33 
	~"qvIEÀmítVõw.h
"

37 
usög
 
«me•a˚
 
	gúr
::
gui
;

39 
usög
 
«me•a˚
 
	gqv
::
gamög
;

47 
«me•a˚
 
	gqv


49 
˛ass
 
	gEngöeM™agî
;

51 
«me•a˚
 
	gvõws


53 ˛as†
	cHum™Võw
: 
public
 
IGameVõw


56 
¥Ÿe˘ed
:

57 
GameVõwID
 
mVõwID
;

58 
E_GAME_VIEW_TYPE
 
	gmTy≥
;

59 
EÀmítVõwLi°
 
	gmEÀmítVõws
;

61 
A˘‹ID
* 
	gmA˘‹ID
;

63 
IGUIF⁄t
* 
	gmF⁄t
;

68 
f32
 
	gmCuºítTime
;

69 
f32
 
	gmLa°Upd©eTime
;

70 
f32
 
	gmAccumuœt‹Time
;

81 
	gpublic
:

82 
Hum™Võw
–c⁄° 
c8
* 
võwID
);

83 
	gvútuÆ
 ~
Hum™Võw
();

85 
vútuÆ
 
E_GAME_VIEW_TYPE
 
gëTy≥
()

87  
	gmTy≥
;

90 
vútuÆ
 c⁄° 
	gGameVõwID
& 
gëID
() const

92  
	gmVõwID
;

95 
vútuÆ
 
lo°Devi˚
();

96 
vútuÆ
 
©èch
(c⁄° 
GameVõwID
& 
võwID
, 
A˘‹ID
* 
a˘‹ID
=0);

97 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
);

98 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

101 
vútuÆ
 
pushEÀmít
(
IEÀmítVõw
* 
ñemít
);

102 
vútuÆ
 
p›EÀmít
(
IEÀmítVõw
* 
ñemít
);

	@..\engine\include\qvIProcess.h

2 #i‚de‡
__IPROCESS_H_


3 
	#__IPROCESS_H_


	)

5 
	~"qvPªªquisôes.h
"

7 
	~"IRe„ªn˚Cou¡ed.h
"

9 
«me•a˚
 
	gqv


11 
«me•a˚
 
	gru¡ime


13 
	eE_PROCESS_STATUS


15 
	gEPS_READY
,

16 
	gEPS_STOPPED
,

17 
	gEPS_RUNNING
,

18 
	gEPS_COMPLETED
,

19 
	gEPS_FAILED
,

23 c⁄° 
c8
* c⁄° 
	gPro˚ssSètusNames
[] =

33 ˛as†
	cIPro˚ss
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


35 
public
:

37 
IPro˚ss
();

38 
	gvútuÆ
 ~
IPro˚ss
();

40 
vútuÆ
 
E_PROCESS_STATUS
 
upd©e
(
u32
 
ñ≠£dTime
)=0;

42 
vútuÆ
 
£tSètus
(
E_PROCESS_STATUS
 
¥o˚ssSètus
)=0;

44 
vútuÆ
 
E_PROCESS_STATUS
 
gëSètus
()=0;

	@..\engine\include\qvIProcessManager.h

2 #i‚de‡
__IPROCESSMANAGER_H_


3 
	#__IPROCESSMANAGER_H_


	)

5 
	~"qvPªªquisôes.h
"

8 
	~"IRe„ªn˚Cou¡ed.h
"

10 
«me•a˚
 
	gqv


12 
«me•a˚
 
	gru¡ime


14 
˛ass
 
	gIPro˚ss
;

16 ˛as†
	cIPro˚ssM™agî
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


18 
public
:

22 
vútuÆ
 
©èch
–
IPro˚ss
* 
¥o˚ss
 )=0;

23 
vútuÆ
 
dëach
–
IPro˚ss
* 
¥o˚ss
 )=0;

25 
vútuÆ
 
boﬁ
 
hasPro˚s£s
()=0;

27 
vútuÆ
 
E_PROCESS_STATUS
 
upd©e
–
u32
 
ñ≠£dTime
)=0;

	@..\engine\include\qvIRecorderView.h

28 #i‚de‡
__HUMANVIEW_H_


29 
	#__HUMANVIEW_H_


	)

32 
	~"qvIGameVõw.h
"

33 
	~"qvIEÀmítVõw.h
"

37 
usög
 
«me•a˚
 
	gúr
::
gui
;

39 
usög
 
«me•a˚
 
	gqv
::
gamög
;

47 
«me•a˚
 
	gqv


49 
˛ass
 
	gEngöeM™agî
;

51 
«me•a˚
 
	gvõws


53 ˛as†
	cHum™Võw
: 
public
 
IGameVõw


56 
¥Ÿe˘ed
:

57 
GameVõwID
 
mVõwID
;

58 
E_GAME_VIEW_TYPE
 
	gmTy≥
;

59 
EÀmítVõwLi°
 
	gmEÀmítVõws
;

61 
A˘‹ID
* 
	gmA˘‹ID
;

63 
IGUIF⁄t
* 
	gmF⁄t
;

68 
f32
 
	gmCuºítTime
;

69 
f32
 
	gmLa°Upd©eTime
;

70 
f32
 
	gmAccumuœt‹Time
;

81 
	gpublic
:

82 
Hum™Võw
–c⁄° 
c8
* 
võwID
);

83 
	gvútuÆ
 ~
Hum™Võw
();

85 
vútuÆ
 
E_GAME_VIEW_TYPE
 
gëTy≥
()

87  
	gmTy≥
;

90 
vútuÆ
 c⁄° 
	gGameVõwID
& 
gëID
() const

92  
	gmVõwID
;

95 
vútuÆ
 
lo°Devi˚
();

96 
vútuÆ
 
©èch
(c⁄° 
GameVõwID
& 
võwID
, 
A˘‹ID
* 
a˘‹ID
=0);

97 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
);

98 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

101 
vútuÆ
 
pushEÀmít
(
IEÀmítVõw
* 
ñemít
);

102 
vútuÆ
 
p›EÀmít
(
IEÀmítVõw
* 
ñemít
);

	@..\engine\include\qvIReferenceCount.h

28 #i‚de‡
__I_REFERENCE_COUNT_H_


29 
	#__I_REFERENCE_COUNT_H_


	)

32 
«me•a˚
 
	gqv


34 ˛as†
	cIRe„ªn˚Cou¡


36 
	gpublic
:

37 
vútuÆ
 
du∂iˇã
() = 0;

42 
vútuÆ
 
ªÀa£
() = 0;

	@..\engine\include\qvISceneView.h

27 #i‚de‡
__I_SCENE_VIEW_H_


28 
	#__I_SCENE_VIEW_H_


	)

30 
	~"qvIEÀmítVõw.h
"

31 
	~"qvIA˘‹.h
"

33 
	~"ICamîaS˚√Node.h
"

34 
	~"IS˚√M™agî.h
"

36 
«me•a˚
 
	gqv


39 
«me•a˚
 
	ggamög


41 
	gSA˘‹Args
;

44 
«me•a˚
 
	gvõws


46 c⁄° 
EVT_ELEMENT_VIEW_TYPE
 
EVT_ELEMENT_VIEW_SCENE
("EVT_ELEMENT_VIEW_SCENE");

48 ˛as†
	cIS˚√Võw
: 
public
 
IEÀmítVõw


50 
public
:

52 
vútuÆ
 
úr
::
s˚√
::
ICamîaS˚√Node
* 
gëCamîa
() = 0;

53 
vútuÆ
 
£tCamîa
(
úr
::
s˚√
::
ICamîaS˚√Node
* 
ˇmîa
) = 0;

55 
vútuÆ
 
	gúr
::
s˚√
::
IS˚√M™agî
* 
gëS˚√M™agî
() = 0;

60 
vútuÆ
 
lﬂdS˚√
(c⁄° 
c8
* 
s˚√Name
) = 0;

62 
vútuÆ
 
addS˚√Node
(c⁄° 
gamög
::
SA˘‹Args
& 
¨gs
, 
u32
 
a˘‹HashId
 = 0) = 0;

63 
vútuÆ
 
	gúr
::
s˚√
::
IS˚√Node
* 
födS˚√Node
–
u32
 
a˘‹HashId
) = 0;

	@..\engine\include\qvISingleKeyInputTranslator.h

28 #i‚de‡
_I_SINGLE_KEY_INPUT_TRANSLATOR_H_


29 
	#_I_SINGLE_KEY_INPUT_TRANSLATOR_H_


	)

31 
	~"qvII≈utTøn¶©‹.h
"

32 
	~"qvIEvítM™agî.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	göput


38 
˛ass
 
	gII≈utRe˚ivî
;

40 c⁄° 
ITT_INPUT_TRANSLATOR_TYPE
 
ITT_SINGLE_KEY
("ITT_SINGLE_KEY_TYPE");

42 ˛as†
	cISögÀKeyI≈utTøn¶©‹
 : 
public
 
II≈utTøn¶©‹


50 
public
:

	@..\engine\include\qvIState.h

27 #i‚de‡
__I_STATE_H_


28 
	#__I_STATE_H_


	)

30 
	~"qvSèãTy≥s.h
"

32 
	~"IRe„ªn˚Cou¡ed.h
"

34 
«me•a˚
 
	gqv


36 ˛as†
	cISèã
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


38 
public
:

40 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
() = 0;

42 
vútuÆ
 
c⁄figuª
() = 0;

44 
vútuÆ
 
íãr
() = 0;

46 
vútuÆ
 
Àave
() = 0;

48 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
) = 0;

	@..\engine\include\qvIStateMachine.h

27 #i‚de‡
__I_STATE_MACHINE_H_


28 
	#__I_STATE_MACHINE_H_


	)

30 
	~"qvISèã.h
"

33 
«me•a˚
 
	gqv


35 ˛as†
	cISèãMachöe
: 
public
 
úr
::
IRe„ªn˚Cou¡ed


37 
public
:

38 
vútuÆ
 
addSèã
(
ISèã
* 
°©e
, 
boﬁ
 
°¨tUpSèã
 = 
Ál£
)=0;

39 
vútuÆ
 
ch™geSèã
(c⁄° 
S_STATE
* 
√wSèã
)=0;

40 
vútuÆ
 
ISèã
* 
gëCuºítSèã
()=0;

41 
vútuÆ
 
ªmoveSèã
(
ISèã
* 
°©e
)=0;

	@..\engine\include\qvITimer.h

3 #i‚de‡
__I_TIMER_H_


4 
	#__I_TIMER_H_


	)

6 
	~"qvPªªquisôes.h
"

8 
«me•a˚
 
	gqv


10 ˛as†
	cITimî


12 
	g¥iv©e
:

13 
úr
::
ITimî
 * 
mIºlichtTimî
;

15 
u32
 
	gmTime
;

16 
f32
 
	gmTimeRe°
;

17 
u32
 
	gmLa°RólTime
;

18 
u32
 
	gmLa°SèπTime
;

19 
f32
 
	gmS≥ed
;

20 
u32
 
	gmLa°Tick
;

22 
	gmIsRu¬ög
;

24 
	gpublic
:

25 
Timî
(
úr
::
ITimî
 * 
úæichtTimî_
, 
boﬁ
 
°¨tRu¬ög_
=
Ál£
);

26 
	gvútuÆ
 ~
Timî
();

29 
vútuÆ
 
u32
 
gëTime
()=0;

30 
vútuÆ
 
£tTime
(
u32
 
time_
)=0;

32 
vútuÆ
 
u32
 
gëLa°TickInMs
()=0;

33 
vútuÆ
 
f32
 
gëLa°TickInSec⁄ds
()=0;

36 
vútuÆ
 
°›
()=0;

37 
vútuÆ
 
°¨t
()=0;

38 
vútuÆ
 
boﬁ
 
isSt›≥d
()=0;

40 
vútuÆ
 
u32
 
gëLa°SèπTime
()=0;

42 
vútuÆ
 
£tS≥ed
(
f32
 
•ìd_
 = 1.0f)=0;

43 
vútuÆ
 
f32
 
gëS≥ed
()=0;

46 
vútuÆ
 
tick
()=0;

	@..\engine\include\qvKeyTypes.h

29 #i‚de‡
__KEY_TYPES_H_


30 
	#__KEY_TYPES_H_


	)

32 
	~"Keycodes.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	göput


39 
	eEKEY_STATE


41 
	gEKS_UP
 = 0x01,

42 
	gEKS_DOWN
 = 0x02,

43 
	gEKS_PRESSED
 = 0x04,

44 
	gEKS_RELEASED
 = 0x08,

45 
	gEKS_PRESSED_OR_DOWN
 = 
EKS_DOWN
 | 
EKS_PRESSED
,

46 
	gEKS_UP_OR_RELEASED
 = 
EKS_UP
 | 
EKS_RELEASED


	@..\engine\include\qvPrerequisites.h

28 #i‚de‡
__QV_PREREQUISITES_H_


29 
	#__QV_PREREQUISITES_H_


	)

32 #ifde‡
_MSC_VER


34 #¥agm®
w¨nög
 (
dißbÀ
 : 4275)

37 #¥agm®
w¨nög
 (
dißbÀ
 : 4661)

40 #¥agm®
w¨nög
 (
dißbÀ
 : 4221)

42 #¥agm®
w¨nög
 (
dißbÀ
 : 4251)

44 #¥agm®
w¨nög
–
dißbÀ
 : 4244 )

64 
	~"LöórM©h/btTønsf‹m.h
"

65 
	~"LöórM©h/btQuick¥of.h
"

66 
	~"LöórM©h/btLi°.h
"

67 
	~"LöórM©h/btHashM≠.h
"

69 
	~"qvTy≥s.h
"

71 
«me•a˚
 
	gqv


73 
btSˇœr
 
	tªÆ
;

76 c⁄° 
u32
 
GC_GAME_FRAMERATE
(16);

77 c⁄° 
u32
 
GC_ANIMATION_FRAMERATE
(16);

78 c⁄° 
u32
 
GF_RENDER_FRAMERATE
(16);

79 c⁄° 
u32
 
GF_GAME_PHYSICS_FRAMERATE
(16);

	@..\engine\include\qvProtothread.h

50 #i‚de‡
__PROTOTHREAD_H__


51 
	#__PROTOTHREAD_H__


	)

86 ˛as†
	cPrŸŸhªad


88 
	mpublic
:

91 
	$PrŸŸhªad
(Ë: 
	$_±Löe
(0) { }

142 #i‚de‡
__PROTOTHREAD_H__


143 
	#__PROTOTHREAD_H__


	)

178 ˛as†
	cPrŸŸhªad


180 
public
:

183 
	`PrŸŸhªad
(Ë: 
	`_±Löe
(0) { }

186 
	`Re°¨t
(Ë{ 
_±Löe
 = 0; }

191 
	`St›
(Ë{ 
_±Löe
 = 
LöeNumbîInvÆid
; }

195 
boﬁ
 
	`IsRu¬ög
(Ë{  
_±Löe
 !
LöeNumbîInvÆid
; }

200 
vútuÆ
 
boﬁ
 
	`Run
() = 0;

202 
¥Ÿe˘ed
:

205 
	tLöeNumbî
;

208 c⁄° 
LöeNumbî
 
LöeNumbîInvÆid
 = (LineNumber)(-1);

212 
LöeNumbî
 
_±Löe
;

213 
	}
};

216 
	#PT_BEGIN
(Ë
boﬁ
 
±Yõlded
 = 
åue
; 
_±Löe
Ë{ 0:

	)

219 
	#PT_END
(Ë: ; 
	}
} 
	`St›
();  
Ál£
;

	)

222 
	#PT_WAIT_UNTIL
(
c⁄dôi⁄
) \

223 dÿ{ 
_±Löe
 = 
__LINE__
; __LINE__: \

224 i‡(!(
c⁄dôi⁄
)Ë 
åue
; } 0)

	)

227 
	#PT_WAIT_WHILE
(
c⁄dôi⁄
Ë
	`PT_WAIT_UNTIL
(!(c⁄dôi⁄))

	)

230 
	#PT_WAIT_THREAD
(
chûd
Ë
	`PT_WAIT_WHILE
((chûd).
	$Run
())

	)

233 
	#PT_SPAWN
(
chûd
) \

234 dÿ{ (
chûd
).
	`Re°¨t
(); 
	`PT_WAIT_THREAD
(chûd); 
	}
} 0)

	)

237 
	#PT_RESTART
(Ëdÿ{ 
	`Re°¨t
();  
åue
; 
	}
} 0)

	)

240 
	#PT_EXIT
(Ëdÿ{ 
	`St›
();  
Ál£
; 
	}
} 0)

	)

243 
	#PT_YIELD
() \

244 dÿ{ 
±Yõlded
 = 
Ál£
; 
_±Löe
 = 
__LINE__
; __LINE__: \

245 i‡(!
±Yõlded
Ë 
åue
; 
	}
} 0)

	)

248 
	#PT_YIELD_UNTIL
(
c⁄dôi⁄
) \

249 dÿ{ 
±Yõlded
 = 
Ál£
; 
_±Löe
 = 
__LINE__
; __LINE__: \

250 i‡(!
±Yõlded
 || !(
c⁄dôi⁄
)Ë 
åue
; 
	}
} 0)

	)

254 
	$ª°¨t
(Ë{ 
_±Löe
 = 0; 
	}
}

259 
	$°›
(Ë{ 
_±Löe
 = 
LöeNumbîInvÆid
; 
	}
}

263 
boﬁ
 
	$ru¬ög
(Ë{  
_±Löe
 !
LöeNumbîInvÆid
; 
	}
}

268 
vútuÆ
 
boﬁ
 
run
() = 0;

270 
	g¥Ÿe˘ed
:

273 
	tLöeNumbî
;

276 c⁄° 
LöeNumbî
 
	gLöeNumbîInvÆid
 = (LineNumber)(-1);

280 
LöeNumbî
 
	g_±Löe
;

284 
	#PT_BEGIN
(Ë
boﬁ
 
±Yõlded
 = 
åue
; 
_±Löe
Ë{ 0:

	)

287 
	#PT_END
(Ë: ; } 
	`°›
();  
Ál£
;

	)

290 
	#PT_WAIT_UNTIL
(
c⁄dôi⁄
) \

291 dÿ{ 
_±Löe
 = 
__LINE__
; __LINE__: \

292 i‡(!(
c⁄dôi⁄
)Ë 
åue
; } 0)

	)

295 
	#PT_WAIT_WHILE
(
c⁄dôi⁄
Ë
	`PT_WAIT_UNTIL
(!(c⁄dôi⁄))

	)

298 
	#PT_WAIT_THREAD
(
chûd
Ë
	`PT_WAIT_WHILE
((chûd).
	`run
())

	)

301 
	#PT_SPAWN
(
chûd
) \

302 dÿ{ (
chûd
).
	`ª°¨t
(); 
	`PT_WAIT_THREAD
(chûd); } 0)

	)

305 
	#PT_RESTART
(Ëdÿ{ 
	`ª°¨t
();  
åue
; } 0)

	)

308 
	#PT_EXIT
(Ëdÿ{ 
	`°›
();  
Ál£
; } 0)

	)

311 
	#PT_YIELD
() \

312 dÿ{ 
±Yõlded
 = 
Ál£
; 
_±Löe
 = 
__LINE__
; __LINE__: \

313 i‡(!
±Yõlded
Ë 
åue
; } 0)

	)

316 
	#PT_YIELD_UNTIL
(
c⁄dôi⁄
) \

317 dÿ{ 
±Yõlded
 = 
Ál£
; 
_±Löe
 = 
__LINE__
; __LINE__: \

318 i‡(!
±Yõlded
 || !(
c⁄dôi⁄
)Ë 
åue
; } 0)

	)

	@..\engine\include\qvQuanticVortex.h

28 #i‚de‡
__QUANTIC_VORTEX_ENGINE_H_


29 
	#__QUANTIC_VORTEX_ENGINE_H_


	)

31 
	~"qvCompûeC⁄fig.h
"

34 
	~"qvA˘‹Ty≥s.h
"

35 
	~"qvSA˘‹P¨ams.h
"

36 
	~"qvIA˘‹.h
"

37 
	~"qvIA˘‹Fa˘‹y.h
"

38 
	~"qvIA˘‹M™agî.h
"

39 
	~"qvIGameLogic.h
"

40 
	~"qvIGameLogicFa˘‹y.h
"

41 
	~"qvSèãTy≥s.h
"

42 
	~"qvISèã.h
"

45 
	~"qvKeyTy≥s.h
"

46 
	~"qvII≈utRe˚ivî.h
"

47 
	~"qvII≈utTøn¶©‹.h
"

48 
	~"qvIAnyKeyI≈utTøn¶©‹.h
"

49 
	~"qvISögÀKeyI≈utTøn¶©‹.h
"

50 
	~"qvII≈utTøn¶©‹Fa˘‹y.h
"

54 
	~"qvIPhysicsM™agî.h
"

57 
	~"qvIPro˚ss.h
"

58 
	~"qvIPro˚ssM™agî.h
"

61 
	~"qvIEÀmítVõw.h
"

62 
	~"qvIGameVõw.h
"

63 
	~"qvIGameVõwFa˘‹y.h
"

64 
	~"qvIGuiVõw.h
"

65 
	~"qvIHum™Võw.h
"

66 
	~"qvIS˚√Võw.h
"

69 
	~"qvSHashedSåög.h
"

72 
	~"qvComm™dTy≥s.h
"

73 
	~"qvIComm™d.h
"

74 
	~"qvIEngöeM™agî.h
"

75 
	~"qvSGameP¨ams.h
"

76 
	~"qvSHashedSåög.h
"

79 
	~"qvEvítTy≥s.h
"

80 
	~"qvIEvítComm™d.h
"

81 
	~"qvIEvítArgs.h
"

82 
	~"qvIEvítArgsFa˘‹y.h
"

83 
	~"qvIEvítM™agî.h
"

86 
«me•a˚
 
	gqv


88 "C" 
_QUANTICVORTEX_API_
 
IEngöeM™agî
* 
QUANTICVORTEX_CALLCONV
 
¸óãEngöeM™agî
(

89 
boﬁ
 
fuŒs¸ìn
 = 
Ál£
,

90 
boﬁ
 
vsync
 = 
Ál£
,

91 
u8
 
bôs
 = 16,

92 
úr
::
c‹e
::
dimísi⁄2du
 
wödowSize
 = irr::core::dimension2du(1024,768),

93 
úr
::
c‹e
::
°rögc
 
tôÀ
 = "Quantic Vortex Game",

94 
boﬁ
 
ho°Game
 = 
åue
,

95 
u8
 
loˇlPœyîs
 = 1,

96 
u8
 
aIPœyîs
 = 0,

97 
u8
 
ªmŸePœyîs
 = 0);

99 "C" 
_QUANTICVORTEX_API_
 
IEngöeM™agî
* 
QUANTICVORTEX_CALLCONV
 
¸óãEngöeM™agîEx
(c⁄° 
SGameP¨ams
& 
∑øms
);

	@..\engine\include\qvSActorParams.h

2 #i‚de‡
__S_ACTOR_PARAMS_H_


3 
	#__S_ACTOR_PARAMS_H_


	)

5 
	~"qvA˘‹Ty≥s.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	ggamög


30 
	sSA˘‹Args


33 
SA˘‹Args
(){}

35 
boﬁ
 
	g›î©‹
!=(c⁄° 
SA˘‹Args
 &
Ÿhî
) const

37  ((
ID
 !
Ÿhî
.IDË&& (
Ty≥
 != other.Type));

40 
boﬁ
 
	g›î©‹
==(c⁄° 
SA˘‹Args
 &
Ÿhî
) const

42  ((
ID
 =
Ÿhî
.IDË&& (
Ty≥
 == other.Type));

55 
AI_ACTOR_ID
* 
	gID
;

56 
AT_ACTOR_TYPE
* 
	gTy≥
;

	@..\engine\include\qvSEventArgs.h

28 #i‚de‡
__S_EVENTARGS_H_


29 
	#__S_EVENTARGS_H_


	)

31 
	~"qvPªªquisôes.h
"

32 
	~"qvEvítTy≥s.h
"

36 
«me•a˚
 
	gqv


39 
	gSEvítArgs
: 
IRe„ªn˚Cou¡ed


41 
SEvítArgs
(c⁄° 
ET_EVENT_TYPE
& 
ty≥
)

42 :
Ty≥
(
ty≥
)

45 
SEvítArgs
–c⁄° SEvítArgs& 
Ÿhî
)

47 *
this
 = 
Ÿhî
;

51 
	gSEvítArgs
& 
	g›î©‹
(c⁄° 
SEvítArgs
& 
Ÿhî
)

53 
Ty≥
 = 
Ÿhî
.Type;

55  *
	gthis
;

58 
boﬁ
 
	g›î©‹
!=(c⁄° 
SEvítArgs
 &
Ÿhî
) const

60  (
Ty≥
 !
Ÿhî
.Type);

63 
boﬁ
 
	g›î©‹
==(c⁄° 
SEvítArgs
 &
Ÿhî
) const

65  (
Ty≥
 =
Ÿhî
.Type);

68 
ET_EVENT_TYPE
 
	gTy≥
;

	@..\engine\include\qvSGameArgs.h

2 #i‚de‡
__ISCRIPTABLEEVENTDESCRIPTION_H_


3 
	#__ISCRIPTABLEEVENTDESCRIPTION_H_


	)

7 
«me•a˚
 
	gqv


9 
	sSGameArgs


11 
SGameArgs
()

15 
	gSGameArgs
& 
	g›î©‹
=(c⁄° 
SGameArgs
& 
Ÿhî
)

17  *
this
;

	@..\engine\include\qvSGameData.h

2 #i‚de‡
__SGAMEDATA_H_


3 
	#__SGAMEDATA_H_


	)

5 
	~"qvPªªquisôes.h
"

6 
	~"qvIGameVõw.h
"

8 
usög
 
«me•a˚
 
	gqv
::
gamög
;

10 
«me•a˚
 
	gqv


12 
«me•a˚
 
	ggamög


14 
	sSGameD©a


17 
SGameD©a
()

21 
SGameD©a
(c⁄° SGameD©a& 
Ÿhî
)

23 *
	gthis
 = 
Ÿhî
;

26 
	gSGameD©a
& 
	g›î©‹
(c⁄° 
SGameD©a
& 
Ÿhî
)

29  *
this
;

	@..\engine\include\qvSGameLogicParams.h

2 #i‚de‡
__SGAMEPARAMS_H_


3 
	#__SGAMEPARAMS_H_


	)

5 
	~"qvPªªquisôes.h
"

7 
«me•a˚
 
	gqv


9 
	sSGameLogicP¨ams


12 
SGameLogicP¨ams
()

16 
SGameLogicP¨ams
(c⁄° SGameLogicP¨ams& 
Ÿhî
)

18 *
	gthis
 = 
Ÿhî
;

21 
	gSGameLogicP¨ams
& 
	g›î©‹
(c⁄° 
SGameLogicP¨ams
& 
Ÿhî
)

25  *
this
;

	@..\engine\include\qvSGameParams.h

28 #i‚de‡
__SGAMEPARAMS_H_


29 
	#__SGAMEPARAMS_H_


	)

31 
	~"qvPªªquisôes.h
"

33 
	~"úrM©h.h
"

35 
«me•a˚
 
	gqv


37 
	sSGameP¨ams


39 
SGameP¨ams
():

40 
WödowSize
(
úr
::
c‹e
::
dimísi⁄2du
(1024, 768)),

41 
FuŒs¸ìn
(
Ál£
),

42 
Vsync
(
Ál£
),

43 
Bôs
(16),

44 
Ho°Game
(
Ál£
),

45 
LoˇlPœyîs
(1),

46 
AIPœyîs
(0),

47 
RemŸePœyîs
(0),

48 
TôÀ
("Default Game Title")

52 
SGameP¨ams
(c⁄° SGameP¨ams& 
Ÿhî
)

54 *
	gthis
 = 
Ÿhî
;

57 
	gSGameP¨ams
& 
	g›î©‹
(c⁄° 
SGameP¨ams
& 
Ÿhî
)

59 
TôÀ
 = 
Ÿhî
.Title;

60 
	gWödowSize
 = 
Ÿhî
.
WödowSize
;

61 
	gBôs
 = 
Ÿhî
.
Bôs
;

62 
	gFuŒs¸ìn
 = 
Ÿhî
.
FuŒs¸ìn
;

63 
	gVsync
 = 
Ÿhî
.
Vsync
;

65 
	gHo°Game
 = 
Ÿhî
.
Ho°Game
;

66 
	gLoˇlPœyîs
 = 
Ÿhî
.
LoˇlPœyîs
;

67 
	gAIPœyîs
 = 
Ÿhî
.
AIPœyîs
;

68 
	gRemŸePœyîs
 = 
Ÿhî
.
RemŸePœyîs
;

71 
	gShowCurs‹
 = 
Ÿhî
.
ShowCurs‹
;

72 
	gI≈utBuf„ªd
 = 
Ÿhî
.
I≈utBuf„ªd
;

73 
	gI≈utDebug
 = 
Ÿhî
.
I≈utDebug
;

74 
	gWödowSize
 = 
Ÿhî
.
WödowSize
;

76  *
	gthis
;

79 
	gúr
::
c‹e
::
dimísi⁄2du
 
WödowSize
;

80 
boﬁ
 
	gFuŒs¸ìn
;

81 
boﬁ
 
	gVsync
;

82 
u8
 
	gBôs
;

84 
boﬁ
 
	gHo°Game
;

85 
u8
 
	gLoˇlPœyîs
;

86 
u8
 
	gAIPœyîs
;

87 
u8
 
	gRemŸePœyîs
;

89 
boﬁ
 
	gShowCurs‹
;

90 
boﬁ
 
	gI≈utBuf„ªd
;

91 
boﬁ
 
	gI≈utDebug
;

93 
	gúr
::
c‹e
::
°rögc
 
TôÀ
;

	@..\engine\include\qvSHashedString.h

28 #i‚de‡
__S_HASHED_STRING_H_


29 
	#__S_HASHED_STRING_H_


	)

31 
	~"qvTy≥s.h
"

32 
	~"qvHashFun˘i⁄s.h
"

34 
	~"úrSåög.h
"

38 
«me•a˚
 
	gqv


41 
	sSHashedSåög


44 
SHashedSåög
()

45 :
Text
(0),
Hash
(0)

49 
SHashedSåög
(c⁄° 
c8
* 
ãxt
)

50 :
Text
(
ãxt
)

52 
Text
.
make_lowî
();

53 
	gHash
 = 
¸óãMurmurHash2
–
Text
.
c_°r
(), Text.
size
());

56 
SHashedSåög
(c⁄° 
c8
* 
ãxt
, 
u32
 
hash
)

57 :
Text
(
ãxt
), 
Hash
(
hash
)

61 
SHashedSåög
–c⁄° SHashedSåög &
Ÿhî
 )

63 *
	gthis

Ÿhî
;

68 
	gSHashedSåög
& 
	g›î©‹
–c⁄° 
SHashedSåög
 &
Ÿhî
 )

70 
Text
 = 
Ÿhî
.Text;

71 
	gHash
 = 
Ÿhî
.
Hash
;

73  *
	gthis
;

76 
boﬁ
 
	g›î©‹
=–c⁄° 
SHashedSåög
 &
Ÿhî
 ) const

78 #ifde‡
_DEBUG


79  ((
Text
 =
Ÿhî
.TextË&& (
Hash
 == other.Hash));

81  (
	gHash
 =
Ÿhî
.
Hash
);

85 
boﬁ
 
	g›î©‹
!–c⁄° 
SHashedSåög
 &
Ÿhî
 ) const

87 #ifde‡
_DEBUG


88  ((
Hash
 !
Ÿhî
.HashË&& (
Text
 != other.Text));

91  (
	gHash
 !
Ÿhî
.
Hash
);

95 
boﬁ
 
	g›î©‹
< ( c⁄° 
	gSHashedSåög
 &
	gŸhî
 ) const

97  (
	gHash
 < 
	gŸhî
.Hash);

100 
boﬁ
 
	g›î©‹
> ( c⁄° 
	gSHashedSåög
 &
	gŸhî
 ) const

102  (
	gHash
 > 
	gŸhî
.Hash);

106 
	gúr
::
c‹e
::
°rögc
 
Text
;

107 
u32
 
	gHash
;

	@..\engine\include\qvSPlayerScore.h

2 #i‚de‡
__SGAMEDATA_H_


3 
	#__SGAMEDATA_H_


	)

5 
	~"qvPªªquisôes.h
"

6 
	~"qvIGameVõw.h
"

8 
usög
 
«me•a˚
 
	gqv
::
gamög
;

10 
«me•a˚
 
	gqv


12 
«me•a˚
 
	ggamög


15 
	sSPœyîSc‹e


17 
SPœyîSc‹e
()

21 
SPœyîSc‹e
(c⁄° 
AI_ACTOR_ID
& 
a˘‹
, c⁄° 
võws
::
GVT_GAME_VIEW_TYPE
& 
©èchedVõwTy≥
, 
u32
 
sc‹e
 = 0, 
u8
 
Àvñ
 = 1)

22 :
A˘‹
(
a˘‹
), 
Sc‹e
(
sc‹e
), 
AâachedVõwTy≥
(
©èchedVõwTy≥
),
Levñ
(
Àvñ
)

26 
SPœyîSc‹e
(c⁄° SPœyîSc‹e& 
Ÿhî
)

28 *
	gthis
 = 
Ÿhî
;

31 
	gSPœyîSc‹e
& 
	g›î©‹
=(c⁄° 
SPœyîSc‹e
& 
Ÿhî
)

33 
Levñ
 = 
Ÿhî
.Level;

34 
	gA˘‹
 = 
Ÿhî
.
A˘‹
;

35 
	gSc‹e
 = 
Ÿhî
.
Sc‹e
;

36 
	gAâachedVõwTy≥
 = 
Ÿhî
.
AâachedVõwTy≥
;

38  *
	gthis
;

51 
u8
 
	gLevñ
;

52 
AI_ACTOR_ID
 
	gA˘‹
;

53 
u32
 
	gSc‹e
;

54 
	gvõws
::
GVT_GAME_VIEW_TYPE
 
AâachedVõwTy≥
;

	@..\engine\include\qvSingletonHolder.h

28 #i‚de‡
__SINGLETON_HOLDER_H_


29 
	#__SINGLETON_HOLDER_H_


	)

31 
«me•a˚
 
	gqv


33 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cSögÀt⁄Hﬁdî


35 
	gpublic
:

37 
¸óãIn°™˚
()

39 if(!
msIn°™˚
)

40 
msIn°™˚
 = 
√w
 
T
;

43 
T
* 
gë
()

45 if(!
	gmsIn°™˚
)

46 
	gmsIn°™˚
 = 
√w
 
T
;

47  
	gmsIn°™˚
;

50 
de°royIn°™˚
()

52 if(
	gmsIn°™˚
)

53 
dñëe
 
	gmsIn°™˚
;

56 
	g¥Ÿe˘ed
:

58 
SögÀt⁄Hﬁdî
();

59 ~
SögÀt⁄Hﬁdî
();

61 
	g¥iv©e
:

63 
SögÀt⁄Hﬁdî
(SingletonHolder const&);

64 
	gSögÀt⁄Hﬁdî
& 
	g›î©‹
=(
SögÀt⁄Hﬁdî
 const&);

66 
	g¥iv©e
:

67 
T
* 
msIn°™˚
;

71 
	gãm∂©e
 <
˛ass
 
	gT
> 
T
* 
	gSögÀt⁄Hﬁdî
<T>::
msIn°™˚
=0;

	@..\engine\include\qvStateTypes.h

27 #i‚de‡
__STATE_TYPES_H_


28 
	#__STATE_TYPES_H_


	)

30 
	~"qvSHashedSåög.h
"

32 
«me•a˚
 
	gqv


34 
SHashedSåög
 
	tS_STATE
;

	@..\engine\include\qvTypes.h

28 #i‚de‡
__QV_TYPES_H_


29 
	#__QV_TYPES_H_


	)

31 
	~<öây≥s.h
>

34 
«me•a˚
 
	gqv


37 
uöt8_t
 
	tu8
;

39 
öt8_t
 
	ts8
;

41 
uöt16_t
 
	tu16
;

43 
öt16_t
 
	ts16
;

45 
uöt32_t
 
	tu32
;

47 
öt32_t
 
	ts32
;

50 
	tc8
;

	@..\engine\source\quanticvortex\drivers\irrlicht\qvDefaultInputReceiverDriverFactory.cpp

28 
	~"qvDeÁu…I≈utRe˚ivîDrivîFa˘‹y.h
"

29 
	~"drivîs/úæicht/qvI≈utEvítH™dÀrIºlicht.h
"

31 
«me•a˚
 
	gqv


33 
«me•a˚
 
	göput


36 
	gDeÁu…I≈utRe˚ivîDrivîFa˘‹y
::
DeÁu…I≈utRe˚ivîDrivîFa˘‹y
(
IEngöeM™agî
* 
ígöe
)

37 :
mEngöe
(
ígöe
)

39 
mSuµ‹ãdI≈utRe˚ivîDrivîTy≥s
.
push_back
(
IRD_INPUT_RECEIVER_DRIVER_IRRLICHT
.
Hash
);

46 
	gDeÁu…I≈utRe˚ivîDrivîFa˘‹y
::~
DeÁu…I≈utRe˚ivîDrivîFa˘‹y
()

50 
II≈utRe˚ivîSh¨edPå
 
DeÁu…I≈utRe˚ivîDrivîFa˘‹y
::
addI≈utRe˚ivî
–
u32
 
öputRe˚ivîHashTy≥
)

52 
II≈utRe˚ivîSh¨edPå
 
öputRe˚ivî
;

54 if(
	göputRe˚ivîHashTy≥
 =
IRD_INPUT_RECEIVER_DRIVER_IRRLICHT
.
Hash
)

55 
öputRe˚ivî
.
assign
(
√w
 
I≈utEvítH™dÀrIºlicht
(
mEngöe
));

57  
	göputRe˚ivî
;

60 
u32
 
	gDeÁu…I≈utRe˚ivîDrivîFa˘‹y
::
gëCª©abÀI≈utRe˚ivîTy≥Cou¡
() const

62  
mSuµ‹ãdI≈utRe˚ivîDrivîTy≥s
.
size
();

65 
boﬁ
 
	gDeÁu…I≈utRe˚ivîDrivîFa˘‹y
::
gëCª©óbÀI≈utRe˚ivîTy≥
–
u32
 
öputRe˚ivîHashTy≥
) const

67 
u32
 
i
=0; 
	gi
 < 
	gmSuµ‹ãdI≈utRe˚ivîDrivîTy≥s
.
size
(); ++i)

68 i‡(
	gmSuµ‹ãdI≈utRe˚ivîDrivîTy≥s
[
i
] =
öputRe˚ivîHashTy≥
)

69  
åue
;

71  
	gÁl£
;

	@..\engine\source\quanticvortex\drivers\irrlicht\qvDefaultInputReceiverDriverFactory.h

28 #i‚de‡
__DEFAULT_GAME_VIEW_FACTORY_H_


29 
	#__DEFAULT_GAME_VIEW_FACTORY_H_


	)

31 
	~"qvII≈utRe˚ivîDrivîFa˘‹y.h
"

33 
	~"úrAºay.h
"

36 
«me•a˚
 
	gqv


38 
˛ass
 
	gIEngöeM™agî
;

40 
«me•a˚
 
	göput


42 ˛as†
	cDeÁu…I≈utRe˚ivîDrivîFa˘‹y
 : 
public
 
II≈utRe˚ivîDrivîFa˘‹y


44 
¥iv©e
:

45 
úr
::
c‹e
::
¨øy
<
u32
> 
mSuµ‹ãdI≈utRe˚ivîDrivîTy≥s
;

46 
IEngöeM™agî
* 
	gmEngöe
;

48 
	gpublic
:

49 
DeÁu…I≈utRe˚ivîDrivîFa˘‹y
(
IEngöeM™agî
* 
ígöe
);

50 
	gvútuÆ
 ~
DeÁu…I≈utRe˚ivîDrivîFa˘‹y
();

52 
vútuÆ
 
II≈utRe˚ivîSh¨edPå
 
addI≈utRe˚ivî
–
u32
 
öputRe˚ivîHashTy≥
) = 0;

54 
vútuÆ
 
u32
 
gëCª©abÀI≈utRe˚ivîTy≥Cou¡
() const = 0;

56 
vútuÆ
 
boﬁ
 
gëCª©óbÀI≈utRe˚ivîTy≥
–
u32
 
öputRe˚ivîHashTy≥
) const = 0;

	@..\engine\source\quanticvortex\drivers\irrlicht\qvInputEventHandlerIrrlicht.h

3 #i‚de‡
__INPUT_EVENT_HANDLER_IRRLICHT_H_


4 
	#__INPUT_EVENT_HANDLER_IRRLICHT_H_


	)

6 
	~"qvII≈utRe˚ivî.h
"

7 
	~"qvIEngöeM™agî.h
"

9 
	~"qvSögÀKeyI≈utTøn¶©‹.h
"

10 
	~"qvAnyKeyI≈utTøn¶©‹.h
"

12 
«me•a˚
 
	gqv


14 
«me•a˚
 
	gevíts


16 
˛ass
 
	gIEvítM™agî
;

19 
«me•a˚
 
	göput


29 c⁄° 
IRD_INPUT_RECEIVER_DRIVER
 
IRD_INPUT_RECEIVER_DRIVER_IRRLICHT
("IRD_INPUT_RECEIVER_DRIVER_IRRLICHT");

33 ˛as†
	cI≈utEvítH™dÀrIºlicht
 : 
public
 
II≈utRe˚ivî


36 
¥iv©e
:

38 
úr
::
c‹e
::
¨øy
<
II≈utTøn¶©‹
*> 
mI≈utTøn¶©‹s
;

39 
	gúr
::
c‹e
::
¨øy
<
II≈utTøn¶©‹Fa˘‹y
*> 
mI≈utTøn¶©‹sFa˘‹õs
;

41 
EKEY_STATE
 
	gmKeySèã
[
úr
::
KEY_KEY_CODES_COUNT
];

43 
	gevíts
::
IEvítM™agî
* 
mEvítM™agî
;

45 
	gpublic
:

48 
	sSMou£D©a


50 
s32
 
X
;

51 
s32
 
	gY
;

52 
boﬁ
 
	gLBuâ⁄Down
;

53 
boﬁ
 
	gRBuâ⁄Down
;

54 
boﬁ
 
	gMBuâ⁄Down
;

55 
ªÆ
 
	gWhìl
;

56 
ªÆ
 
	gWhìlDñè
;

59 
SMou£D©a
 
	gmMou£
;

61 
s32
 
mou£X
(Ë{  
	gmMou£
.
	gX
; }

62 
s32
 
mou£Y
(Ë{  
	gmMou£
.
	gY
; }

63 
ªÆ
 
mou£Whìl
(Ë{  
	gmMou£
.
	gWhìl
; }

64 
ªÆ
 
mou£WhìlDñè
(Ë{  
	gmMou£
.
	gWhìlDñè
; }

66 
I≈utEvítH™dÀrIºlicht
(
IEngöeM™agî
* 
ígöeM™agî
)

67 :
mEvítM™agî
(
ígöeM™agî
->
gëEvítM™agî
())

70 #ifde‡
_DEBUG


71 
£tDebugName
("IrrEventHandler");

74 
s32
 
	gi
 = 0; i < 
	gúr
::
KEY_KEY_CODES_COUNT
; ++iË
	gmKeySèã
[
i
] = 
EKS_RELEASED
;

76 
	gmMou£
.
	gX
 = 0;

77 
	gmMou£
.
	gY
 = 0;

78 
	gmMou£
.
	gWhìl
 = 0.0f;

79 
	gmMou£
.
	gWhìlDñè
 = 0.0f;

80 
	gmMou£
.
	gLBuâ⁄Down
 = 
Ál£
;

81 
	gmMou£
.
	gRBuâ⁄Down
 = 
Ál£
;

82 
	gmMou£
.
	gMBuâ⁄Down
 = 
Ál£
;

85 
	gvútuÆ
 ~
I≈utEvítH™dÀrIºlicht
() {}

87 
vútuÆ
 
II≈utTøn¶©‹
* 
gëI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
)

89 
II≈utTøn¶©‹
* 
	göputTøn¶©‹
 = 0;

91 
u32
 
	gi
 = 0; i < 
	gmI≈utTøn¶©‹s
.
size
(); ++i)

93 if(
	gmI≈utTøn¶©‹s
[
i
]->
gëHashId
(Ë=
öputTøn¶©‹HashId
)

95 
öputTøn¶©‹
 = 
mI≈utTøn¶©‹s
[
i
];

100  
	göputTøn¶©‹
;

129 
vútuÆ
 
ªgi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
)

137 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
)

142 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
)

147 
vútuÆ
 
ªgi°îI≈utTøn¶©‹Fa˘‹y
–
II≈utTøn¶©‹Fa˘‹y
* 
Á˘‹y
)

149 
	gÁ˘‹y
->
gøb
();

150 
	gmI≈utTøn¶©‹sFa˘‹õs
.
push_back
(
Á˘‹y
);

154 
vútuÆ
 
boﬁ
 
keyPªs£d
(
úr
::
EKEY_CODE
 
keycode
Ë{  (
mKeySèã
[keycode] =
EKS_PRESSED
); };

155 
vútuÆ
 
boﬁ
 
keyDown
(
úr
::
EKEY_CODE
 
keycode
Ë{  (
mKeySèã
[keycode] =
EKS_DOWN
 || mKeySèã[keycode] =
EKS_PRESSED
); };

156 
vútuÆ
 
boﬁ
 
keyUp
(
úr
::
EKEY_CODE
 
keycode
Ë{  (
mKeySèã
[keycode] =
EKS_UP
 || mKeySèã[keycode] =
EKS_RELEASED
); };

157 
vútuÆ
 
boﬁ
 
keyRñó£d
(
úr
::
EKEY_CODE
 
keycode
Ë{  (
mKeySèã
[keycode] =
EKS_RELEASED
); };

160 
vútuÆ
 
boﬁ
 
OnKeyI≈utEvít
(c⁄° 
úr
::
SEvít
& 
e
)

166 
u32
 
i
 = 0; 
	gi
 < 
	gmI≈utTøn¶©‹s
.
size
(); ++i)

167  
	gmI≈utTøn¶©‹s
[
i
]->
å™¶©e
(
this
);

168  
	gÁl£
;

172 
vútuÆ
 
boﬁ
 
OnBuâ⁄Clicked
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

173 
vútuÆ
 
boﬁ
 
OnS¸ﬁlB¨Ch™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

174 
vútuÆ
 
boﬁ
 
OnCheckBoxCh™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

175 
vútuÆ
 
boﬁ
 
OnLi°BoxCh™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

176 
vútuÆ
 
boﬁ
 
OnLi°BoxSñe˘edAgaö
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

177 
vútuÆ
 
boﬁ
 
OnFûeSñe˘ed
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

178 
vútuÆ
 
boﬁ
 
OnMesßgeBoxYes
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

179 
vútuÆ
 
boﬁ
 
OnMesßgeBoxNo
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

180 
vútuÆ
 
boﬁ
 
OnMesßgeBoxOk
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

181 
vútuÆ
 
boﬁ
 
OnMesßgeBoxC™˚l
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

182 
vútuÆ
 
boﬁ
 
OnEdôBoxE¡î
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

183 
vútuÆ
 
boﬁ
 
OnTabCh™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

184 
vútuÆ
 
boﬁ
 
OnComboBoxCh™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

185 
vútuÆ
 
boﬁ
 
OnSpöBoxCh™ged
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

188 
vútuÆ
 
boﬁ
 
OnLMou£Pªs£dDown
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

189 
vútuÆ
 
boﬁ
 
OnRMou£Pªs£dDown
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

190 
vútuÆ
 
boﬁ
 
OnMMou£Pªs£dDown
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

191 
vútuÆ
 
boﬁ
 
OnLMou£Le·Up
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

192 
vútuÆ
 
boﬁ
 
OnRMou£Le·Up
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

193 
vútuÆ
 
boﬁ
 
OnMMou£Le·Up
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

194 
vútuÆ
 
boﬁ
 
OnMou£Moved
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

195 
vútuÆ
 
boﬁ
 
OnMou£Whìl
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

198 
vútuÆ
 
boﬁ
 
OnU£rEvít
(c⁄° 
úr
::
SEvít
& 
e
Ë{  
Ál£
; }

200 
vútuÆ
 
boﬁ
 
OnEvít
(c⁄° 
úr
::
SEvít
& 
e
)

202 
e
.
EvítTy≥
)

204 
úr
::
EET_KEY_INPUT_EVENT
 :

206 i‡(
e
.
KeyI≈ut
.
Pªs£dDown
 =
åue
)

207 i‡(
e
.
KeyI≈ut
.
Pªs£dDown
)

209 i‡(
mKeySèã
[
e
.
KeyI≈ut
.
Key
] !
EKS_DOWN
)

210 
mKeySèã
[
e
.
KeyI≈ut
.
Key
] = 
EKS_PRESSED
;

211 
	gmKeySèã
[
e
.
KeyI≈ut
.
Key
] = 
EKS_DOWN
;

214 i‡(
	gmKeySèã
[
e
.
KeyI≈ut
.
Key
] !
EKS_UP
)

215 
mKeySèã
[
e
.
KeyI≈ut
.
Key
] = 
EKS_RELEASED
;

218 i‡(
	ge
.
	gKeyI≈ut
.
	gPªs£dDown
Ë 
OnKeyI≈utEvít
(
e
);

222 
	gúr
::
EET_GUI_EVENT
 :

224 
e
.
GUIEvít
.
EvítTy≥
)

226 
úr
::
gui
::
EGET_BUTTON_CLICKED
 :  
OnBuâ⁄Clicked
(
e
);

227 
	gúr
::
gui
::
EGET_SCROLL_BAR_CHANGED
 :  
OnS¸ﬁlB¨Ch™ged
(
e
);

228 
	gúr
::
gui
::
EGET_CHECKBOX_CHANGED
 :  
OnCheckBoxCh™ged
(
e
);

229 
	gúr
::
gui
::
EGET_LISTBOX_CHANGED
 :  
OnLi°BoxCh™ged
(
e
);

230 
	gúr
::
gui
::
EGET_LISTBOX_SELECTED_AGAIN
 :  
OnLi°BoxSñe˘edAgaö
(
e
);

231 
	gúr
::
gui
::
EGET_FILE_SELECTED
 :  
OnFûeSñe˘ed
(
e
);

232 
	gúr
::
gui
::
EGET_MESSAGEBOX_YES
 :  
OnMesßgeBoxYes
(
e
);

233 
	gúr
::
gui
::
EGET_MESSAGEBOX_NO
 :  
OnMesßgeBoxNo
(
e
);

234 
	gúr
::
gui
::
EGET_MESSAGEBOX_OK
 :  
OnMesßgeBoxOk
(
e
);

235 
	gúr
::
gui
::
EGET_MESSAGEBOX_CANCEL
 :  
OnMesßgeBoxC™˚l
(
e
);

236 
	gúr
::
gui
::
EGET_EDITBOX_ENTER
 :  
OnEdôBoxE¡î
(
e
);

237 
	gúr
::
gui
::
EGET_TAB_CHANGED
 :  
OnTabCh™ged
(
e
);

238 
	gúr
::
gui
::
EGET_COMBO_BOX_CHANGED
 :  
OnComboBoxCh™ged
(
e
);

239 
	gúr
::
gui
::
EGET_SPINBOX_CHANGED
 :  
OnSpöBoxCh™ged
(
e
);

240  :  
Ál£
;

245 
	gúr
::
EET_MOUSE_INPUT_EVENT
 :

247 
mMou£
.
X
 = 
e
.
Mou£I≈ut
.X;

248 
	gmMou£
.
	gY
 = 
e
.
Mou£I≈ut
.
Y
;

250 
	ge
.
	gMou£I≈ut
.
	gEvít
)

252 
	gúr
::
EMIE_LMOUSE_PRESSED_DOWN
 : 
mMou£
.
LBuâ⁄Down
 = 
åue
;  
OnLMou£Pªs£dDown
(
e
);

253 
	gúr
::
EMIE_RMOUSE_PRESSED_DOWN
 : 
mMou£
.
RBuâ⁄Down
 = 
åue
;  
OnRMou£Pªs£dDown
(
e
);

254 
	gúr
::
EMIE_MMOUSE_PRESSED_DOWN
 : 
mMou£
.
MBuâ⁄Down
 = 
åue
;  
OnMMou£Pªs£dDown
(
e
);

255 
	gúr
::
EMIE_LMOUSE_LEFT_UP
 : 
mMou£
.
LBuâ⁄Down
 = 
Ál£
;  
OnLMou£Le·Up
(
e
);

256 
	gúr
::
EMIE_RMOUSE_LEFT_UP
 : 
mMou£
.
RBuâ⁄Down
 = 
Ál£
;  
OnRMou£Le·Up
(
e
);

257 
	gúr
::
EMIE_MMOUSE_LEFT_UP
 : 
mMou£
.
MBuâ⁄Down
 = 
Ál£
;  
OnMMou£Le·Up
(
e
);

258 
	gúr
::
EMIE_MOUSE_MOVED
 :  
OnMou£Moved
(
e
);

259 
	gúr
::
EMIE_MOUSE_WHEEL
 :

261 
mMou£
.
WhìlDñè
 = mMou£.
Whìl
 - 
e
.
Mou£I≈ut
.Wheel;

262 
	gmMou£
.
	gWhìl
 +
e
.
Mou£I≈ut
.
Whìl
;

263  
OnMou£Whìl
(
e
);

265  :  
Ál£
;

270 
	gúr
::
EET_USER_EVENT
 :

272  
OnU£rEvít
(
e
);

273  :  
Ál£
;

278  
	gÁl£
;

	@..\engine\source\quanticvortex\drivers\irrlicht\qvSceneViewIrrlicht.cpp

27 
	~"qvS˚√VõwIºlicht.h
"

29 
	~"qvIEngöeM™agî.h
"

30 
	~"qvIEvítM™agî.h
"

33 
	~"IFûeSy°em.h
"

34 
	~"úrTy≥s.h
"

36 
«me•a˚
 
	gqv


38 
«me•a˚
 
	gvõws


41 
	gS˚√VõwIºlicht
::
S˚√VõwIºlicht
–c⁄° 
c8
* 
«me
, 
IEngöeM™agî
* 
ígöe
, 
u32
 
ñemítVõwHashTy≥
)

42 :
mVisibÀ
(
åue
), 
mDeÁu…Camîa
(0), 
mS˚√M™agî
(0),

43 
mEvítM™agî
(
ígöe
->
gëEvítM™agî
()), 
mEÀmítVõwHashTy≥
(
ñemítVõwHashTy≥
), 
mID
(0)

49 
	gmID
 = 
√w
 
EVI_ELEMENT_VIEW_ID
(
«me
);

52 
	gS˚√VõwIºlicht
::~
S˚√VõwIºlicht
()

54 
mS˚√M™agî
 = 0;

55 
	gA˘‹S˚√NodeM≠
::
P¨ítLa°Iãøt‹
 
ôrA˘‹
 = 
mA˘‹S˚√NodeM≠
.
gëP¨ítLa°Iãøt‹
();

57 !
	gôrA˘‹
.
©End
())

58 
	gmA˘‹S˚√NodeM≠
.
dñök
(
ôrA˘‹
->
gëKey
());

61 
	gúr
::
s˚√
::
IS˚√Node
* 
S˚√VõwIºlicht
::
födS˚√Node
–
u32
 
a˘‹HashId
)

71 
	gS˚√VõwIºlicht
::
addS˚√Node
(c⁄° 
gamög
::
SA˘‹Args
& 
¨gs
, 
u32
 
a˘‹HashId
)

76 
	gS˚√VõwIºlicht
::
lﬂdS˚√
(c⁄° 
c8
 *
s˚√Name
)

78 
mS˚√M™agî
->
gëFûeSy°em
()->
addZùFûeArchive
(
s˚√Name
);

82 
	gS˚√VõwIºlicht
::
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

84 
	gmS˚√M™agî
->
døwAŒ
();

87 
	gS˚√VõwIºlicht
::
upd©e
–
u32
 
ñ≠£dTimeMs
)

92 
S˚√VõwIºlicht
::
OnCª©eNode
(
úr
::
s˚√
::
IS˚√Node
* 
node
)

96 
S˚√VõwIºlicht
::
OnRódU£rD©a
(
úr
::
s˚√
::
IS˚√Node
* 
f‹S˚√Node
, iº::
io
::
IAâribuãs
* 
u£rD©a
)

98 
úr
::
c‹e
::
°rögc
 
nodeName
 = 
f‹S˚√Node
->
gëName
();

99 
	gúr
::
c‹e
::
°rögc
 
exp‹ãrName
 = 
u£rD©a
->
gëAâribuãAsSåög
("Exporter");

100 
boﬁ
 
	ghasPhysics
 = 
u£rD©a
->
gëAâribuãAsBoﬁ
("Physics.Enabled");

192 
	gúr
::
io
::
IAâribuãs
* 
S˚√VõwIºlicht
::
¸óãU£rD©a
(
úr
::
s˚√
::
IS˚√Node
* 
f‹S˚√Node
)

	@..\engine\source\quanticvortex\drivers\irrlicht\qvSceneViewIrrlicht.h

27 #i‚de‡
__SCENE_VIEW_IRRLICHT_H_


28 
	#__SCENE_VIEW_IRRLICHT_H_


	)

30 
	~"qvIS˚√Võw.h
"

32 
	~"úrM≠.h
"

34 
«me•a˚
 
	gqv


36 
˛ass
 
	gIEngöeM™agî
;

38 
«me•a˚
 
	gevíts


40 
˛ass
 
	gIEvítM™agî
;

43 
«me•a˚
 
	gvõws


45 
	gúr
::
	tc‹e
::
	tm≠
<
	ts32
, 
	túr
::
	ts˚√
::
	tIS˚√Node
*> 
	tA˘‹S˚√NodeM≠
;

47 ˛as†
	cS˚√VõwIºlicht
: 
public
 
IS˚√Võw


50 
public
:

51 
S˚√VõwIºlicht
–c⁄° 
c8
* 
«me
, 
IEngöeM™agî
* 
ígöe
, 
u32
 
ñemítVõwHashTy≥
 = 
EVT_ELEMENT_VIEW_SCENE
.
Hash
);

52 
	gvútuÆ
 ~
S˚√VõwIºlicht
();

54 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmID
->
	gHash
; }

56 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmEÀmítVõwHashTy≥
; }

58 
vútuÆ
 
boﬁ
 
gëVisibÀ
(Ëc⁄° {  
	gmVisibÀ
; }

75 
vútuÆ
 
£tVisibÀ
(
boﬁ
 
visibÀ
)

77 
	gmVisibÀ
 = 
visibÀ
;

80 
vútuÆ
 
£tCamîa
(
úr
::
s˚√
::
ICamîaS˚√Node
* 
ˇmîa
)

82 
mDeÁu…Camîa
 = 
ˇmîa
;

85 
vútuÆ
 
	gúr
::
s˚√
::
ICamîaS˚√Node
* 
gëCamîa
()

87  
mDeÁu…Camîa
;

90 
vútuÆ
 
	gúr
::
s˚√
::
IS˚√M™agî
* 
gëS˚√M™agî
()

92  
mS˚√M™agî
;

95 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

97 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
);

99 
vútuÆ
 
lﬂdS˚√
(c⁄° 
c8
* 
s˚√Name
);

101 
vútuÆ
 
addS˚√Node
(c⁄° 
gamög
::
SA˘‹Args
& 
¨gs
, 
u32
 
a˘‹HashId
 = 0);

103 
vútuÆ
 
	gúr
::
s˚√
::
IS˚√Node
* 
födS˚√Node
–
u32
 
a˘‹HashId
);

105 
vútuÆ
 
OnCª©eNode
(
úr
::
s˚√
::
IS˚√Node
* 
node
);

107 
vútuÆ
 
OnRódU£rD©a
(
úr
::
s˚√
::
IS˚√Node
* 
f‹S˚√Node
, iº::
io
::
IAâribuãs
* 
u£rD©a
);

109 
vútuÆ
 
	gúr
::
io
::
IAâribuãs
* 
¸óãU£rD©a
(
úr
::
s˚√
::
IS˚√Node
* 
f‹S˚√Node
);

111 
	g¥Ÿe˘ed
:

113 
boﬁ
 
mVisibÀ
;

114 
	gúr
::
s˚√
::
ICamîaS˚√Node
* 
mDeÁu…Camîa
;

115 
	gúr
::
s˚√
::
IS˚√M™agî
* 
mS˚√M™agî
;

116 
	gevíts
::
IEvítM™agî
* 
mEvítM™agî
;

117 
u32
 
	gmEÀmítVõwHashTy≥
;

118 
EVI_ELEMENT_VIEW_ID
* 
	gmID
;

119 
A˘‹S˚√NodeM≠
 
	gmA˘‹S˚√NodeM≠
;

	@..\engine\source\quanticvortex\qvActor.cpp

28 
	~"qvA˘‹.h
"

31 
«me•a˚
 
	gqv


33 
«me•a˚
 
	ggamög


36 
	gA˘‹
::
A˘‹
()

40 
A˘‹
::A˘‹–c⁄° 
c8
* 
a˘‹Name
, 
u32
 
a˘‹HashTy≥
)

41 : 
mA˘‹HashTy≥
(
a˘‹HashTy≥
)

43 
mId
 = 
√w
 
AI_ACTOR_ID
(
a˘‹Name
);

46 
	gA˘‹
::~
A˘‹
()

51 
A˘‹
::
upd©e
–
u32
 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvActor.h

28 #i‚de‡
__ACTOR_H_


29 
	#__ACTOR_H_


	)

31 
	~"qvIA˘‹.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	ggamög


38 ˛as†
	cA˘‹
: 
public
 
IA˘‹


41 
public
:

43 
A˘‹
();

44 
A˘‹
(c⁄° 
c8
* 
a˘‹Name
, 
u32
 
a˘‹HashTy≥
);

46 
	gvútuÆ
 ~
A˘‹
();

48 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmId
->
	gHash
;}

50 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmA˘‹HashTy≥
;}

54 
vútuÆ
 
boﬁ
 
isVisibÀ
 (Ëc⁄° {  
	gmVisibÀ
;}

62 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
);

64 
	g¥Ÿe˘ed
:

65 c⁄° 
AI_ACTOR_ID
* 
mId
;

66 
u32
 
	gmA˘‹HashTy≥
;

68 
boﬁ
 
	gmVisibÀ
;

	@..\engine\source\quanticvortex\qvActorManager.cpp

1 
	~"qvA˘‹M™agî.h
"

3 
«me•a˚
 
	gqv


5 
«me•a˚
 
	ggamög


8 
	gA˘‹M™agî
::
A˘‹M™agî
()

13 
A˘‹M™agî
::~ActorManager()

17 
IA˘‹Sh¨edPå
 
A˘‹M™agî
::
addA˘‹
–c⁄° 
c8
* 
a˘‹Name
, 
u32
 
a˘‹HashTy≥
)

19 
IA˘‹Sh¨edPå
 
	g±r
;

20  
	g±r
;

23 
IA˘‹Sh¨edPå
 
	gA˘‹M™agî
::
addCamîaA˘‹
–
u32
 
a˘‹HashTy≥
)

25 
IA˘‹Sh¨edPå
 
±r
;

26  
	g±r
;

29 
IA˘‹Sh¨edPå
 
	gA˘‹M™agî
::
addPœyîA˘‹
–
u32
 
a˘‹HashTy≥
)

31 
IA˘‹Sh¨edPå
 
±r
;

32  
	g±r
;

35 
	gA˘‹M™agî
::
födA˘‹sByTy≥
–
u32
 
a˘‹HashTy≥
 , 
A˘‹sSh¨edPåAºay
& 
a˘‹s
)

37 
s32
 
	gi
 = 0; i < 
	gmA˘‹s
.
size
(); ++i)

38 if(
	gmA˘‹s
[
i
]->
gëHashTy≥
(Ë=
a˘‹HashTy≥
)

39 
a˘‹s
.
push_back
(
mA˘‹s
[
i
]);

42 
IA˘‹Sh¨edPå
 
	gA˘‹M™agî
::
födA˘‹
(
u32
 
a˘‹HashId
)

44 
IA˘‹Sh¨edPå
 
a˘‹På
;

45 
s32
 
	gi
 = 0; i < 
	gmA˘‹s
.
size
(); ++i)

47 if(
	gmA˘‹s
[
i
]->
gëHashId
(Ë=
a˘‹HashId
)

49 
a˘‹På
 = 
mA˘‹s
[
i
];

54  
	ga˘‹På
;

57 
	gA˘‹M™agî
::
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹y
 * 
Á˘‹y
)

59 
mA˘‹sFa˘‹õs
.
push_back
(
IA˘‹Fa˘‹ySh¨edPå
(
Á˘‹y
));

62 
	gA˘‹M™agî
::
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹ySh¨edPå
 
Á˘‹y
)

64 
mA˘‹sFa˘‹õs
.
push_back
(
Á˘‹y
);

67 
	gA˘‹M™agî
::
ªmoveA˘‹
–
u32
 
a˘‹HashId
)

69 
u32
 
a˘‹Idx
;

72 
s32
 
	gi
 = 0; i < 
	gmA˘‹s
.
size
(); ++i)

74 if(
	gmA˘‹s
[
i
]->
gëHashId
(Ë=
a˘‹HashId
)

76 
a˘‹Idx
 = 
i
 ;

82 if((
	ga˘‹Idx
 > 0Ë&& (á˘‹Idx < 
	gmA˘‹s
.
size
()))

83 
	gmA˘‹s
.
îa£
(
a˘‹Idx
);

	@..\engine\source\quanticvortex\qvActorManager.h

2 #i‚de‡
__ACTORMANAGER_H_


3 
	#__ACTORMANAGER_H_


	)

5 
	~"qvIA˘‹M™agî.h
"

7 
	~"qvA˘‹Fa˘‹y.h
"

10 
«me•a˚
 
	gqv


12 
«me•a˚
 
	ggamög


14 ˛as†
	cA˘‹M™agî
: 
IA˘‹M™agî


16 
public
:

17 
A˘‹M™agî
();

19 
	gvútuÆ
 ~
A˘‹M™agî
();

21 
vútuÆ
 
IA˘‹Sh¨edPå
 
addA˘‹
–c⁄° 
c8
* 
a˘‹Name
, 
u32
 
a˘‹HashTy≥
);

23 
vútuÆ
 
IA˘‹Sh¨edPå
 
addCamîaA˘‹
–
u32
 
a˘‹HashTy≥
);

25 
vútuÆ
 
IA˘‹Sh¨edPå
 
addPœyîA˘‹
–
u32
 
a˘‹HashTy≥
);

27 
vútuÆ
 
födA˘‹sByTy≥
–
u32
 
a˘‹HashTy≥
 , 
A˘‹sSh¨edPåAºay
& 
a˘‹s
);

29 
vútuÆ
 
IA˘‹Sh¨edPå
 
födA˘‹
(
u32
 
a˘‹HashId
);

31 
vútuÆ
 
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹y
 * 
Á˘‹y
);

33 
vútuÆ
 
ªgi°îA˘‹Fa˘‹y
(
IA˘‹Fa˘‹ySh¨edPå
 
Á˘‹y
);

35 
vútuÆ
 
ªmoveA˘‹
–
u32
 
a˘‹HashId
);

37 
	g¥iv©e
:

38 
A˘‹sSh¨edPåAºay
 
mA˘‹s
;

39 
A˘‹Fa˘‹ySh¨edPåAºay
 
	gmA˘‹sFa˘‹õs
;

	@..\engine\source\quanticvortex\qvActorMotion.cpp

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


	@..\engine\source\quanticvortex\qvActorMotion.h

2 #i‚de‡
__ACTOR_PHYSICS_MOTION_H_


3 
	#__ACTOR_PHYSICS_MOTION_H_


	)

5 
	~"btDeÁu…MŸi⁄Sèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gphysics


12 
	gA˘‹PhysicsMŸi⁄
 : 
btDeÁu…MŸi⁄Sèã


15 
A˘‹MŸi⁄
();

	@..\engine\source\quanticvortex\qvActorMotionState.h

28 #i‚de‡
__ACTOR_MOTION_STATE_H_


29 
	#__ACTOR_MOTION_STATE_H_


	)

31 
	~"qvPªªquisôes.h
"

32 
	~"qvTy≥s.h
"

33 
	~"qvA˘‹Ty≥s.h
"

35 
	~"LöórM©h/btQu©îni⁄.h
"

36 
	~"LöórM©h/btDeÁu…MŸi⁄Sèã.h
"

38 
	~"IS˚√Node.h
"

40 
	g«me•a˚


42 
qu©îni⁄ToEuÀr
(c⁄° 
btQu©îni⁄
 &
TQu©
, 
btVe˘‹3
 &
TEuÀr
)

44 
btSˇœr
 
	gW
 = 
TQu©
.
gëW
();

45 
btSˇœr
 
	gX
 = 
TQu©
.
gëX
();

46 
btSˇœr
 
	gY
 = 
TQu©
.
gëY
();

47 
btSˇœr
 
	gZ
 = 
TQu©
.
gëZ
();

49 
	gqv
::
ªÆ
 
WSqu¨ed
 = 
W
 * W;

50 
	gqv
::
ªÆ
 
XSqu¨ed
 = 
X
 * X;

51 
	gqv
::
ªÆ
 
YSqu¨ed
 = 
Y
 * Y;

52 
	gqv
::
ªÆ
 
ZSqu¨ed
 = 
Z
 * Z;

54 
	gTEuÀr
.
£tX
(
©™2f
(2.0‡* (
Y
 * 
Z
 + 
X
 * 
W
), -
XSqu¨ed
 - 
YSqu¨ed
 + 
ZSqu¨ed
 + 
WSqu¨ed
));

55 
	gTEuÀr
.
£tY
(
asöf
(-2.0‡* (
X
 * 
Z
 - 
Y
 * 
W
)));

56 
	gTEuÀr
.
£tZ
(
©™2f
(2.0‡* (
X
 * 
Y
 + 
Z
 * 
W
), 
XSqu¨ed
 - 
YSqu¨ed
 - 
ZSqu¨ed
 + 
WSqu¨ed
));

58 
	gTEuÀr
 *
úr
::
c‹e
::
RADTODEG
;

63 
«me•a˚
 
	gqv


65 
«me•a˚
 
	gphysics


67 
	gA˘‹MŸi⁄Sèã
: 
public
 
btDeÁu…MŸi⁄Sèã


69 
¥iv©e
:

70 
úr
::
s˚√
::
IS˚√Node
* 
mS˚√Node
;

71 c⁄° 
	ggamög
::
AI_ACTOR_ID
* 
mA˘‹Id
;

73 
	gpublic
:

75 
A˘‹MŸi⁄Sèã
(c⁄° 
gamög
::
AI_ACTOR_ID
* 
a˘‹Id
, 
úr
::
s˚√
::
IS˚√Node
* 
s˚√Node
)

76 :
mS˚√Node
(
s˚√Node
), 
mA˘‹Id
(
a˘‹Id
)

81 
vútuÆ
 
gëW‹ldTønsf‹m
(
btTønsf‹m
& 
˚¡îOfMassW‹ldTøns
 ) const

83 
	g˚¡îOfMassW‹ldTøns
 = 
m_gøphicsW‹ldTøns
;

88 
vútuÆ
 
£tW‹ldTønsf‹m
(c⁄° 
btTønsf‹m
& 
˚¡îOfMassW‹ldTøns
)

91 
	gm_°¨tW‹ldTøns
 = 
˚¡îOfMassW‹ldTøns
;

92 
	gm_gøphicsW‹ldTøns
 = 
˚¡îOfMassW‹ldTøns
;

94 c⁄° 
	gbtVe˘‹3
& 
	gPoöt
 = 
˚¡îOfMassW‹ldTøns
.
gëOrigö
();

95 
	gmS˚√Node
->
£tPosôi⁄
(
úr
::
c‹e
::
ve˘‹3df
(
Poöt
[0], Point[1], Point[2]));

98 
btVe˘‹3
 
	gEuÀrRŸ©i⁄
;

99 
qu©îni⁄ToEuÀr
(
˚¡îOfMassW‹ldTøns
.
gëRŸ©i⁄
(), 
EuÀrRŸ©i⁄
);

100 
	gmS˚√Node
->
£tRŸ©i⁄
(
úr
::
c‹e
::
ve˘‹3df
(
EuÀrRŸ©i⁄
[0], EulerRotation[1], EulerRotation[2]));

104 
u32
 
gëA˘‹Id
() const

106  
	gmA˘‹Id
->
	gHash
;

	@..\engine\source\quanticvortex\qvAnyKeyInputTranslator.cpp

27 
	~"qvAnyKeyI≈utTøn¶©‹.h
"

29 
	~"qvIEvítM™agî.h
"

30 
	~"qvII≈utRe˚ivî.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	göput


38 
	gAnyKeyI≈utTøn¶©‹
::
AnyKeyI≈utTøn¶©‹
(
evíts
::
IEvítM™agî
* 
evítM™agî
,

39 
boﬁ
 
ªÆTime
, 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
,

40 c⁄° 
c8
* 
öputTøn¶©‹Name
,

41 
u32
 
öputTøn¶©‹HashTy≥
)

42 :
mEvítM™agî
(
evítM™agî
), 
mRólTime
(
ªÆTime
),

43 
mArgs
(
¨gs
),

44 
mI≈utTøn¶©‹HashTy≥
(
öputTøn¶©‹HashTy≥
)

47 
	gmID
 = 
√w
 
ITI_INPUT_TRANSLATOR_ID
(
öputTøn¶©‹Name
);

50 
	gAnyKeyI≈utTøn¶©‹
::~
AnyKeyI≈utTøn¶©‹
()

54 
boﬁ
 
AnyKeyI≈utTøn¶©‹
::
å™¶©e
(
qv
::
öput
::
II≈utRe˚ivî
 *
c⁄ãxt
)

56 
boﬁ
 
å™¶©ed
 = 
Ál£
;

58 if(
	gmRólTime
)

59 
	gmEvítM™agî
->
åiggî
(
mArgs
);

61 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

63 
	gå™¶©ed
 = 
åue
;

65  
	gå™¶©ed
;

	@..\engine\source\quanticvortex\qvAnyKeyInputTranslator.h

28 #i‚de‡
_ANY_KEY_INPUT_TRANSLATOR_H_


29 
	#_ANY_KEY_INPUT_TRANSLATOR_H_


	)

31 
	~"qvIAnyKeyI≈utTøn¶©‹.h
"

32 
	~"qvIEvítArgs.h
"

35 
«me•a˚
 
	gqv


43 
«me•a˚
 
	göput


45 
˛ass
 
	gII≈utRe˚ivî
;

47 ˛as†
	cAnyKeyI≈utTøn¶©‹
 : 
public
 
IAnyKeyI≈utTøn¶©‹


50 
public
:

52 
AnyKeyI≈utTøn¶©‹
(
evíts
::
IEvítM™agî
* 
evítM™agî
,

53 
boﬁ
 
ªÆTime
,

54 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
,

55 c⁄° 
c8
* 
öputTøn¶©‹Name
,

56 
u32
 
öputTøn¶©‹HashTy≥
 = 
ITT_ANY_KEY
.
Hash
);

58 
	gvútuÆ
 ~
AnyKeyI≈utTøn¶©‹
();

60 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmID
->
	gHash
; }

62 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmI≈utTøn¶©‹HashTy≥
; }

64 
vútuÆ
 
boﬁ
 
å™¶©e
(
II≈utRe˚ivî
 *
c⁄ãxt
);

66 
	g¥iv©e
:

67 
evíts
::
IEvítM™agî
* 
mEvítM™agî
;

68 
boﬁ
 
	gmRólTime
;

69 
	gevíts
::
IEvítArgsSh¨edPå
 
mArgs
;

70 c⁄° 
ITI_INPUT_TRANSLATOR_ID
* 
	gmID
;

71 
u32
 
	gmI≈utTøn¶©‹HashTy≥
;

	@..\engine\source\quanticvortex\qvDefaultElementViewFactory.cpp

28 
	~"qvDeÁu…EÀmítVõwFa˘‹y.h
"

29 
	~"drivîs/úæicht/qvS˚√VõwIºlicht.h
"

30 
	~"qvGuiVõw.h
"

32 
«me•a˚
 
	gqv


34 
«me•a˚
 
	gvõws


37 
	gDeÁu…EÀmítVõwFa˘‹y
::
DeÁu…EÀmítVõwFa˘‹y
(
IEngöeM™agî
* 
ígöe
)

38 :
mEngöe
(
ígöe
)

40 
mSuµ‹ãdEÀmítVõwTy≥s
.
push_back
(
EVT_ELEMENT_VIEW_SCENE
.
Hash
);

41 
	gmSuµ‹ãdEÀmítVõwTy≥s
.
push_back
(
EVT_ELEMENT_VIEW_GUI
.
Hash
);

44 
	gDeÁu…EÀmítVõwFa˘‹y
::~
DeÁu…EÀmítVõwFa˘‹y
()

48 
IEÀmítVõwSh¨edPå
 
DeÁu…EÀmítVõwFa˘‹y
::
addEÀmítVõw
–c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
)

50 
IEÀmítVõwSh¨edPå
 
	gñemítVõw
;

52 if(
	gñemítVõwHashTy≥
 =
EVT_ELEMENT_VIEW_SCENE
.
Hash
)

53 
ñemítVõw
.
assign
(
√w
 
S˚√VõwIºlicht
(
«me
, 
mEngöe
));

58  
	gñemítVõw
;

61 
u32
 
	gDeÁu…EÀmítVõwFa˘‹y
::
gëCª©abÀEÀmítVõwTy≥Cou¡
() const

63  
mSuµ‹ãdEÀmítVõwTy≥s
.
size
();

66 
boﬁ
 
	gDeÁu…EÀmítVõwFa˘‹y
::
gëCª©óbÀEÀmítVõwTy≥
–
u32
 
ñemítVõwHashTy≥
) const

68 
u32
 
i
=0; 
	gi
<
	gmSuµ‹ãdEÀmítVõwTy≥s
.
size
(); ++i)

69 i‡(
	gmSuµ‹ãdEÀmítVõwTy≥s
[
i
] =
ñemítVõwHashTy≥
)

70  
åue
;

72  
	gÁl£
;

	@..\engine\source\quanticvortex\qvDefaultElementViewFactory.h

28 #i‚de‡
__DEFAULT_ELEMENT_VIEW_FACTORY_H_


29 
	#__DEFAULT_ELEMENT_VIEW_FACTORY_H_


	)

31 
	~"qvIEÀmítVõwFa˘‹y.h
"

33 
	~"úrAºay.h
"

35 
«me•a˚
 
	gqv


37 
˛ass
 
	gIEngöeM™agî
;

39 
«me•a˚
 
	gvõws


42 ˛as†
	cDeÁu…EÀmítVõwFa˘‹y
 : 
public
 
IEÀmítVõwFa˘‹y


44 
¥iv©e
:

45 
úr
::
c‹e
::
¨øy
<
u32
> 
mSuµ‹ãdEÀmítVõwTy≥s
;

46 
IEngöeM™agî
* 
	gmEngöe
;

48 
	gpublic
:

49 
DeÁu…EÀmítVõwFa˘‹y
(
IEngöeM™agî
* 
ígöe
);

50 
	gvútuÆ
 ~
DeÁu…EÀmítVõwFa˘‹y
();

52 
vútuÆ
 
IEÀmítVõwSh¨edPå
 
addEÀmítVõw
–c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
);

54 
vútuÆ
 
u32
 
gëCª©abÀEÀmítVõwTy≥Cou¡
() const;

56 
vútuÆ
 
boﬁ
 
gëCª©óbÀEÀmítVõwTy≥
–
u32
 
ñemítVõwHashTy≥
) const;

	@..\engine\source\quanticvortex\qvDefaultEventArgsFactory.cpp

28 
	~"qvDeÁu…EvítArgsFa˘‹y.h
"

30 
	~"qvEvítArgs.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	gevíts


38 
	gDeÁu…EvítArgsFa˘‹y
::
DeÁu…EvítArgsFa˘‹y
()

41 
mSuµ‹ãdEvítArgsTy≥s
.
push_back
(
ET_GAME_QUIT
.
Hash
);

42 
	gmSuµ‹ãdEvítArgsTy≥s
.
push_back
(
ET_GAME_NEW
.
Hash
);

43 
	gmSuµ‹ãdEvítArgsTy≥s
.
push_back
(
ET_GAME_STATE_CHANGE
.
Hash
);

46 
	gDeÁu…EvítArgsFa˘‹y
::~
DeÁu…EvítArgsFa˘‹y
()

50 
IEvítArgsSh¨edPå
 
DeÁu…EvítArgsFa˘‹y
::
¸óãEvítArgs
–
u32
 
evítArgsHashTy≥
)

52 
IEvítArgsSh¨edPå
 
evítArgs
;

54 if(
gëCª©óbÀEvítArgsTy≥
(
evítArgsHashTy≥
))

55 
	gevítArgs
 = 
IEvítArgsSh¨edPå
(
√w
 
EvítArgs
–
evítArgsHashTy≥
));

57  
	gevítArgs
;

60 
u32
 
	gDeÁu…EvítArgsFa˘‹y
::
gëCª©abÀEvítArgsTy≥Cou¡
() const

62  
mSuµ‹ãdEvítArgsTy≥s
.
size
();

65 
boﬁ
 
	gDeÁu…EvítArgsFa˘‹y
::
gëCª©óbÀEvítArgsTy≥
–
u32
 
evítArgsHashTy≥
) const

67 
u32
 
i
=0; 
	gi
<
	gmSuµ‹ãdEvítArgsTy≥s
.
size
(); ++i)

68 i‡(
	gmSuµ‹ãdEvítArgsTy≥s
[
i
] =
evítArgsHashTy≥
)

69  
åue
;

71  
	gÁl£
;

	@..\engine\source\quanticvortex\qvDefaultEventArgsFactory.h

28 #i‚de‡
__DEFAULT_EVENT_ARGS_FACTORY_H_


29 
	#__DEFAULT_EVENT_ARGS_FACTORY_H_


	)

31 
	~"qvIEvítArgsFa˘‹y.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	gevíts


37 ˛as†
	cDeÁu…EvítArgsFa˘‹y
 : 
public
 
IEvítArgsFa˘‹y


39 
¥iv©e
:

40 
EvítHashTy≥sVe˘‹
 
mSuµ‹ãdEvítArgsTy≥s
;

42 
	gpublic
:

43 
DeÁu…EvítArgsFa˘‹y
();

45 
	gvútuÆ
 ~
DeÁu…EvítArgsFa˘‹y
();

47 
vútuÆ
 
IEvítArgsSh¨edPå
 
¸óãEvítArgs
–
u32
 
evítArgsHashTy≥
);

49 
vútuÆ
 
u32
 
gëCª©abÀEvítArgsTy≥Cou¡
() const;

51 
vútuÆ
 
boﬁ
 
gëCª©óbÀEvítArgsTy≥
–
u32
 
evítArgsHashTy≥
) const;

	@..\engine\source\quanticvortex\qvDefaultGameViewFactory.cpp

28 
	~"qvDeÁu…GameVõwFa˘‹y.h
"

29 
	~"qvHum™Võw.h
"

31 
«me•a˚
 
	gqv


33 
«me•a˚
 
	gvõws


36 
	gDeÁu…GameVõwFa˘‹y
::
DeÁu…GameVõwFa˘‹y
(
IEngöeM™agî
* 
ígöe
)

37 :
mEngöe
(
ígöe
)

39 
mSuµ‹ãdGameVõwTy≥s
.
push_back
(
GVT_GAME_VIEW_HUMAN
.
Hash
);

40 
	gmSuµ‹ãdGameVõwTy≥s
.
push_back
(
GVT_GAME_VIEW_AI
.
Hash
);

41 
	gmSuµ‹ãdGameVõwTy≥s
.
push_back
(
GVT_GAME_VIEW_RECORDER
.
Hash
);

42 
	gmSuµ‹ãdGameVõwTy≥s
.
push_back
(
GVT_GAME_VIEW_NETWORK
.
Hash
);

43 
	gmSuµ‹ãdGameVõwTy≥s
.
push_back
(
GVT_GAME_VIEW_PHYSICS
.
Hash
);

46 
	gDeÁu…GameVõwFa˘‹y
::~
DeÁu…GameVõwFa˘‹y
()

50 
IGameVõwSh¨edPå
 
DeÁu…GameVõwFa˘‹y
::
addGameVõw
–
u32
 
gameVõwHashTy≥
)

52 
IGameVõwSh¨edPå
 
gameVõw
;

72  
	ggameVõw
;

75 
u32
 
	gDeÁu…GameVõwFa˘‹y
::
gëCª©abÀGameVõwTy≥Cou¡
() const

77  
mSuµ‹ãdGameVõwTy≥s
.
size
();

80 
boﬁ
 
	gDeÁu…GameVõwFa˘‹y
::
gëCª©óbÀGameVõwTy≥
–
u32
 
gameVõwHashTy≥
) const

82 
u32
 
i
=0; 
	gi
<
	gmSuµ‹ãdGameVõwTy≥s
.
size
(); ++i)

83 i‡(
	gmSuµ‹ãdGameVõwTy≥s
[
i
] =
gameVõwHashTy≥
)

84  
åue
;

86  
	gÁl£
;

	@..\engine\source\quanticvortex\qvDefaultGameViewFactory.h

28 #i‚de‡
__DEFAULT_GAME_VIEW_FACTORY_H_


29 
	#__DEFAULT_GAME_VIEW_FACTORY_H_


	)

31 
	~"qvIGameVõwFa˘‹y.h
"

33 
	~"úrAºay.h
"

36 
«me•a˚
 
	gqv


38 
˛ass
 
	gIEngöeM™agî
;

41 
«me•a˚
 
	gvõws


43 ˛as†
	cDeÁu…GameVõwFa˘‹y
 : 
public
 
IGameVõwFa˘‹y


45 
¥iv©e
:

46 
úr
::
c‹e
::
¨øy
<
u32
> 
mSuµ‹ãdGameVõwTy≥s
;

47 
IEngöeM™agî
* 
	gmEngöe
;

49 
	gpublic
:

50 
DeÁu…GameVõwFa˘‹y
(
IEngöeM™agî
* 
ígöe
);

51 
	gvútuÆ
 ~
DeÁu…GameVõwFa˘‹y
();

53 
vútuÆ
 
IGameVõwSh¨edPå
 
addGameVõw
–
u32
 
gameVõwHashTy≥
);

55 
vútuÆ
 
u32
 
gëCª©abÀGameVõwTy≥Cou¡
() const;

57 
vútuÆ
 
boﬁ
 
gëCª©óbÀGameVõwTy≥
–
u32
 
gameVõwHashTy≥
) const;

	@..\engine\source\quanticvortex\qvEngineInputTranslatorFactory.cpp

28 
	~"qvEngöeI≈utTøn¶©‹Fa˘‹y.h
"

31 
	~"qvAnyKeyI≈utTøn¶©‹.h
"

32 
	~"qvSögÀKeyI≈utTøn¶©‹.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	göput


40 
	gEngöeI≈utTøn¶©‹Fa˘‹y
::
EngöeI≈utTøn¶©‹Fa˘‹y
–
IEvítM™agî
* 
evítM™agî
,

41 
II≈utRe˚ivî
* 
öputRe˚ivî
)

42 :
mEvítM™agî
(
evítM™agî
),

43 
mI≈utRe˚ivî
(
öputRe˚ivî
)

45 
	gmSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
.
push_back
(
ITT_ANY_KEY
.
Hash
);

46 
	gmSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
.
push_back
(
ITT_SINGLE_KEY
.
Hash
);

54 
	gEngöeI≈utTøn¶©‹Fa˘‹y
::~
EngöeI≈utTøn¶©‹Fa˘‹y
()

58 
II≈utTøn¶©‹Sh¨edPå
 
EngöeI≈utTøn¶©‹Fa˘‹y
::
addI≈utTøn¶©‹
 (c⁄° 
c8
* 
öputTøn¶©‹Name
, 
u32
 
öputTøn¶©‹HashTy≥
, 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
, 
boﬁ
 
ªÆTime
)

60 
II≈utTøn¶©‹Sh¨edPå
 
	gå™¶©‹
;

67  
	gå™¶©‹
;

70 
u32
 
	gEngöeI≈utTøn¶©‹Fa˘‹y
::
gëCª©abÀI≈utTøn¶©‹Cou¡
() const

72  
mSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
.
size
();

75 
boﬁ
 
	gEngöeI≈utTøn¶©‹Fa˘‹y
::
gëCª©óbÀI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashTy≥
) const

77 
u32
 
i
=0; 
	gi
<
	gmSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
.
size
(); ++i)

78 i‡(
	gmSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
[
i
] =
öputTøn¶©‹HashTy≥
)

79  
åue
;

81  
	gÁl£
;

	@..\engine\source\quanticvortex\qvEngineInputTranslatorFactory.h

28 #i‚de‡
_ENGINE_INPUT_TRANSLATOR_FACTORY_H_


29 
	#_kENGINE_INPUT_TRANSLATOR_FACTORY_H_


	)

31 
	~"qvII≈utTøn¶©‹Fa˘‹y.h
"

33 
«me•a˚
 
	gqv


35 
˛ass
 
	gIEvítM™agî
;

37 
«me•a˚
 
	göput


39 
˛ass
 
	gII≈utRe˚ivî
;

42 
«me•a˚
 
	göput


44 ˛as†
	cEngöeI≈utTøn¶©‹Fa˘‹y
 : 
public
 
II≈utTøn¶©‹Fa˘‹y


46 
¥Ÿe˘ed
:

47 
I≈utTøn¶©‹HashTy≥sAºay
 
mSuµ‹ãdEngöeI≈utTøn¶©‹Ty≥s
;

48 
IEvítM™agî
* 
	gmEvítM™agî
;

49 
II≈utRe˚ivî
* 
	gmI≈utRe˚ivî
;

51 
	gpublic
:

52 
EngöeI≈utTøn¶©‹Fa˘‹y
–
IEvítM™agî
* 
evítM™agî
, 
II≈utRe˚ivî
* 
öputRe˚ivî
);

54 
	gvútuÆ
 ~
EngöeI≈utTøn¶©‹Fa˘‹y
();

56 
vútuÆ
 
II≈utTøn¶©‹Sh¨edPå
 
addI≈utTøn¶©‹
 (c⁄° 
c8
* 
öputTøn¶©‹Name
, 
u32
 
öputTøn¶©‹HashTy≥
, 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
, 
boﬁ
 
ªÆTime
 = 
Ál£
);

58 
vútuÆ
 
u32
 
gëCª©abÀI≈utTøn¶©‹Cou¡
() const;

60 
vútuÆ
 
boﬁ
 
gëCª©óbÀI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashTy≥
) const;

	@..\engine\source\quanticvortex\qvEngineManager.cpp

28 
	~"qvEvítM™agî.h
"

29 
	~"qvEngöeM™agî.h
"

30 
	~"qvA˘‹M™agî.h
"

32 
	~"qvGameLogic.h
"

34 
	~"úæicht.h
"

36 
	~"drivîs/úæicht/qvI≈utEvítH™dÀrIºlicht.h
"

38 
«me•a˚
 
	gqv


41 
	gEngöeM™agî
::
EngöeM™agî
()

44 #ifde‡
_DEBUG


45 
£tDebugName
("EngineManager");

47 
	gmGameP¨ams
.
	gBôs
 = 16;

48 
	gmGameP¨ams
.
	gFuŒs¸ìn
 = 
Ál£
;

49 
	gmGameP¨ams
.
	gLoˇlPœyîs
 = 1;

50 
	gmGameP¨ams
.
	gTôÀ
 = "Default game Window";

51 
	gmGameP¨ams
.
	gWödowSize
 = 
úr
::
c‹e
::
dimísi⁄2di
(1024,768);

54 
	gEngöeM™agî
::
EngöeM™agî
(c⁄° 
SGameP¨ams
& 
∑øms
):
_hñpReque°ed
(
Ál£
),

55 
mQuô
(
Ál£
), 
mGameLogic
(0), 
mEvítM™agî
(0), 
mI≈utRe˚ivî
(0),

56 
mDevi˚3d
(0)

61 #ifde‡
_DEBUG


62 
£tDebugName
("EngineManager");

65 
	gmGameP¨ams
 = 
∑øms
;

68 
	gEngöeM™agî
::~
EngöeM™agî
()

70 
föÆize
();

73 
	gEngöeM™agî
::
ªgi°îGameEvíts
()

92 
mEvítM™agî
->
ªgi°îEvítTy≥
(
qv
::
evíts
::
ET_GAME_QUIT
.
Hash
);

93 
	gmEvítM™agî
->
ªgi°îEvítTy≥
(
qv
::
evíts
::
ET_GAME_SAVE
.
Hash
);

94 
	gmEvítM™agî
->
ªgi°îEvítTy≥
(
qv
::
evíts
::
ET_GAME_OPTIONS
.
Hash
);

95 
	gmEvítM™agî
->
ªgi°îEvítTy≥
(
qv
::
evíts
::
ET_GAME_LOAD
.
Hash
);

96 
	gmEvítM™agî
->
ªgi°îEvítTy≥
(
qv
::
evíts
::
ET_GAME_NEW
.
Hash
);

115 
	gEngöeM™agî
::
ªgi°îI≈utRe˚ivîDrivîFa˘‹y
(
öput
::
II≈utRe˚ivîDrivîFa˘‹y
 *
Á˘‹y
)

137 
EngöeM™agî
::
lﬂdC⁄figuøti⁄
()

145 
boﬁ
 
EngöeM™agî
::
öôülize
()

148 
lﬂdC⁄figuøti⁄
();

150 
	gúr
::
SIºlichtCª©i⁄P¨amëîs
 
∑ømëîs
;

152 
	g∑ømëîs
.
	gBôs
 = 
mGameP¨ams
.
Bôs
;

153 
	g∑ømëîs
.
	gDrivîTy≥
 = 
úr
::
video
::
EDT_OPENGL
;

154 
	g∑ømëîs
.
	gSãncûbuf„r
 = 
åue
;

155 
	g∑ømëîs
.
	gWödowSize
 = 
mGameP¨ams
.
WödowSize
;

156 
	g∑ømëîs
.
	gFuŒs¸ìn
 = 
mGameP¨ams
.
FuŒs¸ìn
;

158 
	gmDevi˚3d
 = 
úr
::
¸óãDevi˚Ex
(
∑ømëîs
);

164 
	gmEvítM™agî
 = 
√w
 
evíts
::
EvítM™agî
();

166 
ªgi°îGameEvíts
();

168  
	gåue
;

171 
	gEngöeM™agî
::
föÆize
()

173 
u32
 
i
 = 0; 
	gi
 < 
	gmI≈utRe˚ivîDrivîFa˘‹õs
.
size
(); ++i)

174 
	gmI≈utRe˚ivîDrivîFa˘‹õs
[
i
]->
dr›
();

176 
	gmDevi˚3d
->
dr›
();

179 
	gEngöeM™agî
::
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

181 i‡(
	gmGameLogic
)

183 
	gmEvítM™agî
->
¥o˚ss
(
GC_GAME_FRAMERATE
);

185 
	gmGameLogic
->
upd©e
(
cuºítTimeMs
, 
ñ≠£dTimeMs
);

189 
	gEngöeM™agî
::
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

196 
	gEngöeM™agî
::
begöRídî
(
boﬁ
 
backBuf„r
, boﬁ 
zBuf„r
)

198 
	gmDevi˚3d
->
gëVideoDrivî
()->
begöS˚√
(
backBuf„r
, 
zBuf„r
);

201 
	gEngöeM™agî
::
ídRídî
()

203 
mDevi˚3d
->
gëVideoDrivî
()->
ídS˚√
();

206 
s32
 
	gEngöeM™agî
::
run
()

208 i‡(!
_hñpReque°ed
)

210 
mDevi˚3d
->
gëTimî
()->
gëTime
();

212 
s32
 
	gœ°FPS
 = -1;

216 
u32
 
	gœ°TimeMs
 = 
mDevi˚3d
->
gëTimî
()->
gëTime
();

218 
	gmDevi˚3d
->
run
(Ë&& !
	gmQuô
)

221 c⁄° 
u32
 
	gcuª¡TimeMs
 = 
mDevi˚3d
->
gëTimî
()->
gëTime
();

222 
u32
 
	gñ≠£dTimeMs
 = (
cuª¡TimeMs
 - 
œ°TimeMs
);

224 
	gœ°TimeMs
 = 
cuª¡TimeMs
;

226 if(
	gñ≠£dTimeMs
 > 16)

227 
	gñ≠£dTimeMs
 = 16;

232 
upd©e
–
cuª¡TimeMs
, 
ñ≠£dTimeMs
);

235 
ªndî
–
cuª¡TimeMs
, 
ñ≠£dTimeMs
);

237 
	gœ°TimeMs
 = 
cuª¡TimeMs
;

239 
s32
 
	gÂs
 = 
mDevi˚3d
->
gëVideoDrivî
()->
gëFPS
();

241 i‡(
	gœ°FPS
 !
Âs
)

252 
œ°FPS
 = 
Âs
;

	@..\engine\source\quanticvortex\qvEngineManager.h

28 #i‚de‡
__ENGINE_MANAGER_H_


29 
	#__ENGINE_MANAGER_H_


	)

31 
	~"qvIEngöeM™agî.h
"

37 
	~"úrAºay.h
"

39 
	~"IºlichtDevi˚.h
"

42 
«me•a˚
 
	gqv


45 ˛as†
	cEngöeM™agî
 : 
public
 
IEngöeM™agî


47 
public
:

49 
EngöeM™agî
();

51 
EngöeM™agî
(c⁄° 
SGameP¨ams
& 
∑øms
 );

53 
	gvútuÆ
 ~
EngöeM™agî
();

55 
vútuÆ
 
boﬁ
 
öôülize
();

57 
vútuÆ
 
föÆize
();

59 
vútuÆ
 
s32
 
run
();

61 
vútuÆ
 
begöRídî
(
boﬁ
 
backBuf„r
, boﬁ 
zBuf„r
);

63 
vútuÆ
 
ídRídî
();

68 
vútuÆ
 
ªgi°îI≈utRe˚ivîDrivîFa˘‹y
(
öput
::
II≈utRe˚ivîDrivîFa˘‹y
* 
Á˘‹y
);

70 
vútuÆ
 
	ggamög
::
IGameLogic
* 
gëGameLogic
()

72  
mGameLogic
;

75 
vútuÆ
 
	gevíts
::
IEvítM™agî
* 
gëEvítM™agî
()

77  
mEvítM™agî
;

80 
vútuÆ
 
	göput
::
II≈utRe˚ivî
* 
gëI≈utRe˚ivî
()

82  
mI≈utRe˚ivî
;

85 
vútuÆ
 
	gSGameP¨ams
& 
gëGameP¨amëîs
()

87  
	gmGameP¨ams
;

120 
vútuÆ
 
£tQuô
(
boﬁ
 
quô
)

122 
	gmQuô
 = 
quô
;

125 
	g¥iv©e
:

126 
boﬁ
 
_hñpReque°ed
;

127 
boﬁ
 
	gmHasP›up
;

128 
boﬁ
 
	gmQuô
;

129 
btClock
 
	gmClock
;

131 
	g¥Ÿe˘ed
:

132 
SGameP¨ams
 
mGameP¨ams
;

135 
	gúr
::
c‹e
::
¨øy
<
öput
::
II≈utRe˚ivîDrivîFa˘‹y
*> 
mI≈utRe˚ivîDrivîFa˘‹õs
;

137 
	ggamög
::
IGameLogic
* 
mGameLogic
;

138 
	gevíts
::
IEvítM™agî
* 
mEvítM™agî
;

140 
	göput
::
II≈utRe˚ivîSh¨edPå
 
mI≈utRe˚ivî
;

142 
	gúr
::
IºlichtDevi˚
* 
mDevi˚3d
;

148 
vútuÆ
 
lﬂdC⁄figuøti⁄
();

150 
vútuÆ
 
ªgi°îGameEvíts
();

152 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

154 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

	@..\engine\source\quanticvortex\qvEventArgs.cpp

27 
	~"qvEvítArgs.h
"

29 
«me•a˚
 
	gqv


31 
«me•a˚
 
	gevíts


34 
	gEvítArgs
::
EvítArgs
–
u32
 
evítArgsHashTy≥
)

35 :
mEvítArgsHashTy≥
(
evítArgsHashTy≥
)

39 
EvítArgs
::~EventArgs()

	@..\engine\source\quanticvortex\qvEventArgs.h

28 #i‚de‡
__EVENT_ARGS_H_


29 
	#__EVENT_ARGS_H_


	)

31 
	~"qvIEvítArgs.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	gevíts


37 ˛as†
	cEvítArgs
: 
public
 
IEvítArgs


39 
public
:

41 
EvítArgs
–
u32
 
evítArgsHashTy≥
);

43 
	gvútuÆ
 ~
EvítArgs
();

45 
vútuÆ
 
u32
 
gëHashTy≥
( ) const;

47 
	g¥iv©e
:

48 
u32
 
mEvítArgsHashTy≥
;

51 
ölöe
 
u32
 
	gEvítArgs
::
gëHashTy≥
(Ëc⁄° {  
mEvítArgsHashTy≥
; }

	@..\engine\source\quanticvortex\qvEventManager.cpp

28 
	~"qvEvítM™agî.h
"

34 
	~"qvDeÁu…EvítArgsFa˘‹y.h
"

37 
«me•a˚
 
	gqv


39 
«me•a˚
 
	gevíts


42 
	gEvítM™agî
::
EvítM™agî
()

43 :
mA˘iveRódyEvítLi°
(0)

47 
DeÁu…EvítArgsFa˘‹y
* 
Á˘‹y
 = 
√w
 DefaultEventArgsFactory();

48 
ªgi°îEvítArgsFa˘‹y
(
Á˘‹y
);

52 
	gEvítM™agî
::~
EvítM™agî
()

74 
mVÆidEvítTy≥s
.
˛ór
();

80 
IEvítArgsSh¨edPå
 
	gEvítM™agî
::
¸óãEm±yEvítArgs
(
u32
 
evítArgsHashTy≥
)

82 
IEvítArgsSh¨edPå
 
¨gs
;

83  
	g¨gs
;

86 
	gEvítM™agî
::
ªgi°îEvítTy≥
–
u32
 
evítHashTy≥
)

88 if–
evítHashTy≥
 <= 0)

91 if(!
vÆid©eTy≥
(
evítHashTy≥
))

92 
	gmVÆidEvítTy≥s
.
push_back
(
evítHashTy≥
);

95 
	gEvítM™agî
::
uƒegi°îEvítTy≥
–
u32
 
evítHashTy≥
)

100 
EvítM™agî
::
ªgi°îEvítArgsFa˘‹y
(
IEvítArgsFa˘‹y
* 
Á˘‹y
)

103 
mEvítArgsFa˘‹õs
.
push_back
(
Á˘‹y
);

106 
boﬁ
 
	gEvítM™agî
::
ab‹tEvít
–
u32
 
evítHashTy≥
, boﬁ 
Æl
)

108  
	gåue
;

111 
boﬁ
 
	gEvítM™agî
::
ªgi°îComm™dEvít
(
IEvítComm™dSh¨edPå
 
comm™d
)

159  
åue
;

162 
boﬁ
 
	gEvítM™agî
::
uƒegi°îComm™dEvít
(
IEvítComm™dSh¨edPå
 
comm™d
)

184  
åue
;

187 
boﬁ
 
	gEvítM™agî
::
íqueueEvít
(
IEvítArgsSh¨edPå
 
¨gs
)

189 if(!
vÆid©eTy≥
(
¨gs
->
gëHashTy≥
()))

190  
Ál£
;

199 
	gmRódyEvíts
[
mA˘iveRódyEvítLi°
].
push_back
(
¨gs
);

201  
	gåue
;

204 
boﬁ
 
	gEvítM™agî
::
¥o˚ss
(
ªÆ
 
¥o˚ssögTime
)

206 
boﬁ
 
evítH™dÀd
 = 
Ál£
;

207 
s32
 
	g¥o˚ssRódyEvítLi°
 = 
mA˘iveRódyEvítLi°
;

216 if(
	gmA˘iveRódyEvítLi°
 == 1)

217 --
mA˘iveRódyEvítLi°
;

219 ++
	gmA˘iveRódyEvítLi°
;

225 
u32
 
	gi
 = 0; i < 
	gmRódyEvíts
[
¥o˚ssRódyEvítLi°
].
size
(); ++i)

226 
åiggî
(
mRódyEvíts
[
¥o˚ssRódyEvítLi°
][
i
]);

245 
	gmRódyEvíts
[
¥o˚ssRódyEvítLi°
].
˛ór
();

247  
	gevítH™dÀd
;

250 
boﬁ
 
	gEvítM™agî
::
åiggî
(
IEvítArgsSh¨edPå
 
¨gs
)

252 if(!
¨gs
 || !
vÆid©eTy≥
◊rgs->
gëHashTy≥
()))

253  
Ál£
;

263 
boﬁ
 
	gevítH™dÀd
 = 
Ál£
;

274  
	gevítH™dÀd
;

277 
boﬁ
 
	gEvítM™agî
::
vÆid©eTy≥
–
u32
 
evítHashTy≥
)

279 if(
evítHashTy≥
 <= 0)

280  
Ál£
;

287  
	gÁl£
;

	@..\engine\source\quanticvortex\qvEventManager.h

28 #i‚de‡
__EVENT_MANAGER_H_


29 
	#__EVENT_MANAGER_H_


	)

31 
	~"qvIEvítM™agî.h
"

32 
	~"qvIEvítComm™d.h
"

33 
	~"qvIEvítArgsFa˘‹y.h
"

37 
	~"Poco/AtomicCou¡î.h
"

39 
«me•a˚
 
	gqv


41 
«me•a˚
 
	gevíts


44 ˛as†
	cEvítM™agî
: 
public
 
IEvítM™agî


46 
¥iv©e
:

48 c⁄° 
s32
 
QueueEvítsLíght
 = 2;

57 
	gpublic
:

58 
EvítM™agî
();

59 
	gvútuÆ
 ~
EvítM™agî
();

61 
vútuÆ
 
boﬁ
 
ªgi°îComm™dEvít
 ( 
IEvítComm™dSh¨edPå
 
comm™d
);

63 
vútuÆ
 
boﬁ
 
uƒegi°îComm™dEvít
 ( 
IEvítComm™dSh¨edPå
 
comm™d
);

66 
vútuÆ
 
IEvítArgsSh¨edPå
 
¸óãEm±yEvítArgs
–
u32
 
evítArgsHashty≥
);

74 
vútuÆ
 
ªgi°îEvítArgsFa˘‹y
(
IEvítArgsFa˘‹y
 * 
Á˘‹y
);

76 
vútuÆ
 
ªgi°îEvítTy≥
–
u32
 
evítHashTy≥
);

78 
vútuÆ
 
uƒegi°îEvítTy≥
–
u32
 
evítHashTy≥
);

80 
vútuÆ
 
boﬁ
 
ab‹tEvít
 ( 
u32
 
evítHashTy≥
, boﬁ 
Æl
 = 
Ál£
 );

82 
vútuÆ
 
boﬁ
 
íqueueEvít
 (
IEvítArgsSh¨edPå
 
¨gs
);

84 
vútuÆ
 
boﬁ
 
¥o˚ss
 ( 
ªÆ
 
¥o˚ssögTime
);

86 
vútuÆ
 
boﬁ
 
åiggî
 ( 
IEvítArgsSh¨edPå
 
¨gs
 );

88 
vútuÆ
 
boﬁ
 
vÆid©eTy≥
(
u32
 
evítHashTy≥
);

90 
	g¥iv©e
:

91 
EvítHashTy≥sVe˘‹
 
mVÆidEvítTy≥s
;

92 
EvítArgsEvítComm™dVe˘‹
 
	gmRegi°ªdComm™dsM≠
;

93 
EvítArgsVe˘‹
 
	gmRódyEvíts
[
QueueEvítsLíght
];

95 
EvítArgsFa˘‹yVe˘‹
 
	gmEvítArgsFa˘‹õs
;

96 
	gPoco
::
AtomicCou¡î
 
mA˘iveRódyEvítLi°
;

	@..\engine\source\quanticvortex\qvGameLogic.cpp

28 
	~"qvGameLogic.h
"

30 
	~"qvIA˘‹.h
"

31 
	~"qvIEngöeM™agî.h
"

32 
	~"qvDeÁu…GameVõwFa˘‹y.h
"

33 
	~"qvSA˘‹P¨ams.h
"

34 
	~"qvHum™Võw.h
"

40 
	~"qvPhysicsM™agî.h
"

43 
«me•a˚
 
	gqv


45 
«me•a˚
 
	ggamög


48 
	gGameLogic
::
GameLogic
(
IEngöeM™agî
* 
ígöeM™agî
)

49 :
mEngöeM™agî
(
ígöeM™agî
), 
mPhysicsM™agî
(0)

51 #ifde‡
_DEBUG


52 
£tDebugName
("DefaultGameLogic");

54 
	gvõws
::
DeÁu…GameVõwFa˘‹y
* 
Á˘‹y
 = 
√w
 
võws
::DeÁu…GameVõwFa˘‹y(
ígöeM™agî
);

55 
ªgi°îGameVõwFa˘‹y
(
Á˘‹y
);

56 
	gÁ˘‹y
->
dr›
();

58 
	gmPhysicsM™agî
 = 
√w
 
physics
::
PhysicsM™agî
(
mEngöeM™agî
);

61 
	gGameLogic
::~
GameLogic
()

67 
mGameVõws
.
˛ór
();

69 
	gA˘‹sM≠
::
P¨ítLa°Iãøt‹
 
ôrA˘‹
 = 
mA˘‹s
.
gëP¨ítLa°Iãøt‹
();

77 
	gmA˘‹s
.
˛ór
();

80 
boﬁ
 
	gGameLogic
::
öôülize
()

83 
mPhysicsM™agî
->
öôülize
();

101  
	gåue
;

104 
boﬁ
 
	gGameLogic
::
föÆize
()

106  
åue
;

109 
	gGameLogic
::
addA˘‹
–
u32
 
a˘‹HashId
)

111 
IA˘‹
* 
a˘‹
 = 0;

115 if(!
	gmA˘‹s
.
föd
(
a˘‹HashId
))

130 
	gGameLogic
::
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

190 if(
	gmPhysicsM™agî
)

192 
	gmPhysicsM™agî
->
upd©e
(
ñ≠£dTimeMs
);

196 
u32
 
	gi
 = 0; i < 
	gmGameVõws
.
size
(); ++i)

197 
	gmGameVõws
[
i
]->
upd©e
–
ñ≠£dTimeMs
 );

201 
boﬁ
 
	gGameLogic
::
lﬂdGame
(c⁄° 
úr
::
c‹e
::
°rögc
& 
gameName
)

209  
åue
;

213 
	gGameLogic
::
ch™geSèã
(c⁄° 
S_STATE
* 
√wSèã
)

215 
mSèã
 = 
√wSèã
;

218 
	gGameLogic
::
addVõw
(
võws
::
IGameVõw
* 
gameVõw
, 
u32
 
a˘‹HashId
)

221 
	gmGameVõws
.
push_back
(
gameVõw
);

232 
	gvõws
::
IGameVõw
* 
GameLogic
::
addVõw
–c⁄° 
c8
* 
võwID
, 
u32
 
võwHashTy≥
, u32 
a˘‹HashId
)

234 
	gvõws
::
IGameVõw
* 
gameVõw
(0);

236 
u32
 
	gi
 = 0; i < 
	gmGameVõwFa˘‹õs
.
size
(); ++i)

248  
	ggameVõw
;

253 
	gGameLogic
::
ªmoveVõw
(
võws
::
IGameVõw
* 
gameVõw
)

255 
s32
 
idx
 = 
mGameVõws
.
bö¨y_£¨ch
(
gameVõw
);

260 
	gGameLogic
::
ªgi°îGameVõwFa˘‹y
(
võws
::
IGameVõwFa˘‹y
 *
Á˘‹yToAdd
)

262 
Á˘‹yToAdd
->
gøb
();

263 
	gmGameVõwFa˘‹õs
.
push_back
(
Á˘‹yToAdd
);

	@..\engine\source\quanticvortex\qvGameLogic.h

28 #i‚de‡
__DEFAULT_GAME_LOGIC_H_


29 
	#__DEFAULT_GAME_LOGIC_H_


	)

32 
	~"qvIGameLogic.h
"

36 
	~"qvIPro˚ssM™agî.h
"

38 
	~"úrAºay.h
"

39 
	~"úrM≠.h
"

42 
«me•a˚
 
	gqv


44 
˛ass
 
	gIEngöeM™agî
;

46 
«me•a˚
 
	gvõws


48 
˛ass
 
	gIGameVõwFa˘‹y
;

51 
«me•a˚
 
	ggamög


54 ˛as†
	cGameLogic
 : 
public
 
IGameLogic


56 
public
:

57 
GameLogic
(
IEngöeM™agî
* 
ígöeM™agî
);

58 
	gvútuÆ
 ~
GameLogic
();

60 
vútuÆ
 
boﬁ
 
öôülize
();

62 
vútuÆ
 
boﬁ
 
föÆize
();

64 
vútuÆ
 
IA˘‹Sh¨edPå
 
gëA˘‹
–
u32
 
a˘‹HashId
)

67 
IA˘‹
* 
	ga˘‹Founded
 = 0;

70  
	ga˘‹Founded
;

73 
vútuÆ
 
addA˘‹
–
u32
 
a˘‹HashId
);

84 
ªmoveA˘‹
–
u32
 
a˘‹HashId
)

86 
IA˘‹
* 
	ga˘‹
 = 
gëA˘‹
(
a˘‹HashId
);

88 if(
	ga˘‹
)

96 
vútuÆ
 c⁄° 
	gvõws
::
GameVõwsAºay
& 
gëGameVõws
() const

98  
mGameVõws
;

101 
vútuÆ
 
addVõw
(
võws
::
IGameVõw
* 
gameVõw
, 
u32
 
a˘‹HashId
 = 0);

103 
vútuÆ
 
	gvõws
::
IGameVõw
* 
addVõw
(c⁄° 
c8
* 
võwID
, 
u32
 
võwHashTy≥
, u32 
a˘‹HashId
 = 0);

105 
vútuÆ
 
ªmoveVõw
(
võws
::
IGameVõw
* 
gameVõw
);

107 
vútuÆ
 
ªgi°îGameVõwFa˘‹y
(
võws
::
IGameVõwFa˘‹y
* 
Á˘‹yToAdd
);

110 
vútuÆ
 
boﬁ
 
lﬂdGame
(c⁄° 
úr
::
c‹e
::
°rögc
& 
gameName
);

112 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

114 
vútuÆ
 
ch™geSèã
–c⁄° 
S_STATE
* 
√wSèã
);

117 
	gphysics
::
IPhysicsM™agî
* 
gëPhysicsM™agî
(){ 
mPhysicsM™agî
;}

129 
	g¥Ÿe˘ed
:

131 
úr
::
c‹e
::
¨øy
<
võws
::
IGameVõwFa˘‹y
*> 
mGameVõwFa˘‹õs
;

133 c⁄° 
S_STATE
* 
	gmSèã
;

135 
A˘‹sM≠
 
	gmA˘‹s
;

137 
	gvõws
::
GameVõwsAºay
 
mGameVõws
;

139 
IEngöeM™agî
* 
	gmEngöeM™agî
;

146 
	gphysics
::
IPhysicsM™agî
* 
mPhysicsM™agî
;

	@..\engine\source\quanticvortex\qvGameParameters.cpp

2 
	~"qvGameP¨amëîs.h
"

5 
«me•a˚
 
	gqv


9 
	gGameP¨amëîs
::
GameP¨amëîs
()

13 
GameP¨amëîs
::~GameParameters()

17 
GameP¨amëîs
::
£rülizeAâribuãs
(
úr
::
io
::
IAâribuãs
 *
out
, iº::io::
SAâribuãRódWrôeO±i⁄s
 *
›ti⁄s
) const

36 
GameP¨amëîs
::
de£rülizeAâribuãs
(
úr
::
io
::
IAâribuãs
 *
ö
, iº::io::
SAâribuãRódWrôeO±i⁄s
 *
›ti⁄s
)

	@..\engine\source\quanticvortex\qvGameStateMachine.cpp

2 
	~"qvGameSèãMachöe.h
"

3 
	~"qvIGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gGameSèãMachöe
::
GameSèãMachöe
()

15 
GameSèãMachöe
::~GameStateMachine()

19 
GameSèãMachöe
::
addSèã
(
qv
::
ISèã
 *
°©e
, 
boﬁ
 
°¨tUpSèã
)

33 if(
	g°¨tUpSèã
)

34 
	gmCuºítSèã
 = 
°©e
;

38 
	gGameSèãMachöe
::
ch™geSèã
(c⁄° 
qv
::
S_STATE
* 
√wSèã
)

56 
GameSèãMachöe
::
ªmoveSèã
(
qv
::
ISèã
 *
°©e
)

	@..\engine\source\quanticvortex\qvGameStateMachine.h

27 #i‚de‡
__GAME_STATE_MACHINE_H_


28 
	#__GAME_STATE_MACHINE_H_


	)

30 
	~"qvTy≥s.h
"

31 
	~"qvISèãMachöe.h
"

34 
«me•a˚
 
	gqv


36 
«me•a˚
 
	ggamög


38 
˛ass
 
	gIGameSèã
;

42 ˛as†
	cGameSèãMachöe
: 
public
 
ISèãMachöe


44 
¥Ÿe˘ed
:

46 
ISèã
* 
mCuºítSèã
;

48 
	gpublic
:

49 
GameSèãMachöe
();

50 ~
GameSèãMachöe
();

52 
vútuÆ
 
addSèã
(
ISèã
* 
°©e
, 
boﬁ
 
°¨tUpSèã
 = 
Ál£
);

53 
vútuÆ
 
ch™geSèã
(c⁄° 
S_STATE
* 
√wSèã
);

54 
vútuÆ
 
ISèã
* 
gëCuºítSèã
(){ 
	gmCuºítSèã
;}

55 
vútuÆ
 
ªmoveSèã
(
ISèã
* 
°©e
);

57 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

59 
	gmCuºítSèã
->
upd©e
(
cuºítTimeMs
, 
ñ≠£dTimeMs
);

	@..\engine\source\quanticvortex\qvGuiView.cpp

2 
	~"qvGuiVõw.h
"

3 
	~"qvIEngöeM™agî.h
"

6 
«me•a˚
 
	gqv


8 
«me•a˚
 
	gvõws


11 
	gGuiVõw
::
GuiVõw
(c⁄° 
c8
* 
«me
,
IEngöeM™agî
* 
ígöe
, 
u32
 
ñemítVõwHashTy≥
)

12 : 
mEÀmít
(0), 
mGuiM™agî
(0), 
mVisibÀ
(
åue
), 
mHashTy≥
(
ñemítVõwHashTy≥
)

18 
	gmID
 = 
√w
 
EVI_ELEMENT_VIEW_ID
(
«me
);

24 
	gGuiVõw
::~
GuiVõw
()

28 
GuiVõw
::
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

33 
	gGuiVõw
::
upd©e
–
u32
 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvGuiView.h

2 #i‚de‡
__GUIVIEW_H_


3 
	#__GUIVIEW_H_


	)

5 
	~"qvIGuiVõw.h
"

7 
	~"IGUIEÀmít.h
"

8 
	~"IGUIEnvú⁄mít.h
"

10 
«me•a˚
 
	gqv


12 
˛ass
 
	gIEngöeM™agî
;

14 
«me•a˚
 
	gvõws


17 ˛as†
	cGuiVõw
: 
public
 
IGuiVõw


19 
¥Ÿe˘ed
:

20 
úr
::
gui
::
IGUIEÀmít
* 
mEÀmít
;

21 
	gúr
::
gui
::
IGUIEnvú⁄mít
* 
mGuiM™agî
;

22 
boﬁ
 
	gmVisibÀ
;

23 
u32
 
	gmHashTy≥
;

24 c⁄° 
EVI_ELEMENT_VIEW_ID
* 
	gmID
;

26 
	gpublic
:

27 
GuiVõw
(c⁄° 
c8
* 
«me
, 
IEngöeM™agî
* 
ígöe
, 
u32
 
ñemítVõwHashTy≥
);

28 
	gvútuÆ
 ~
GuiVõw
();

30 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmID
->
	gHash
; }

32 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmHashTy≥
; }

34 
vútuÆ
 
boﬁ
 
gëVisibÀ
(Ëc⁄° {  
	gmVisibÀ
; }

37 
vútuÆ
 
£tVisibÀ
–
boﬁ
 
visibÀ
)

39 
	gmVisibÀ
 = 
visibÀ
;

42 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

43 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
);

	@..\engine\source\quanticvortex\qvHashFunctions.cpp

28 
	~"qvHashFun˘i⁄s.h
"

31 
«me•a˚
 
	gqv


33 
_QUANTICVORTEX_API_
 
u32
 
QUANTICVORTEX_CALLCONV
 
¸óãMurmurHash2
 ( c⁄° * 
key
, u32 
Àn
, u32 
£ed
)

38 c⁄° 
u32
 
	gm
 = 0x5bd1e995;

39 c⁄° 
s32
 
	gr
 = 24;

43 
u32
 
	gh
 = 
£ed
 ^ 
Àn
;

47 c⁄° 
u8
 * 
	gd©a
 = (c⁄° u8 *)
key
;

49 
	gÀn
 >= 4)

51 
u32
 
k
 = *(u32 *)
d©a
;

53 
	gk
 *
m
;

54 
	gk
 ^
k
 >> 
r
;

55 
	gk
 *
m
;

57 
	gh
 *
m
;

58 
	gh
 ^
k
;

60 
	gd©a
 += 4;

61 
	gÀn
 -= 4;

66 
	gÀn
)

68 3: 
h
 ^
d©a
[2] << 16;

69 2: 
h
 ^
d©a
[1] << 8;

70 1: 
h
 ^
d©a
[0];

71 
	gh
 *
m
;

77 
	gh
 ^
h
 >> 13;

78 
	gh
 *
m
;

79 
	gh
 ^
h
 >> 15;

81  
	gh
;

	@..\engine\source\quanticvortex\qvHumanView.cpp

28 
	~"qvHum™Võw.h
"

30 
	~"qvDeÁu…EÀmítVõwFa˘‹y.h
"

31 
	~"qvIEvítM™agî.h
"

32 
	~"qvIEngöeM™agî.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	gvõws


40 
	gHum™Võw
::
Hum™Võw
–
IEngöeM™agî
* 
ígöe
, 
u32
 
võwHashTy≥
)

41 : 
mVõwHashTy≥
(
võwHashTy≥
), 
mLa°Upd©eTime
(0.0f), 
mEngöe
(
ígöe
),

42 
mCuºítTime
(0.0f), 
mAccumuœt‹Time
(0)

50 
DeÁu…EÀmítVõwFa˘‹y
* 
	gÁ˘‹y
 = 
√w
 DeÁu…EÀmítVõwFa˘‹y(
mEngöe
);

51 
ªgi°îEÀmítVõwFa˘‹y
(
Á˘‹y
);

52 
	gÁ˘‹y
->
dr›
();

67 
	gHum™Võw
::~
Hum™Võw
()

74 
mEÀmítVõws
.
˛ór
();

84 
	gHum™Võw
::
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
)

95 
	gmCuºítTime
 = 
cuºítTimeMs
;

97 i‡(
	gmCuºítTime
 =
mLa°Upd©eTime
)

100 
	gmAccumuœt‹Time
 +
ñ≠£dTimeMs
;

102 if(
	gmAccumuœt‹Time
 >= 16 )

104 
mEngöe
->
begöRídî
(
åue
,Årue);

114 
	gmEngöe
->
ídRídî
();

117 
	gmLa°Upd©eTime
 = 
mCuºítTime
;

118 
	gmAccumuœt‹Time
 = 0;

128 
	gHum™Võw
::
upd©e
–
u32
 
ñ≠£dTimeMs
)

143 
IEÀmítVõwSh¨edPå
 
Hum™Võw
::
addEÀmítVõw
(c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
)

145 
IEÀmítVõwSh¨edPå
 
	gñemítVõw
;

160  
	gñemítVõw
;

182 
	gHum™Võw
::
ªgi°îEÀmítVõwFa˘‹y
(
IEÀmítVõwFa˘‹y
 *
Á˘‹yToAdd
)

	@..\engine\source\quanticvortex\qvHumanView.h

28 #i‚de‡
__HUMAN_VIEW_H_


29 
	#__HUMAN_VIEW_H_


	)

31 
	~"qvIHum™Võw.h
"

35 
«me•a˚
 
	gqv


37 
˛ass
 
	gIEngöeM™agî
;

39 
«me•a˚
 
	gvõws


41 
˛ass
 
	gIEÀmítVõwFa˘‹y
;

43 ˛as†
	cHum™Võw
: 
public
 
IHum™Võw


45 
public
:

46 
Hum™Võw
(
IEngöeM™agî
* 
ígöe
, 
u32
 
võwHashTy≥
 = 
GVT_GAME_VIEW_HUMAN
.
Hash
);

48 
	gvútuÆ
 ~
Hum™Võw
();

50 
vútuÆ
 
©èch
(
u32
 
võwHashId
, u32 
a˘‹HashId
 = 0)

52 
mVõwHashId
 = 
võwHashId
;

53 
	gmA˘‹HashId
 = 
a˘‹HashId
;

56 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmVõwHashId
; }

58 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmVõwHashTy≥
; }

62 
vútuÆ
 
upd©e
(
u32
 
ñ≠£dTimeMs
);

64 
vútuÆ
 
ªndî
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

67 
vútuÆ
 
IEÀmítVõwSh¨edPå
 
addEÀmítVõw
(c⁄° 
c8
* 
«me
, 
u32
 
ñemítVõwHashTy≥
);

73 
vútuÆ
 
ªgi°îEÀmítVõwFa˘‹y
(
IEÀmítVõwFa˘‹y
* 
Á˘‹yToAdd
);

83 
	g¥Ÿe˘ed
:

84 
IEngöeM™agî
* 
mEngöe
;

85 
u32
 
	gmVõwHashTy≥
;

86 
u32
 
	gmVõwHashId
;

87 
u32
 
	gmA˘‹HashId
;

88 
EÀmítVõwLi°
 
	gmEÀmítVõws
;

99 
ªÆ
 
	gmCuºítTime
;

100 
ªÆ
 
	gmLa°Upd©eTime
;

101 
u32
 
	gmAccumuœt‹Time
;

103 
	gcAudio
::
IAudioM™agî
* 
mAudioM™agî
;

	@..\engine\source\quanticvortex\qvInitializatingGameState.cpp

2 
	~"qvInôüliz©ögGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gInôüliz©ögGameSèã
::
Inôüliz©ögGameSèã
()

11 :
mSèã
(
S_GAME_STATE_INITIALIZATING
)

15 
Inôüliz©ögGameSèã
::~InitializatingGameState()

20 
Inôüliz©ögGameSèã
::
c⁄figuª
()

25 
Inôüliz©ögGameSèã
::
íãr
()

30 
Inôüliz©ögGameSèã
::
Àave
()

35 
Inôüliz©ögGameSèã
::
upd©e
(
úr
::
u32
 
cuºítTimeMs
, iº::u32 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvInitializatingGameState.h

2 #i‚de‡
__INITIALIZATING_GAME_STATE_H_


3 
	#__INITIALIZATING_GAME_STATE_H_


	)

5 
	~"qvIGameSèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gvõws


12 
˛ass
 
	gIS˚√Võw
;

15 
«me•a˚
 
	ggamög


18 ˛as†
	cInôüliz©ögGameSèã
: 
public
 
ISèã


20 
public
:

21 
Inôüliz©ögGameSèã
();

22 ~
Inôüliz©ögGameSèã
();

24 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
()

26  
	gmSèã
;

29 
vútuÆ
 
c⁄figuª
();

31 
vútuÆ
 
íãr
();

33 
vútuÆ
 
Àave
();

35 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

37 
	g¥iv©e
:

38 c⁄° 
S_STATE
* 
mSèã
;

	@..\engine\source\quanticvortex\qvInputReceiver.cpp

27 
	~"qvI≈utRe˚ivî.h
"

29 
	~"qvIEngöeM™agî.h
"

32 
«me•a˚
 
	gqv


34 
«me•a˚
 
	göput


37 
	gI≈utRe˚ivî
::
I≈utRe˚ivî
(
IEngöeM™agî
* 
ígöeM™agî
)

38 :
mCuºítGíî©i⁄
(0), 
mEngöeM™agî
(
ígöeM™agî
)

40 
u8
 
	gi
 = 0; i < 
	gC_KEY_GENERATIONS_COUNT
; ++i)

41 
u8
 
	gj
 = 0; j < 
	gúr
::
KEY_KEY_CODES_COUNT
; ++j)

42 
	gmKeyPªs£d
[
i
][
j
] = 0;

45 
	gI≈utRe˚ivî
::~
I≈utRe˚ivî
()

49 
boﬁ
 
I≈utRe˚ivî
::
OnEvít
(c⁄° 
úr
::
SEvít
& 
evít
)

53 
evít
.
EvítTy≥
)

55 
úr
::
EET_GUI_EVENT
:

58 
	gúr
::
EET_KEY_INPUT_EVENT
:

60 
mKeyPªs£d
[
mCuºítGíî©i⁄
][
evít
.
KeyI≈ut
.
Key
] =Évít.KeyI≈ut.
Pªs£dDown
;

68 ++
	gmCuºítGíî©i⁄
;

69 if(
	gmCuºítGíî©i⁄
 =
C_KEY_GENERATIONS_COUNT
)

70 
mCuºítGíî©i⁄
 = 0;

73 
	gúr
::
EET_JOYSTICK_INPUT_EVENT
:

76 
	gúr
::
EET_MOUSE_INPUT_EVENT
:

88  
	gåue
;

91 
	gI≈utRe˚ivî
::
ªgi°îI≈utTøn¶©‹
(
II≈utTøn¶©‹
* 
å™¶©‹
)

96 
I≈utRe˚ivî
::
uƒegi°îI≈utTøn¶©‹
(
II≈utTøn¶©‹
* 
å™¶©‹
)

100 
I≈utRe˚ivî
::
uƒegi°îI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
)

	@..\engine\source\quanticvortex\qvInputReceiver.h

28 #i‚de‡
_INPUTRECEIVER_H_


29 
	#_INPUTRECEIVER_H_


	)

31 
	~"qvII≈utRe˚ivî.h
"

34 
«me•a˚
 
	gqv


36 
˛ass
 
	gIEngöeM™agî
;

38 
«me•a˚
 
	göput


40 ˛as†
	cI≈utRe˚ivî
 : 
public
 
II≈utRe˚ivî


42 
¥iv©e
:

43 c⁄° 
c8
 
C_KEY_GENERATIONS_COUNT
 = 4;

45 
u8
 
	gmCuºítGíî©i⁄
;

46 
boﬁ
 
	gmKeyPªs£d
[
C_KEY_GENERATIONS_COUNT
][
úr
::
KEY_KEY_CODES_COUNT
];

48 
IEngöeM™agî
* 
	gmEngöeM™agî
;

50 
	gpublic
:

52 
I≈utRe˚ivî
(
IEngöeM™agî
* 
ígöeM™agî
);

53 
	gvútuÆ
 ~
I≈utRe˚ivî
();

55 
vútuÆ
 
boﬁ
 
OnEvít
(c⁄° 
úr
::
SEvít
& 
evít
);

56 
vútuÆ
 
ªgi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
);

57 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
u32
 
öputTøn¶©‹HashId
);

58 
vútuÆ
 
uƒegi°îI≈utTøn¶©‹
–
II≈utTøn¶©‹
* 
å™¶©‹
);

	@..\engine\source\quanticvortex\qvLoadingGameState.cpp

2 
	~"qvLﬂdögGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gLﬂdögGameSèã
::
LﬂdögGameSèã
()

11 :
mSèã
(
S_GAME_STATE_LOADING
)

15 
LﬂdögGameSèã
::~LoadingGameState()

20 
LﬂdögGameSèã
::
c⁄figuª
()

25 
LﬂdögGameSèã
::
íãr
()

30 
LﬂdögGameSèã
::
Àave
()

35 
LﬂdögGameSèã
::
upd©e
(
úr
::
u32
 
cuºítTimeMs
, iº::u32 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvLoadingGameState.h

2 #i‚de‡
__LOADING_GAME_STATE_H_


3 
	#__LOADING_GAME_STATE_H_


	)

5 
	~"qvIGameSèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gvõws


12 
˛ass
 
	gIS˚√Võw
;

15 
«me•a˚
 
	ggamög


18 ˛as†
	cLﬂdögGameSèã
: 
public
 
ISèã


20 
public
:

21 
LﬂdögGameSèã
();

22 ~
LﬂdögGameSèã
();

24 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
()

26  
	gmSèã
;

29 
vútuÆ
 
c⁄figuª
();

31 
vútuÆ
 
íãr
();

33 
vútuÆ
 
Àave
();

35 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

37 
	g¥iv©e
:

38 c⁄° 
S_STATE
* 
mSèã
;

	@..\engine\source\quanticvortex\qvMenuGameState.cpp

2 
	~"qvMíuGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gMíuGameSèã
::
MíuGameSèã
()

11 :
mSèã
(
S_GAME_STATE_MENU
)

15 
MíuGameSèã
::~MenuGameState()

20 
MíuGameSèã
::
c⁄figuª
()

25 
MíuGameSèã
::
íãr
()

30 
MíuGameSèã
::
Àave
()

35 
MíuGameSèã
::
upd©e
(
úr
::
u32
 
cuºítTimeMs
, iº::u32 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvMenuGameState.h

2 #i‚de‡
__MENU_GAME_STATE_H_


3 
	#__MENU_GAME_STATE_H_


	)

5 
	~"qvIGameSèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gvõws


12 
˛ass
 
	gIS˚√Võw
;

15 
«me•a˚
 
	ggamög


18 ˛as†
	cMíuGameSèã
: 
public
 
ISèã


20 
public
:

21 
MíuGameSèã
();

22 ~
MíuGameSèã
();

24 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
()

26  
	gmSèã
;

29 
vútuÆ
 
c⁄figuª
();

31 
vútuÆ
 
íãr
();

33 
vútuÆ
 
Àave
();

35 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

37 
	g¥iv©e
:

38 c⁄° 
S_STATE
* 
mSèã
;

	@..\engine\source\quanticvortex\qvPhysicsManager.cpp

2 
	~"qvPhysicsM™agî.h
"

4 
	~"qvIEngöeM™agî.h
"

6 
	~"btBuŒëCﬁlisi⁄Comm⁄.h
"

7 
	~"btBuŒëDy«micsComm⁄.h
"

8 
	~"BuŒëCﬁlisi⁄/Cﬁlisi⁄Di•©ch/btGho°Obje˘.h
"

9 
	~"BuŒëCﬁlisi⁄/Brﬂdpha£Cﬁlisi⁄/btOvîœµögPaúCÆlback.h
"

12 
«me•a˚
 
	gqv


14 
«me•a˚
 
	gphysics


17 
	gPhysicsM™agî
::
PhysicsM™agî
(
IEngöeM™agî
* 
ígöeM™agî
)

18 :
mEngöeM™agî
(
ígöeM™agî
), 
mBuŒëDy«micsW‹ld
(0), 
mBuŒëBrﬂdpha£I¡îÁ˚
(0),

19 
mBuŒëCﬁlisi⁄Di•©chî
(0), 
mBuŒëC⁄°øötSﬁvî
(0),

20 
mBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
(0)

25 
	gPhysicsM™agî
::~
PhysicsM™agî
()

27 
dñëe
 
mBuŒëDy«micsW‹ld
;

30 
boﬁ
 
	gPhysicsM™agî
::
öôülize
()

32 
mBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
 = 
√w
 
btDeÁu…Cﬁlisi⁄C⁄figuøti⁄
();

33 
	gmBuŒëCﬁlisi⁄Di•©chî
 = 
√w
 
btCﬁlisi⁄Di•©chî
(
mBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
);

35 
	gmBuŒëBrﬂdpha£I¡îÁ˚
 = 
√w
 
btDbvtBrﬂdpha£
();

37 
	gmBuŒëC⁄°øötSﬁvî
 = 
√w
 
btSequítülImpul£C⁄°øötSﬁvî
();

39 
	gmBuŒëDy«micsW‹ld
 = 
√w
 
btDis¸ëeDy«micsW‹ld
(
mBuŒëCﬁlisi⁄Di•©chî
,

40 
mBuŒëBrﬂdpha£I¡îÁ˚
,

41 
mBuŒëC⁄°øötSﬁvî
,

42 
mBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
);

44 
	gmBuŒëDy«micsW‹ld
->
£tGøvôy
(
btVe˘‹3
(0,-0.98,0));

47 
btOvîœµögPaúCÆlback
* 
	ggho°PaúCÆlback
 = 
√w
 
btGho°PaúCÆlback
();

48 
	gmBuŒëDy«micsW‹ld
->
gëBrﬂdpha£
()->
gëOvîœµögPaúCache
()->
£tI¡î«lGho°PaúCÆlback
(
gho°PaúCÆlback
);

51  
	gåue
;

54 
boﬁ
 
	gPhysicsM™agî
::
föÆize
()

56 
dñëe
 
mBuŒëDy«micsW‹ld
;

57 
dñëe
 
	gmBuŒëC⁄°øötSﬁvî
;

58 
dñëe
 
	gmBuŒëBrﬂdpha£I¡îÁ˚
;

59 
dñëe
 
	gmBuŒëCﬁlisi⁄Di•©chî
;

60 
dñëe
 
	gmBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
;

62  
	gåue
;

153 
	gPhysicsM™agî
::
upd©e
–
u32
 
ñ≠£dTimeMs
)

155 
mBuŒëDy«micsW‹ld
->
°ïSimuœti⁄
(
btSˇœr
(
ñ≠£dTimeMs
/1000.0f), 2);

158 
	gPhysicsM™agî
::
addSh≠e
(
ªÆ
 
ødius
, 
gamög
::
IA˘‹
 *
a˘‹
,Ñó»
•ecificGøvôy
)

164 
	gPhysicsM™agî
::
addBox
(c⁄° 
úr
::
c‹e
::
ve˘‹3df
 &
dimísi⁄s
, 
qv
::
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
)

169 
	gPhysicsM™agî
::
addC⁄vexHuŒ
(
úr
::
c‹e
::
ve˘‹3df
 *
vîts
, iº::
s32
 
numPoöts
, 
qv
::
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
)

173 
	gPhysicsM™agî
::
addSphîe
–
ªÆ
 
ødius
, 
qv
::
gamög
::
IA˘‹
 *
a˘‹
,Ñó»
•ecificGøvôy
)

175 
btSphîeSh≠e
* 
	g•hîeSh≠e
 = 
√w
 btSphîeSh≠e(
btSˇœr
(
ødius
));

	@..\engine\source\quanticvortex\qvPhysicsManager.h

2 #i‚de‡
__PHYSICS_MANAGER_H_


3 
	#__PHYSICS_MANAGER_H_


	)

5 
	~"qvTy≥s.h
"

6 
	~"qvA˘‹Ty≥s.h
"

7 
	~"qvIPhysicsM™agî.h
"

10 
	~"btBuŒëCﬁlisi⁄Comm⁄.h
"

11 
	~"btBuŒëDy«micsComm⁄.h
"

12 
	~"BuŒëCﬁlisi⁄/Cﬁlisi⁄Di•©ch/btGho°Obje˘.h
"

13 
	~"BuŒëCﬁlisi⁄/Brﬂdpha£Cﬁlisi⁄/btOvîœµögPaúCÆlback.h
"

16 
	g«me•a˚


18 
qu©îni⁄ToEuÀr
(c⁄° 
btQu©îni⁄
 &
TQu©
, 
btVe˘‹3
 &
TEuÀr
)

20 
btSˇœr
 
	gW
 = 
TQu©
.
gëW
();

21 
btSˇœr
 
	gX
 = 
TQu©
.
gëX
();

22 
btSˇœr
 
	gY
 = 
TQu©
.
gëY
();

23 
btSˇœr
 
	gZ
 = 
TQu©
.
gëZ
();

25 
	gWSqu¨ed
 = 
W
 * W;

26 
	gXSqu¨ed
 = 
X
 * X;

27 
	gYSqu¨ed
 = 
Y
 * Y;

28 
	gZSqu¨ed
 = 
Z
 * Z;

30 
	gTEuÀr
.
£tX
(
©™2f
(2.0‡* (
Y
 * 
Z
 + 
X
 * 
W
), -
XSqu¨ed
 - 
YSqu¨ed
 + 
ZSqu¨ed
 + 
WSqu¨ed
));

31 
	gTEuÀr
.
£tY
(
asöf
(-2.0‡* (
X
 * 
Z
 - 
Y
 * 
W
)));

32 
	gTEuÀr
.
£tZ
(
©™2f
(2.0‡* (
X
 * 
Y
 + 
Z
 * 
W
), 
XSqu¨ed
 - 
YSqu¨ed
 - 
ZSqu¨ed
 + 
WSqu¨ed
));

34 
	gTEuÀr
 *
úr
::
c‹e
::
RADTODEG
;

38 
«me•a˚
 
	gqv


40 
˛ass
 
	gIEngöeM™agî
;

42 
«me•a˚
 
	ggamög


44 
˛ass
 
	gIA˘‹
;

47 
«me•a˚
 
	gphysics


49 ˛as†
	cPhysicsM™agî
: 
public
 
IPhysicsM™agî


51 
public
:

53 
PhysicsM™agî
(
IEngöeM™agî
* 
ígöeM™agî
);

54 ~
PhysicsM™agî
();

56 
vútuÆ
 
boﬁ
 
öôülize
();

58 
vútuÆ
 
boﬁ
 
föÆize
();

60 
vútuÆ
 
upd©e
–
u32
 
ñ≠£dTimeMs
);

64 
vútuÆ
 
addSh≠e
(
ªÆ
 
ødius
, 
gamög
::
IA˘‹
 *
a˘‹
,Ñó»
•ecificGøvôy
);

67 
vútuÆ
 
addSphîe
(
ªÆ
 
ødius
, 
gamög
::
IA˘‹
 *
a˘‹
,Ñó»
•ecificGøvôy
);

70 
vútuÆ
 
addBox
(c⁄° 
úr
::
c‹e
::
ve˘‹3df
& 
dimísi⁄s
, 
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
);

73 
vútuÆ
 
addC⁄vexHuŒ
–
úr
::
c‹e
::
ve˘‹3df
 *
vîts
, 
s32
 
numPoöts
, 
gamög
::
IA˘‹
 *
a˘‹
, 
ªÆ
 
•ecificGøvôy
);

93 
	g¥iv©e
:

97 
btAlig√dObje˘Aºay
<
	tbtCﬁlisi⁄Sh≠e
*> 
	tCﬁlisi⁄Sh≠es
;

99 
IEngöeM™agî
* 
	gmEngöeM™agî
;

100 
btDy«micsW‹ld
* 
	gmBuŒëDy«micsW‹ld
;

101 
btBrﬂdpha£I¡îÁ˚
* 
	gmBuŒëBrﬂdpha£I¡îÁ˚
;

102 
btCﬁlisi⁄Di•©chî
* 
	gmBuŒëCﬁlisi⁄Di•©chî
;

103 
btDeÁu…Cﬁlisi⁄C⁄figuøti⁄
* 
	gmBuŒëDeÁu…Cﬁlisi⁄C⁄figuøti⁄
;

104 
btC⁄°øötSﬁvî
* 
	gmBuŒëC⁄°øötSﬁvî
;

105 
Cﬁlisi⁄Sh≠es
 
	gmCﬁlisi⁄Obje˘sLi°
;

107 
ªÆ
 
	gmTimeUpd©e
;

	@..\engine\source\quanticvortex\qvQuanticVortex.cpp

27 
	~"qvQu™ticV‹ãx.h
"

29 
	~"qvEngöeM™agî.h
"

31 
«me•a˚
 
	gqv


33 
_QUANTICVORTEX_API_
 
IEngöeM™agî
* 
QUANTICVORTEX_CALLCONV
 
¸óãEngöeM™agî
–
boﬁ
 
fuŒs¸ìn
,

34 
boﬁ
 
vsync
,

35 
u8
 
bôs
,

36 
úr
::
c‹e
::
dimísi⁄2du
 
wödowSize
,

37 
úr
::
c‹e
::
°rögc
 
tôÀ
,

38 
boﬁ
 
ho°Game
,

39 
u8
 
loˇlPœyîs
,

40 
u8
 
aIPœyîs
,

41 
u8
 
ªmŸePœyîs
)

43 
SGameP¨ams
 
	g∑øms
;

44 
	g∑øms
.
	gFuŒs¸ìn
 = 
fuŒs¸ìn
;

45 
	g∑øms
.
	gVsync
 = 
vsync
;

46 
	g∑øms
.
	gBôs
 = 
bôs
;

47 
	g∑øms
.
	gWödowSize
 = 
wödowSize
;

48 
	g∑øms
.
	gTôÀ
 = 
tôÀ
;

49 
	g∑øms
.
	gHo°Game
 = 
ho°Game
;

50 
	g∑øms
.
	gLoˇlPœyîs
 = 
loˇlPœyîs
;

51 
	g∑øms
.
	gAIPœyîs
 = 
aIPœyîs
;

52 
	g∑øms
.
	gRemŸePœyîs
 = 
ªmŸePœyîs
;

54  
¸óãEngöeM™agîEx
(
∑øms
);

58 
_QUANTICVORTEX_API_
 
IEngöeM™agî
* 
QUANTICVORTEX_CALLCONV
 
¸óãEngöeM™agîEx
(c⁄° 
SGameP¨ams
& 
∑øms
)

60 
IEngöeM™agî
* 
	gígöeM™agî
 = 
√w
 
EngöeM™agî
(
∑øms
);

61  
	gígöeM™agî
;

	@..\engine\source\quanticvortex\qvRunningGameState.cpp

2 
	~"qvRu¬ögGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gRu¬ögGameSèã
::
Ru¬ögGameSèã
()

11 :
mSèã
(
S_GAME_STATE_RUNNING
)

15 
Ru¬ögGameSèã
::~RunningGameState()

20 
Ru¬ögGameSèã
::
c⁄figuª
()

25 
Ru¬ögGameSèã
::
íãr
()

30 
Ru¬ögGameSèã
::
Àave
()

35 
Ru¬ögGameSèã
::
upd©e
(
úr
::
u32
 
cuºítTimeMs
, iº::u32 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvRunningGameState.h

2 #i‚de‡
__RUNNING_GAME_STATE_H_


3 
	#__RUNNING_GAME_STATE_H_


	)

5 
	~"qvIGameSèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gvõws


12 
˛ass
 
	gIS˚√Võw
;

15 
«me•a˚
 
	ggamög


18 ˛as†
	cRu¬ögGameSèã
: 
public
 
IGameSèã


20 
public
:

21 
Ru¬ögGameSèã
();

22 ~
Ru¬ögGameSèã
();

24 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
()

26  
	gmSèã
;

29 
vútuÆ
 
c⁄figuª
();

31 
vútuÆ
 
íãr
();

33 
vútuÆ
 
Àave
();

35 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

37 
	g¥iv©e
:

38 c⁄° 
S_STATE
* 
mSèã
;

	@..\engine\source\quanticvortex\qvSingleKeyInputTranslator.cpp

27 
	~"qvSögÀKeyI≈utTøn¶©‹.h
"

29 
	~"qvIEvítM™agî.h
"

30 
	~"qvII≈utRe˚ivî.h
"

33 
«me•a˚
 
	gqv


35 
«me•a˚
 
	göput


38 
	gSögÀKeyI≈utTøn¶©‹
::
SögÀKeyI≈utTøn¶©‹
(
evíts
::
IEvítM™agî
* 
evítM™agî
,

39 
úr
::
EKEY_CODE
 
keyCode
,

40 
EKEY_STATE
 
checkKeySèã
,

41 
boﬁ
 
ªÆTime
,

42 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
,

43 
u32
 
öputTøn¶©‹HashTy≥
,

44 c⁄° 
c8
* 
öputTøn¶©‹Name
)

45 :
mEvítM™agî
(
evítM™agî
),

46 
mKeyCode
(
keyCode
),

47 
mCheckKeySèã
(
checkKeySèã
),

48 
mRólTime
(
ªÆTime
), 
mArgs
(
¨gs
),

49 
mI≈utTøn¶©‹HashTy≥
(
öputTøn¶©‹HashTy≥
)

65 
	gSögÀKeyI≈utTøn¶©‹
::~
SögÀKeyI≈utTøn¶©‹
()

70 
boﬁ
 
SögÀKeyI≈utTøn¶©‹
::
å™¶©e
(
qv
::
öput
::
II≈utRe˚ivî
 *
c⁄ãxt
)

72 
boﬁ
 
å™¶©ed
 = 
Ál£
;

74 
	gmCheckKeySèã
)

76 
	gEKS_PRESSED_OR_DOWN
:

78 if(
c⁄ãxt
->
keyPªs£d
(
mKeyCode
Ë|| c⁄ãxt->
keyDown
(mKeyCode))

80 if(
mRólTime
)

81 
mEvítM™agî
->
åiggî
(
mArgs
);

83 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

85 
	gå™¶©ed
 = 
åue
;

90 
	gEKS_UP_OR_RELEASED
:

92 if(
c⁄ãxt
->
keyUp
(
mKeyCode
Ë|| c⁄ãxt->
keyRñó£d
(mKeyCode))

94 if(
mRólTime
)

95 
mEvítM™agî
->
åiggî
(
mArgs
);

97 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

99 
	gå™¶©ed
 = 
åue
;

104 
	gEKS_PRESSED
:

106 if(
c⁄ãxt
->
keyPªs£d
(
mKeyCode
))

108 if(
mRólTime
)

109 
mEvítM™agî
->
åiggî
(
mArgs
);

111 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

113 
	gå™¶©ed
 = 
åue
;

118 
	gEKS_RELEASED
:

120 if(
c⁄ãxt
->
keyRñó£d
(
mKeyCode
))

122 if(
mRólTime
)

123 
mEvítM™agî
->
åiggî
(
mArgs
);

125 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

127 
	gå™¶©ed
 = 
åue
;

132 
	gEKS_DOWN
:

134 if(
c⁄ãxt
->
keyDown
(
mKeyCode
))

136 if(
mRólTime
)

137 
mEvítM™agî
->
åiggî
(
mArgs
);

139 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

141 
	gå™¶©ed
 = 
åue
;

146 
	gEKS_UP
:

148 if(
c⁄ãxt
->
keyUp
(
mKeyCode
))

150 if(
mRólTime
)

151 
mEvítM™agî
->
åiggî
(
mArgs
);

153 
	gmEvítM™agî
->
íqueueEvít
(
mArgs
);

155 
	gå™¶©ed
 = 
åue
;

161 
å™¶©ed
 = 
Ál£
;

164  
	gå™¶©ed
;

	@..\engine\source\quanticvortex\qvSingleKeyInputTranslator.h

28 #i‚de‡
_SINGLE_KEY_INPUT_TRANSLATOR_H_


29 
	#_SINGLE_KEY_INPUT_TRANSLATOR_H_


	)

31 
	~"qvISögÀKeyI≈utTøn¶©‹.h
"

32 
	~"qvIEvítArgs.h
"

35 
«me•a˚
 
	gqv


37 
«me•a˚
 
	gevíts


39 
˛ass
 
	gIEvítM™agî
;

43 
«me•a˚
 
	göput


45 
˛ass
 
	gII≈utRe˚ivî
;

47 ˛as†
	cSögÀKeyI≈utTøn¶©‹
 : 
public
 
ISögÀKeyI≈utTøn¶©‹


60 
public
:

69 
SögÀKeyI≈utTøn¶©‹
(
evíts
::
IEvítM™agî
* 
evítM™agî
,

70 
úr
::
EKEY_CODE
 
keyCode
,

71 
EKEY_STATE
 
checkKeySèã
,

72 
boﬁ
 
ªÆTime
,

73 
evíts
::
IEvítArgsSh¨edPå
 
¨gs
,

74 
u32
 
öputTøn¶©‹Hashty≥
,

75 c⁄° 
c8
* 
öputTøn¶©‹Name
);

77 
	gvútuÆ
 ~
SögÀKeyI≈utTøn¶©‹
();

79 
vútuÆ
 
u32
 
gëHashId
(Ëc⁄° {  
	gmId
->
	gHash
; }

81 
vútuÆ
 
u32
 
gëHashTy≥
(Ëc⁄° {  
	gmI≈utTøn¶©‹HashTy≥
; }

83 
vútuÆ
 
boﬁ
 
å™¶©e
(
II≈utRe˚ivî
 *
c⁄ãxt
);

85 
	g¥iv©e
:

86 
evíts
::
IEvítM™agî
* 
mEvítM™agî
;

87 
	gúr
::
EKEY_CODE
 
mKeyCode
;

88 
EKEY_STATE
 
	gmCheckKeySèã
;

89 
boﬁ
 
	gmRólTime
;

90 
	gevíts
::
IEvítArgsSh¨edPå
 
mArgs
;

91 
u32
 
	gmI≈utTøn¶©‹HashTy≥
;

92 c⁄° 
ITI_INPUT_TRANSLATOR_ID
* 
	gmId
;

	@..\engine\source\quanticvortex\qvWaintingPlayerGameState.cpp

2 
	~"qvWaötögPœyîGameSèã.h
"

5 
«me•a˚
 
	gqv


7 
«me•a˚
 
	ggamög


10 
	gWaötögPœyîGameSèã
::
WaötögPœyîGameSèã
()

11 :
mSèã
(
S_GAME_STATE_WAITING_PLAYER
)

15 
WaötögPœyîGameSèã
::~WaintingPlayerGameState()

20 
WaötögPœyîGameSèã
::
c⁄figuª
()

25 
WaötögPœyîGameSèã
::
íãr
()

30 
WaötögPœyîGameSèã
::
Àave
()

35 
WaötögPœyîGameSèã
::
upd©e
(
úr
::
u32
 
cuºítTimeMs
, iº::u32 
ñ≠£dTimeMs
)

	@..\engine\source\quanticvortex\qvWaintingPlayerGameState.h

2 #i‚de‡
__WAINTING_PLAYER_GAME_STATE_H_


3 
	#__WAINTING_PLAYER_GAME_STATE_H_


	)

5 
	~"qvIGameSèã.h
"

8 
«me•a˚
 
	gqv


10 
«me•a˚
 
	gvõws


12 
˛ass
 
	gIS˚√Võw
;

15 
«me•a˚
 
	ggamög


18 ˛as†
	cWaötögPœyîGameSèã
: 
public
 
ISèã


20 
public
:

21 
WaötögPœyîGameSèã
();

22 ~
WaötögPœyîGameSèã
();

24 
vútuÆ
 c⁄° 
S_STATE
* 
gëSèã
()

26  
	gmSèã
;

29 
vútuÆ
 
c⁄figuª
();

31 
vútuÆ
 
íãr
();

33 
vútuÆ
 
Àave
();

35 
vútuÆ
 
upd©e
–
u32
 
cuºítTimeMs
, u32 
ñ≠£dTimeMs
);

37 
	g¥iv©e
:

38 c⁄° 
S_STATE
* 
mSèã
;

	@01_Sample\source\main.cpp

2 
	~"qvTy≥s.h
"

3 
	~"sdcSylfurDCGame.h
"

6 
	gqv
::
s32
 
maö
(s32 
¨gc
, 
qv
::
c8
 *
¨gv
[])

8 
sdc
::
SylfurDCGame
 
game
;

10 if(
	ggame
.
öôülize
())

11  
	ggame
.
run
–
¨gc
, 
¨gv
);

	@01_Sample\source\sdcQuitCommand.cpp

2 
	~"sdcQuôComm™d.h
"

4 
	~"qvIEngöeM™agî.h
"

7 
«me•a˚
 
	gsdc


9 
«me•a˚
 
	gc⁄åﬁÀr


11 
	gQuôComm™d
::
QuôComm™d
(
qv
::
IEngöeM™agî
 *
ígöe
)

12 :
IComm™dEvít
(
qv
::
CI_COMMAND_GAME_QUIT
), 
mEngöe
(
ígöe
)

14 
	gmEvítTy≥s
.
push_back
(
qv
::
evíts
::
ET_GAME_QUIT
);

17 
	gQuôComm™d
::~
QuôComm™d
()

19 
mEvítTy≥s
.
£t_‰ì_whí_de°royed
(
Ál£
);

20 
	gmEvítTy≥s
.
˛ór
();

23 
	gQuôComm™d
::
execuãComm™d
(c⁄° 
qv
::
evíts
::
IEvítArgs
 *
¨gs
)

25 
mEngöe
->
£tQuô
(
åue
);

26 
	gmEngöe
->
gëDevi˚
()->
gëLoggî
()->
log
("quitÉvent generated");

	@01_Sample\source\sdcQuitCommand.h

2 #i‚de‡
__SDC_CONTROLLER_QUIT_COMMAND_H_


3 
	#__SDC_CONTROLLER_QUIT_COMMAND_H_


	)

5 
	~"qvIEvítComm™d.h
"

7 
«me•a˚
 
	gqv


9 
˛ass
 
	gIEngöeM™agî
;

11 
«me•a˚
 
	gevíts


13 
˛ass
 
	gIEvítArgs
;

17 
«me•a˚
 
	gsdc


19 
«me•a˚
 
	gc⁄åﬁÀr


28 ˛as†
	cQuôComm™d
: 
public
 
qv
::
evíts
::
IEvítComm™d


30 
¥iv©e
:

31 
qv
::
IEngöeM™agî
* 
mEngöe
;

32 
	g¨øy
<c⁄° 
	gqv
::
evíts
::
ET_EVENT_TYPE
*> 
mEvítTy≥s
;

34 
	gpublic
:

35 
QuôComm™d
(
qv
::
IEngöeM™agî
* 
ígöe
);

36 
	gvútuÆ
 ~
QuôComm™d
();

38 
vútuÆ
 c⁄° 
	g¨øy
<c⁄° 
	gqv
::
evíts
::
ET_EVENT_TYPE
*>& 
li°íEvítTy≥s
() const

40  
mEvítTy≥s
;

43 
vútuÆ
 
execuãComm™d
(c⁄° 
qv
::
evíts
::
IEvítArgs
* 
¨gs
);

	@01_Sample\source\sdcSylfurDCGame.cpp

2 
	~"sdcSylfurDCGame.h
"

4 
	~"qvSGameP¨ams.h
"

5 
	~"qvIHum™Võw.h
"

7 
	~"sdcQuôComm™d.h
"

9 
«me•a˚
 
	gsdc


11 
«me•a˚
 
	göput


13 
	gqv
::
öput
::
IT_INPUT_TRANSLATOR_ID
 
IT_QUIT
("IT_QUIT");

17 
«me•a˚
 
	gsdc


20 
	gSylfurDCGame
::
SylfurDCGame
()

23 
qv
::
SGameP¨ams
 
∑øms
;

25 
	g∑øms
.
	gBôs
 = 32;

26 
	g∑øms
.
	gFuŒs¸ìn
 = 
Ál£
;

27 
	g∑øms
.
	gTôÀ
 = "Sylfur D.C. - Dimencional Chronical";

28 
	g∑øms
.
	gVsync
 = 
Ál£
;

29 
	g∑øms
.
	gWödowSize
.
	gWidth
 = 800;

30 
	g∑øms
.
	gWödowSize
.
	gHeight
 = 600;

32 
	gmEngöe
 = 
qv
::
¸óãEngöeM™agîEx
(
∑øms
);

35 
	gSylfurDCGame
::~
SylfurDCGame
()

37 
mEngöe
->
dr›
();

40 
boﬁ
 
	gSylfurDCGame
::
öôülize
()

42 
boﬁ
 
öôülized
 = 
mEngöe
->
öôülize
();

44 if(!
	göôülized
)

45  
	gÁl£
;

47 
	gqv
::
gamög
::
IGameLogic
* 
gameLogic
 = 
mEngöe
->
addGameLogic
();

48 
	gqv
::
gamög
::
AI_ACTOR_ID
* 
∂ayîID
 = 
√w
 
qv
::gaming::AI_ACTOR_ID("PlayerID");

49 
	gqv
::
võws
::
IHum™Võw
* 
võw
 = 
gameLogic
->
addHum™Võw
("SylfurDCVõw", 
∂ayîID
);

55 
	gqv
::
öput
::
ISögÀKeyI≈utTøn¶©‹
* 
quô
 =

56 
mEngöe
->
gëI≈utRe˚ivî
()->
addSögÀKeyTøn¶©‹
(
öput
::
IT_QUIT_TRANSLATOR
, 
úr
::
KEY_ESCAPE
,

57 
qv
::
öput
::
EKS_PRESSED_OR_DOWN
, qv::
evíts
::
ET_GAME_QUIT
, 
åue
);

62 
	gqv
::
evíts
::
IComm™dEvít
* 
comm™d
 = 
√w
 
c⁄åﬁÀr
::
QuôComm™d
(
mEngöe
);

63 
	gmEngöe
->
gëEvítM™agî
()->
ªgi°îComm™dEvít
(
comm™d
);

69 
	gqv
::
võws
::
IEÀmítVõw
* 
s˚√Võw
 = 
võw
->
addEÀmítVõw
("DeÁu…S˚√",
qv
::võws::
EVT_ELEMENT_VIEW_SCENE
);

70 
	gqv
::
võws
::
IS˚√Võw
* 
s˚√
 = 
°©ic_ˇ°
<
qv
::võws::IS˚√Võw*>(
s˚√Võw
);

72 
	gs˚√
->
lﬂdS˚√
("../../../media/irrb-0.4.zip");

80  
	göôülized
;

83 
s32
 
	gSylfurDCGame
::
run
(s32 
¨gc
, 
c8
* 
¨gv
[])

85  
	gmEngöe
->
run
();

	@01_Sample\source\sdcSylfurDCGame.h

2 #i‚de‡
__SYLFUR_DC_GAME_H_


3 
	#__SYLFUR_DC_GAME_H_


	)

5 
	~"qvQu™ticV‹ãx.h
"

8 
«me•a˚
 
	gsdc


10 ˛as†
	cSylfurDCGame


12 
	g¥iv©e
:

13 
qv
::
IEngöeM™agî
* 
mEngöe
;

15 
	gpublic
:

16 
SylfurDCGame
();

17 
	gvútuÆ
 ~
SylfurDCGame
();

19 
boﬁ
 
öôülize
();

21 
s32
 
run
(s32 
¨gc
, 
c8
* 
¨gv
[]);

	@
1
.
0
130
5704
..\engine\include\qvActorTypes.h
..\engine\include\qvCommandTypes.h
..\engine\include\qvCompileConfig.h
..\engine\include\qvConcurrentArray.h
..\engine\include\qvConfig.h
..\engine\include\qvConfigProfile.h
..\engine\include\qvEventTypes.h
..\engine\include\qvGameParameters.h
..\engine\include\qvGameStateTypes.h
..\engine\include\qvGameViewTypes.h
..\engine\include\qvHashFunctions.h
..\engine\include\qvIAIView.h
..\engine\include\qvIActor.h
..\engine\include\qvIActorAddedEventArgs.h
..\engine\include\qvIActorFactory.h
..\engine\include\qvIActorManager.h
..\engine\include\qvIAnyKeyInputTranslator.h
..\engine\include\qvICommand.h
..\engine\include\qvIElementView.h
..\engine\include\qvIElementViewFactory.h
..\engine\include\qvIEngineManager.h
..\engine\include\qvIEventArgs.h
..\engine\include\qvIEventArgsFactory.h
..\engine\include\qvIEventCommand.h
..\engine\include\qvIEventManager.h
..\engine\include\qvIGame.h
..\engine\include\qvIGameLogic.h
..\engine\include\qvIGameLogicFactory.h
..\engine\include\qvIGameState.h
..\engine\include\qvIGameStateMachine.h
..\engine\include\qvIGameView.h
..\engine\include\qvIGameViewFactory.h
..\engine\include\qvIGameViewManager.h
..\engine\include\qvIGuiView.h
..\engine\include\qvIHumanView.h
..\engine\include\qvIInputCommand.h
..\engine\include\qvIInputReceiver.h
..\engine\include\qvIInputReceiverDriverFactory.h
..\engine\include\qvIInputReceiverFactory.h
..\engine\include\qvIInputTranslator.h
..\engine\include\qvIInputTranslatorFactory.h
..\engine\include\qvIMemoryManager.h
..\engine\include\qvINetworkView.h
..\engine\include\qvIPhysicsActor.h
..\engine\include\qvIPhysicsManager.h
..\engine\include\qvIPhysicsView.h
..\engine\include\qvIProcess.h
..\engine\include\qvIProcessManager.h
..\engine\include\qvIRecorderView.h
..\engine\include\qvIReferenceCount.h
..\engine\include\qvISceneView.h
..\engine\include\qvISingleKeyInputTranslator.h
..\engine\include\qvIState.h
..\engine\include\qvIStateMachine.h
..\engine\include\qvITimer.h
..\engine\include\qvKeyTypes.h
..\engine\include\qvPrerequisites.h
..\engine\include\qvProtothread.h
..\engine\include\qvQuanticVortex.h
..\engine\include\qvSActorParams.h
..\engine\include\qvSEventArgs.h
..\engine\include\qvSGameArgs.h
..\engine\include\qvSGameData.h
..\engine\include\qvSGameLogicParams.h
..\engine\include\qvSGameParams.h
..\engine\include\qvSHashedString.h
..\engine\include\qvSPlayerScore.h
..\engine\include\qvSingletonHolder.h
..\engine\include\qvStateTypes.h
..\engine\include\qvTypes.h
..\engine\source\quanticvortex\drivers\irrlicht\qvDefaultInputReceiverDriverFactory.cpp
..\engine\source\quanticvortex\drivers\irrlicht\qvDefaultInputReceiverDriverFactory.h
..\engine\source\quanticvortex\drivers\irrlicht\qvInputEventHandlerIrrlicht.h
..\engine\source\quanticvortex\drivers\irrlicht\qvSceneViewIrrlicht.cpp
..\engine\source\quanticvortex\drivers\irrlicht\qvSceneViewIrrlicht.h
..\engine\source\quanticvortex\qvActor.cpp
..\engine\source\quanticvortex\qvActor.h
..\engine\source\quanticvortex\qvActorManager.cpp
..\engine\source\quanticvortex\qvActorManager.h
..\engine\source\quanticvortex\qvActorMotion.cpp
..\engine\source\quanticvortex\qvActorMotion.h
..\engine\source\quanticvortex\qvActorMotionState.h
..\engine\source\quanticvortex\qvAnyKeyInputTranslator.cpp
..\engine\source\quanticvortex\qvAnyKeyInputTranslator.h
..\engine\source\quanticvortex\qvDefaultElementViewFactory.cpp
..\engine\source\quanticvortex\qvDefaultElementViewFactory.h
..\engine\source\quanticvortex\qvDefaultEventArgsFactory.cpp
..\engine\source\quanticvortex\qvDefaultEventArgsFactory.h
..\engine\source\quanticvortex\qvDefaultGameViewFactory.cpp
..\engine\source\quanticvortex\qvDefaultGameViewFactory.h
..\engine\source\quanticvortex\qvEngineInputTranslatorFactory.cpp
..\engine\source\quanticvortex\qvEngineInputTranslatorFactory.h
..\engine\source\quanticvortex\qvEngineManager.cpp
..\engine\source\quanticvortex\qvEngineManager.h
..\engine\source\quanticvortex\qvEventArgs.cpp
..\engine\source\quanticvortex\qvEventArgs.h
..\engine\source\quanticvortex\qvEventManager.cpp
..\engine\source\quanticvortex\qvEventManager.h
..\engine\source\quanticvortex\qvGameLogic.cpp
..\engine\source\quanticvortex\qvGameLogic.h
..\engine\source\quanticvortex\qvGameParameters.cpp
..\engine\source\quanticvortex\qvGameStateMachine.cpp
..\engine\source\quanticvortex\qvGameStateMachine.h
..\engine\source\quanticvortex\qvGuiView.cpp
..\engine\source\quanticvortex\qvGuiView.h
..\engine\source\quanticvortex\qvHashFunctions.cpp
..\engine\source\quanticvortex\qvHumanView.cpp
..\engine\source\quanticvortex\qvHumanView.h
..\engine\source\quanticvortex\qvInitializatingGameState.cpp
..\engine\source\quanticvortex\qvInitializatingGameState.h
..\engine\source\quanticvortex\qvInputReceiver.cpp
..\engine\source\quanticvortex\qvInputReceiver.h
..\engine\source\quanticvortex\qvLoadingGameState.cpp
..\engine\source\quanticvortex\qvLoadingGameState.h
..\engine\source\quanticvortex\qvMenuGameState.cpp
..\engine\source\quanticvortex\qvMenuGameState.h
..\engine\source\quanticvortex\qvPhysicsManager.cpp
..\engine\source\quanticvortex\qvPhysicsManager.h
..\engine\source\quanticvortex\qvQuanticVortex.cpp
..\engine\source\quanticvortex\qvRunningGameState.cpp
..\engine\source\quanticvortex\qvRunningGameState.h
..\engine\source\quanticvortex\qvSingleKeyInputTranslator.cpp
..\engine\source\quanticvortex\qvSingleKeyInputTranslator.h
..\engine\source\quanticvortex\qvWaintingPlayerGameState.cpp
..\engine\source\quanticvortex\qvWaintingPlayerGameState.h
01_Sample\source\main.cpp
01_Sample\source\sdcQuitCommand.cpp
01_Sample\source\sdcQuitCommand.h
01_Sample\source\sdcSylfurDCGame.cpp
01_Sample\source\sdcSylfurDCGame.h
